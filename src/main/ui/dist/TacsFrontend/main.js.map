{"version":3,"sources":["./src/app/_services/images.service.ts","./src/app/game-surrendered/game-surrendered.component.ts","./src/app/game-surrendered/game-surrendered.component.html","./src/app/shared/models/action.model.ts","./src/app/score-board/score-board.component.ts","./src/app/score-board/score-board.component.html","./src/app/_services/users.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/game-surrender/game-surrender.component.ts","./src/app/game-surrender/game-surrender.component.html","./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/app/_services/auth.service.ts","./src/app/game-show-municipality-statistics/game-show-municipality-statistics.component.ts","./src/app/game-show-municipality-statistics/game-show-municipality-statistics.component.html","./src/app/game-pass-turn/game-pass-turn.component.ts","./src/app/game-pass-turn/game-pass-turn.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/models/provinceInfo.model.ts","./src/app/statistics-show/statistics-show.component.ts","./src/app/statistics-show/statistics-show.component.html","./src/app/_services/token-storage.service.ts","./src/app/shared/models/gameInfo.model.ts","./src/app/shared/models/gameState.model.ts","./src/app/_services/games.service.ts","./src/app/score-board-show/score-board-show.component.ts","./src/app/score-board-show/score-board-show.component.html","./src/app/game-create/game-create.component.ts","./src/app/game-create/game-create.component.html","./src/app/board-user/board-user.component.ts","./src/app/board-user/board-user.component.html","./src/app/shared/models/municipality.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/models/gameStyle.model.ts","./src/app/rival/rival.component.ts","./src/app/rival/rival.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/game-finished-show-winner/game-finished-show-winner.component.ts","./src/app/game-finished-show-winner/game-finished-show-winner.component.html","./src/app/app.module.ts","./src/app/_services/provinces.service.ts","./src/app/_services/statistics.service.ts","./src/app/game-play/game-play.component.ts","./src/app/game-play/game-play.component.html","./src/app/_services/coordinates.service.ts","./src/app/game-turn-changed/game-turn-changed.component.ts","./src/app/game-turn-changed/game-turn-changed.component.html","./src/app/material-module.ts","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/_services/score-board-show.service.ts","./src/app/game-movement-successful/game-movement-successful.component.ts","./src/app/game-movement-successful/game-movement-successful.component.html","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/game-not-turn-to-play/game-not-turn-to-play.component.ts","./src/app/game-not-turn-to-play/game-not-turn-to-play.component.html","./src/app/shared/models/rival.model.ts","./src/app/game-move-gauchos/game-move-gauchos.component.ts","./src/app/game-move-gauchos/game-move-gauchos.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+D;AACpB;;;AAG3C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAMK,MAAM,aAAa;IAaxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAXpC,aAAQ,GAAG,8HAA8H;QAEzI,gBAAW,GAAG,sCAAsC;QAEpD,qBAAqB;QACrB,YAAO,GAAG,oCAAoC,CAAC;QAE/C,YAAO,GAAG,+BAA+B,CAAC;QAC1C,uBAAkB,GAAG,KAAK,CAAC;QAC3B,iBAAY,GAAG,mBAAmB,CAAC;IAGnC,CAAC;IACD,kGAAkG;IAElG,SAAS,CAAC,WAAmB;QAC3B,IAAI,oBAAoB,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,kBAAkB,GAAC,WAAW,GAAC,IAAI,CAAC,YAAY,EAChG,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9B,CAAC;;0EAvBU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAHZ,MAAM;6FAGP,aAAa;cAJzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,wBAAwB;IAEnC,YACS,SAAiD;QAAjD,cAAS,GAAT,SAAS,CAAwC;IAC1D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;IAER,CAAC;;gGAZU,wBAAwB;wGAAxB,wBAAwB;QCRrC,wEAAqB;QAAA,qGAAgC;QAAA,4DAAK;QAC1D,yEACI;QAAA,4EAAwD;QAArB,gJAAS,cAAU,IAAC;QAAC,6DAAE;QAAA,4DAAS;QACvE,4DAAM;;6FDKO,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,MAAM;IAKjB,YAAY,SAAiB,EAAE,UAAkB,EAAE,OAAe;QAChE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACO;AAET;AACV;AACY;AAC4B;;;;;;;;;;;;;;ICqBnF,4EACuD;IAAA,wFAAwB;IAAA,4DAAY;;;IAKzF,sFAAoD;IAAA,8DAAG;IAAA,4DAAkB;;;IACzE,2EAAoC;IAAA,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,+EAAc;;;IAGlD,sFAAoD;IAAA,oEAAS;IAAA,4DAAkB;;;IAC/E,2EAAoC;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,qFAAoB;;;IAGxD,sFAAmD;IAAA,gEAAK;IAAA,4DAAkB;;;IAC1E,2EAAoC;IAAA,uDAAgC;;IAAA,4DAAW;;;IAA3C,0DAAgC;IAAhC,2JAAgC;;;IAGpE,sFAAmD;IAAA,oEAAS;IAAA,4DAAkB;;;IAC9E,2EAAoC;IAAA,uDAA8B;IAAA,4DAAW;;;IAAzC,0DAA8B;IAA9B,+FAA8B;;;IAGlE,kFAAmC;IAAA,qEAAU;IAAA,4DAAkB;;;;IAC/D,2EACE;IAAA,6EAAuF;IAA/C,gYAA8C;IAAC,2EAAU;IAAA,qEAAU;IAAA,4DAAW;IAAA,4DAAS;IACjI,4DAAW;;;IAIX,kFACE;IAAA,oGACF;IAAA,4DAAkB;;;IAEpB,4EAAqE;;;IACrE,qEAAoE;;;IACpE,gFAA8F;;;IAA9E,8FAA6B;;;;AD9C1C,MAAM,mBAAmB;IAE9B,YAAmB,MAAiB,EAAU,YAA0B;QAArD,WAAM,GAAN,MAAM,CAAW;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAExE,qBAAgB,GAAa,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAI9E,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IATyE,CAAC;IAc7E,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,EAAQ,CAAC;IACnD,CAAC;IAED,SAAS;QAEP,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;QACtC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEhE,IAAG,IAAI,CAAC,MAAM,IAAI,CAAC;gBACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAO,IAAI,CAAC,CAAC;QACvD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,EAAU;QACjC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAuB,EAAE;YACxC,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;;sFApDU,mBAAmB;mGAAnB,mBAAmB;kEAanB,8DAAO;kEACP,wEAAY;;;;;;QC9BzB,yEACE;QAAA,gEACA;QAAA,oFAEE;QAAA,4EAAW;QAAA,qFAA0B;QAAA,4DAAY;QACjD,0FACE;QAAA,sEACA;QAAA,sEACF;QAAA,4DAAuB;QAEvB,4FAAuD;QAEzD,4DAAiB;QACf,uFAA8D;QAC9D,6EAIE;QADF,4IAAS,kBAAc,IAAC;QACtB,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC7B,4DAAS;QACT,6EAIE;QADF,4IAAS,eAAW,IAAC;QACnB,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QAET,6HACuD;QAC3D,4DAAM;QACN,2EACE;QAAA,iFACE;QAAA,6EACE;QAAA,0IAAoD;QACpD,4HAAoC;QACtC,qEAAe;QACf,6EACE;QAAA,0IAAoD;QACpD,4HAAoC;QACtC,qEAAe;QACf,6EACE;QAAA,0IAAmD;QACnD,4HAAoC;QACtC,qEAAe;QACf,6EACE;QAAA,0IAAmD;QACnD,4HAAoC;QACtC,qEAAe;QACf,6EACE;QAAA,0IAAmC;QACnC,4HACE;QAEJ,qEAAe;QAEf,6EACE;QAAA,0IACE;QAEJ,qEAAe;QACf,wIAAoD;QACpD,0HAA0D;QAC1D,wIAA6E;QAC/E,4DAAY;QACZ,gFAAwG;QAC1G,4DAAM;;;QA5DoB,0DAAmB;QAAnB,gFAAmB;QAQlB,0DAAc;QAAd,oEAAc;QAErC,0DAC6C;QAD7C,4PAC6C;QAK7C,0DAC6C;QAD7C,4PAC6C;QAKlC,0DAC2C;QAD3C,kLAC2C;QAG7C,0DAAyB;QAAzB,sFAAyB;QA6BlB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QACX,0DAA6B;QAA7B,mJAA6B;QAE9D,0DAAoC;QAApC,mJAAoC;;6FDhDxC,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;kMAeqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AE9BzB;AAAA;AAAA;AAAA;AAA2C;;;AAK3C,MAAM,OAAO,GAAG,4BAA4B,CAAC;AAKtC,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,YAAY;QAEV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,OAAO,GAAG,OAAO,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAEhF,CAAC;;wEAVU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICuBtC,sEAAsC;IAAA,yFAA8B;IAAA,4DAAM;;;IAC1E,sEACE;IAAA,mHACF;IAAA,4DAAM;;;IACN,sEACE;IAAA,oHACF;IAAA,4DAAM;;;IAPR,0EACE;IAAA,2HAAsC;IACtC,2HACE;IAEF,2HACE;IAEJ,4DAAM;;;;IAPC,0DAAgC;IAAhC,qFAAgC;IAChC,0DAAiC;IAAjC,sFAAiC;IAGjC,0DAAiC;IAAjC,sFAAiC;;;IAiBtC,sEAAmC;IAAA,+EAAoB;IAAA,4DAAM;;;IAC7D,sEACE;IAAA,qFACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAAmC;IACnC,4HACE;IAEJ,4DAAM;;;;IAJC,0DAA6B;IAA7B,qFAA6B;IAC7B,0DAA0B;IAA1B,kFAA0B;;;IAiB/B,sEAAsC;IAAA,2FAA2B;IAAA,4DAAM;;;IACvE,sEACE;IAAA,8GACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAAsC;IACtC,4HACE;IAEJ,4DAAM;;;;IAJC,0DAAgC;IAAhC,qFAAgC;IAChC,0DAAiC;IAAjC,sFAAiC;;;IAS1C,0EACE;IAAA,6EAAiB;IAAA,gEAAM;IAAA,uDACzB;IAAA,4DAAM;;;IADmB,0DACzB;IADyB,8FACzB;;;;IAvEF,6EAOE;IAJA,wZAAuC;IAIvC,yEACE;IAAA,2EAAsB;IAAA,4EAAiB;IAAA,4DAAQ;IAC/C,+EAUA;IANE,yVAA2B;IAJ7B,4DAUA;IAAA,qHACE;IAQJ,4DAAM;IACN,yEACE;IAAA,4EAAmB;IAAA,iEAAK;IAAA,4DAAQ;IAChC,iFASA;IALE,uVAAwB;IAJ1B,4DASA;IAAA,uHACE;IAKJ,4DAAM;IACN,0EACE;IAAA,6EAAsB;IAAA,2EAAU;IAAA,4DAAQ;IACxC,iFASA;IALE,0VAA2B;IAJ7B,4DASA;IAAA,uHACE;IAKJ,4DAAM;IACN,0EACE;IAAA,8EAA0C;IAAA,mEAAO;IAAA,4DAAS;IAC5D,4DAAM;IAEN,uHACE;IAEJ,4DAAO;;;;;;;IA3DD,0DAA2B;IAA3B,yFAA2B;IAMH,0DAAuC;IAAvC,8FAAuC;IAgB/D,0DAAwB;IAAxB,sFAAwB;IAKA,0DAAoC;IAApC,8FAAoC;IAa5D,0DAA2B;IAA3B,yFAA2B;IAKH,0DAAuC;IAAvC,8FAAuC;IAWlC,0DAAqC;IAArC,wGAAqC;;;IAKxE,0EACE;IAAA,yFACF;IAAA,4DAAM;;ADvEL,MAAM,iBAAiB;IAM5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAL5C,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;IAE8B,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;kFAtBU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACE;QAAA,wEAAwB;QAAA,sEAAW;QAAA,4DAAK;QACtC,yEACE;QAAA,gHAOE;QAmEF,6GACE;QAEJ,4DAAM;QACR,4DAAM;;QA7EA,0DAAqB;QAArB,mFAAqB;QAyEU,0DAAoB;QAApB,kFAAoB;;6FDrE9C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,sBAAsB;IAEjC,YACS,SAA+C;QAA/C,cAAS,GAAT,SAAS,CAAsC;IACxD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;IAER,CAAC;;4FAhBU,sBAAsB;sGAAtB,sBAAsB;QCRnC,wEAAqB;QAAA,iIAAwC;QAAA,4DAAK;QAElE,yEACI;QAAA,4EAA4E;QAAzC,8IAAS,cAAU,IAAC;QAAqB,oEAAS;QAAA,4DAAS;QAC9F,4EAA2E;QAAxC,8IAAS,cAAU,IAAC;QAAoB,mEAAQ;QAAA,4DAAS;QAChG,4DAAM;;6FDGO,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AAGjC;AAEuC;;;;;;;;;;;;;;;ICqB7E,4EACuD;IAAA,wFAAwB;IAAA,4DAAY;;;IAWnF,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF0C,mFAAuB;IAC5E,0DACF;IADE,4FACF;;;IAQJ,4EACE;IAAA,4FACF;IAAA,4DAAY;;ADnCnB,MAAM,mBAAmB;IAW9B,YAAoB,YAAyB,EAAS,MAAiB,EAC7D,iBAAoC,EAAU,YAA0B;QAD9D,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAC7D,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QATlF,UAAK,GAAe,IAAI,KAAK,EAAE,CAAC;QAGhC,UAAK,GAAG,IAAI,wDAAS,CAAC;YACpB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IAGmF,CAAC;IAEvF,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAC3C;YACE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CACF,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY;aACrE,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAClC,CAAC;QAEJ,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE,EAAC,CAAC,CACvD,CAAC;IACJ,CAAC;IAEO,OAAO,CAAC,KAAa;QAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAExC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACtF,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpE,CAAC;IAAA,CAAC;IAEF,wBAAwB;QACtB,IAAI,UAAU,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;QAClC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QAE9B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CAC5D,IAAI,CAAC,EAAE;YACL,UAAU,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;gBACxC,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAkC;QAChC,IAAI,UAAU,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC3C,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;QAE5D,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChE,IAAI,CAAC,EAAE;YACL,UAAU,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE;gBACxC,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,OAAO;gBACf,IAAI,EAAE,UAAU;gBAChB,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;sFA3EU,mBAAmB;mGAAnB,mBAAmB;QChBhC,gEAEA;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAuB;QAAA,sFAAiB;QAAA,4DAAK;QAC/C,4DAAM;QACN,yEACE;QAAA,uEACE;QAAA,oEAAG;QAAA,wGAAuC;QAAA,4DAAI;QAC9C,qFACE;QAAA,6EAAW;QAAA,sFAA0B;QAAA,4DAAY;QACjD,2FACE;QAAA,uEACA;QAAA,uEACF;QAAA,4DAAuB;QACvB,wFAAwE;QACxE,8FAAuD;QAEzD,4DAAiB;QACjB,8EAIE;QADF,4IAAS,8BAA0B,IAAC;QAClC,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC7B,4DAAS;QACT,8HACuD;QAEzD,4DAAO;QACP,iEACA;QAAA,4EACI;QAAA,2EACE;QAAA,qEAAG;QAAA,6FAA4B;QAAA,4DAAI;QACnC,sFACE;QAAA,6EAAW;QAAA,8EAAkB;QAAA,4DAAY;QACzC,wEACA;QAAA,8FACE;QAAA,gIACE;;QAEJ,4DAAmB;QACrB,4DAAiB;QACjB,8EAGE;QADD,4IAAS,wCAAoC,IAAC;QAC7C,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC7B,4DAAS;QACT,8HACE;QAIJ,4DAAM;QACV,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QA9C4B,2DAAmB;QAAnB,gFAAmB;QAIR,0DAAc;QAAd,oEAAc;QAKjD,0DACuC;QADvC,4PACuC;QAI5B,0DAC2C;QAD3C,kLAC2C;QAIlD,0DAA4B;QAA5B,yFAA4B;QAOZ,2DAA0C;QAA1C,wJAA0C;QAM1D,0DAAoF;QAApF,qJAAoF;QAIzE,0DAAgF;QAAhF,kJAAgF;;6FDjC5F,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAA2C;AACoB;;;AAG/D,MAAM,QAAQ,GAAG,iCAAiC,CAAC;AAEnD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKK,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,KAAK,CAAC,WAAW;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;;sEAjBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;;;;;;;;;;ICDzE,sEACA;IAAA,wEAAqB;IAAA,oEAAG;IAAA,uDAAuB;IAAA,4DAAI;IAAA,4DAAK;IACxD,oEACA;IAAA,2EACI;IAAA,gFACI;IAAA,8EAAsB;IAAA,0EAAe;IAAA,4DAAW;IAChD,wEAAY;IAAA,wDAAuC;IAAA,4DAAK;IAC5D,4DAAgB;IAChB,iFACI;IAAA,+EAAsB;IAAA,wEAAY;IAAA,4DAAW;IAC7C,yEAAY;IAAA,wDAA6D;IAAA,4DAAK;IAClF,4DAAgB;IAChB,iFACI;IAAA,+EAAsB;IAAA,wEAAY;IAAA,4DAAW;IAC7C,yEAAY;IAAA,wDAAkD;IAAA,4DAAK;IACvE,4DAAgB;IAChB,iFACI;IAAA,+EAAsB;IAAA,gEAAI;IAAA,4DAAW;IACrC,yEAAY;IAAA,wDAA6C;IAAA,4DAAK;IAClE,4DAAgB;IACpB,4DAAW;IACX,0EACI;IAAA,6EAAwD;IAArB,2UAAoB;IAAC,8DAAE;IAAA,4DAAS;IACvE,4DAAM;IACN,4DAAM;;;IAvBkB,0DAAuB;IAAvB,2FAAuB;IAClB,0DAA0B;IAA1B,kKAA0B;IAInC,0DAAuC;IAAvC,oHAAuC;IAIvC,0DAA6D;IAA7D,0IAA6D;IAI7D,0DAAkD;IAAlD,+HAAkD;IAIlD,0DAA6C;IAA7C,0HAA6C;;;IAQjE,yEAA6C;;ADhBtC,MAAM,uCAAuC;IAOlD,YAAmB,SAAgE,EACjD,IAAkB,EAClD,YAA2B;QAFV,cAAS,GAAT,SAAS,CAAuD;QACjD,SAAI,GAAJ,IAAI,CAAc;QAJpD,uBAAkB,GAAW,EAAE,CAAC;QAChC,cAAS,GAAG,IAAI,CAAC;QAKf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAC7D,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACtC;iBAEI;gBACH,IAAI,CAAC,kBAAkB,GAAG,mCAAmC,CAAC;aAC/D;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;8HArCU,uCAAuC,0MAQxC,wEAAe;uHARd,uCAAuC;QCVpD,oIACA;QAyBA,mJAA+B;;QA1B1B,gFAAkB;QA0BV,0DAAiB;QAAjB,+EAAiB;;6FDhBjB,uCAAuC;cALnD,uDAAS;eAAC;gBACT,QAAQ,EAAE,uCAAuC;gBACjD,WAAW,EAAE,oDAAoD;gBACjE,SAAS,EAAE,CAAC,mDAAmD,CAAC;aACjE;;sBASI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AElB3B;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,qBAAqB;IAEhC,YACS,SAA8C;QAA9C,cAAS,GAAT,SAAS,CAAqC;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,QAAQ;IAER,CAAC;;0FAhBU,qBAAqB;qGAArB,qBAAqB;QCRlC,wEAAqB;QAAA,2HAA4C;QAAA,4DAAK;QAEtE,yEACI;QAAA,4EAA4E;QAAzC,6IAAS,cAAU,IAAC;QAAqB,oEAAS;QAAA,4DAAS;QAC9F,4EAA2E;QAAxC,6IAAS,cAAU,IAAC;QAAoB,mEAAQ;QAAA,4DAAS;QAChG,4DAAM;;6FDGO,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,aAAa;IAGxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,mDAAmD;QAEnD;;;;;;;YAOI;IACN,CAAC;;0EAhBU,aAAa;6FAAb,aAAa;QCR1B,yEACI;QAAA,4EACE;QAAA,oEAAG;QAAA,uDAAa;QAAA,4DAAI;QACtB,4DAAS;QACX,4DAAM;;QAFC,0DAAa;QAAb,4EAAa;;6FDMT,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAO,MAAM,YAAY;IAIvB,YAAY,IAAY,EAAE,kBAAyB;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;CAEF;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;;;;ICavD,qEACE;IAAA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IAC1B,4DAAK;;;IAFC,0DAAe;IAAf,+EAAe;IACf,0DAAe;IAAf,+EAAe;;ADRhC,MAAM,uBAAuB;IAKlC,YAAmB,SAAgD,EACjC,IAAyB;QADxC,cAAS,GAAT,SAAS,CAAuC;QACjC,SAAI,GAAJ,IAAI,CAAqB;QAJ3D,eAAU,GAAe,EAAE,CAAC;QAKxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEJ,QAAQ;QACN,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACpD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;8FAjBU,uBAAuB,0MAMxB,wEAAe;uGANd,uBAAuB;QCRpC,wEAAqB;QAAA,wEAAa;QAAA,4DAAK;QACvC,yEACI;QAAA,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,yEAAgB;QAAA,4EAAgB;QAAA,4DAAK;QACrC,yEAAgB;QAAA,8EAAkB;QAAA,4DAAK;QACzC,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,mHACE;QAGJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,qEACM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACZ,4DAAM;QAEN,2EACI;QAAA,8EAAwD;QAArB,gJAAS,cAAU,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACvE,4DAAM;;QAhBgB,2DAAmD;QAAnD,mFAAmD;;6FDN5D,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;uHAOyC,GAAG;sBAAxC,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEd3B;AAAA;AAAA;AAA2C;;AAE3C,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,OAAO;QACL,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,SAAS,CAAC,KAAa;QAC5B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ;QACb,OAAO,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAEM,QAAQ,CAAC,IAAI;QAClB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC;;sFAxBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAO,MAAM,QAAQ;IAMnB,YAAY,gBAA+B,EAAE,kBAAyB,EAAE,YAAmB,EAAE,SAAiB;QAC5G,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;CAEF;;;;;;;;;;;;;ACfD;AAAA;AAAA,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,+CAAO;IACP,uDAAW;IACX,iDAAQ;IACR,mDAAS;AACX,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAyC;AACoB;;;AAM7D,MAAM,OAAO,GAAG,4BAA4B,CAAC;AAC7C,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKK,MAAM,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,UAAU,CAAC,QAAkB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE;YACvC,gBAAgB,EAAE,QAAQ,CAAC,gBAAgB;YAC3C,YAAY,EAAE,QAAQ,CAAC,YAAY;YACnC,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB;YAC/C,UAAU,EAAE,QAAQ,CAAC,UAAU;SAChC,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,OAAO,GAAG,OAAO,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,cAAc,CAAC,IAAU,EAAE,EAAQ;QAEjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,OAAO,GAAG,WAAW;YACrD,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,MAAM;cAClD,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,sBAAsB,CAAC,IAAU;QAE/B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;IAClH,CAAC;IAED,WAAW,CAAC,MAAc,EAAE,EAAU;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,QAAQ,EAAE;YACnE,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,EAAU;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,UAAU,EAAE;YACrE,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,EAAU;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,sBAAsB,EAAE;YACjF,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,WAAW,EAAE,WAAW,CAAC,CAAC;IACvF,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,YAAY,EAAE,WAAW,CAAC,CAAC;IACxF,CAAC;;wEAjEU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;;;;;ICavD,qEACE;IAAA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IAC1B,4DAAK;;;IAFC,0DAAe;IAAf,+EAAe;IACf,0DAAe;IAAf,+EAAe;;ADNhC,MAAM,uBAAuB;IAMlC,YAAoB,qBAA4C,EAAS,SAAgD,EACvF,IAAY;QAD1B,0BAAqB,GAArB,qBAAqB,CAAuB;QAAS,cAAS,GAAT,SAAS,CAAuC;QACvF,SAAI,GAAJ,IAAI,CAAQ;QAJ/C,4CAA4C;QAC3C,eAAU,GAAe,EAAE,CAAC;QAIxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,CAAC;IAEJ,QAAQ;QACJ,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEtE,kCAAkC;YACjC;wFAC4E;YAC9E,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;8FAzBU,uBAAuB,qWAOxB,wEAAe;uGAPd,uBAAuB;QCVpC,wEAAqB;QAAA,uDAAgC;QAAA,4DAAK;QAC1D,yEACI;QAAA,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,yEAAgB;QAAA,mEAAO;QAAA,4DAAK;QAC5B,yEAAgB;QAAA,qFAAyB;QAAA,4DAAK;QAChD,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,mHACE;QAGJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,qEACM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACZ,4DAAM;QAEN,2EACI;QAAA,8EAAwD;QAArB,gJAAS,cAAU,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACvE,4DAAM;;QA9Be,0DAAgC;QAAhC,0GAAgC;QAc/B,2DAAmD;QAAnD,mFAAmD;;6FDJ5D,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;sBAQI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEjB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACgD;AAC/B;AAMR;AAGN;AACQ;;;;;;;;;;;;;;;;;ICTrB,wEAAa;;;IAiBvC,iFAGkB;;;;IAFlB,yFAA2B;;;IAc3B,4EACI;IAAA,6JACJ;IAAA,4DAAY;;;IAeJ,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFkC,+EAAkB;IAC7D,0DACJ;IADI,6FACJ;;;IAOR,4EAE2F;;;IAA3D,sHAA6C;;;IAEzE,4EAC2B;;;IAST,0EAAU;;;IAK5B,iFAEI;IAAA,uDACJ;IAAA,4DAAa;;;;IAFb,wFAA2B;IACvB,0DACJ;IADI,6HACJ;;ADrEhB;;GAEG;AAOI,MAAM,mBAAmB;IAqB9B,YAAoB,YAAyB,EACnC,gBAAkC,EAClC,YAA0B,EAC1B,YAA0B,EAC1B,mBAAwC,EACxC,MAAc;QALJ,iBAAY,GAAZ,YAAY,CAAa;QACnC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QAxBxB,yBAAoB,GAAG,CAAC,CAAC;QACzB,aAAQ,GAAG,IAAI,CAAC;QAGhB,oBAAe,GAAY,IAAI,CAAC;QAChC,cAAS,GAAmB,EAAE,CAAC;QAC/B,UAAK,GAAe,EAAE,CAAC;QAGvB,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE9B,WAAM,GAAiB,EAAE,CAAC;QAE1B,cAAS,GAAc,wEAAS,CAAC,MAAM,CAAC;QAExC,yBAAoB,GAAgB,CAAC,wEAAS,CAAC,MAAM,EAAE,wEAAS,CAAC,YAAY,EAAE,wEAAS,CAAC,SAAS,CAAC,CAAC;QAEpG,eAAU,GAAW,GAAG,CAAC;IAOG,CAAC;IAE7B,QAAQ;QAEN,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAChD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAChD,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CACjF,CAAC;QAEF,IAAI,CAAC,gBAAgB,GAAG,IAAI,8EAAY,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;QAEzE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CACxC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,mBAAmB,EAAE;YAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAC3G,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAC9C,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC7C,wBAAwB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,yBAAyB,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAClE,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE,CAAC;IAGlB,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;IACjC,CAAC;IAGD,qBAAqB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE;YAClC,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE;gBAAE,OAAO,CAAC,CAAC;aAAE;YACpC,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE;gBAAE,OAAO,CAAC,CAAC,CAAC;aAAE;YACrC,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACnE,CAAC;IAAA,CAAC;IAEF,qBAAqB;QACnB,IAAI,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAChD,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,gBAAgB,CAAC,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;IAC/G,CAAC;IAED,eAAe,CAAC,uBAAsC;QACpD,OAAO,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,qBAAqB,CAAC,uBAAsC;QAC1D,MAAM,MAAM,GAAI,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAClD,IAAI,OAAO,GAAI,CAAC,CAAC;YACjB,KAAK,MAAM,QAAQ,IAAI,uBAAuB,EAAE;gBAC9C,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,OAAO,IAAI,CAAC,CAAC;iBACd;aACF;YACD,OAAO,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;IAGD,kBAAkB;QAEhB,IAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAC;YACxB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACnD,OAAO,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC;IAEd,CAAC;IAED,mBAAmB,CAAC,CAAQ;QAC1B,IAAI,eAAe,GAAG,OAAO,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChD,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAEM,UAAU;QACf,IAAI,SAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QACpC,IAAI,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,yBAAyB,CAAC,KAAK,CAAC;QACvF,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;QAE9C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACtB,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAEzC,IAAI,QAAQ,GAAG,IAAI,sEAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzF,8BAA8B;QAC9B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CACtD,CAAC;IAGJ,CAAC;IAEM,0BAA0B,CAAC,kBAA0B;QAC1D,OAAO,kBAAkB,GAAG,GAAG,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,gEAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,gBAAgB,GAAG,OAAO,GAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,WAAW;QACT,IAAI,gBAAgB,GAAG,OAAO,GAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAED,mBAAmB,CAAC,SAAoB;QACtC,OAAO,wEAAS,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;;sFAvKU,mBAAmB;mGAAnB,mBAAmB;QCvBhC,+FACI;QAAA,8EACI;QAAA,0EACI;QAAA,+HAA0B;QAC1B,uEAA4B;QAAA,mGAAmC;QAAA,4DAAI;QAKnE,4EACI;QADkC,2IAAS,cAAU,IAAC;QACtD,0EACI;QAAA,uEACJ;QAAA,4DAAO;QACX,4DAAS;QACT,6EACI;QADqC,4IAAS,iBAAa,IAAC;QAC5D,2EACI;QAAA,2EACJ;QAAA,4DAAO;QACX,4DAAS;QAET,yIAGA;QAYA,8HACI;QAGJ,uEACI;QAAA,8EACmB;QAAA,gEAAI;QAAA,4DAAS;QACpC,4DAAM;QAEV,4DAAO;QACX,4DAAW;QACX,gFACI;QAAA,2EACI;QAAA,qEAAG;QAAA,wGAAuC;QAAA,4DAAI;QAC9C,sFACI;QAAA,iFAAgC;QAAA,gFAAoB;QAAA,4DAAY;QAChE,kFACI;QAD4D,mMAA4B;QACxF,gIACI;QAER,4DAAa;QACjB,4DAAiB;QACjB,iEACA;QAAA,qEAAG;QAAA,0FAAyB;QAAA,4DAAI;QAChC,iEACA;QAAA,iEACA;QAAA,gIAE8E;QAC9E,8MACI;QAGJ,uEACI;QAAA,8EAAgE;QAAA,gEAAI;QAAA,4DAAS;QAC7E,8EAAuD;QAAA,gEAAI;QAAA,4DAAS;QACxE,4DAAM;QACV,4DAAO;QACX,4DAAW;QACX,4EACI;QAAA,iIAA0B;QAC1B,qEAAG;QAAA,yEAAa;QAAA,4DAAI;QACpB,iEACA;QAAA,sFACI;QAAA,kFACI;QADkB,4LAAqB;QACvC,gIAEI;QAER,4DAAa;QACjB,4DAAiB;QAEjB,uEACI;QAAA,8EAAgE;QAAA,gEAAI;QAAA,4DAAS;QAC7E,8EAAkE;QAAvB,4IAAS,gBAAY,IAAC;QAAC,sEAC9D;QAAA,4EACI;QAAA,kEACJ;QAAA,4DAAO;QACX,4DAAS;QACb,4DAAM;QACV,4DAAW;QACf,4DAAyB;;;QAhG0B,gFAAmB;QACxD,0DAA+B;QAA/B,4FAA+B;QAC/B,0DAA6B;QAA7B,0FAA6B;QAO4B,0DAAiC;QAAjC,8FAAiC;QAK3B,0DAAoC;QAApC,iGAAoC;QAMpF,0DAA6B;QAA7B,+EAA6B;QAenC,0DAAgC;QAAhC,8FAAgC;QAKO,0DAAqC;QAArC,kGAAqC;QAMrF,0DAA+B;QAA/B,4FAA+B;QAC/B,0DAA6B;QAA7B,0FAA6B;QAIqC,0DAA4B;QAA5B,uFAA4B;QAC5E,0DAAkC;QAAlC,kFAAkC;QAS1C,0DAC2B;QAD3B,yIAC2B;QAiBjB,2DAAqB;QAArB,gFAAqB;QAC3B,0DAAsD;QAAtD,6FAAsD;;6FDzDrE,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAIW;AAIsB;AACS;AACR;AACM;;;;;;;;;;;;;ICoBtE,uEACA;IAAA,uDACF;IAAA,4DAAO;;;;IADL,0DACF;IADE,gHACF;;;;IAUF,6EAEA;IADI,qaAA6B;IACjC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC3B,4DAAS;;;;IACT,6EAEI;IADI,saAA4B;IAChC,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IACpC,4DAAS;;;;IArBX,qEACE;IAAA,yEAAgB;IAAA,uDAAK;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uHACA;IAEJ,4DAAK;IACL,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAA6B;;IAAA,4DAAK;IACtC,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,8EAGF;IADC,kWAA2B;IAC5B,4EAAU;IAAA,sEAAU;IAAA,4DAAW;IACjC,4DAAS;IACT,6HAEA;IAEA,6HAEI;IAEN,4DAAK;IACL,4DAAK;;;;;IAtBa,0DAAK;IAAL,qEAAK;IACX,0DAAoD;IAApD,oFAAoD;IAI1D,0DAAiB;IAAjB,iFAAiB;IACjB,0DAA6B;IAA7B,uJAA6B;IAC7B,0DAAc;IAAd,8EAAc;IAEhB,0DAAiC;IAAjC,oGAAiC;IAIkC,0DAA+B;IAA/B,mGAA+B;IAI1B,0DAAkC;IAAlC,sGAAkC;;AD5BnH,MAAM,kBAAkB;IAM7B,YAAoB,WAAwB,EAAU,YAA0B,EACtE,MAAc,EAAS,MAAiB,EAAU,mBAAwC;QADhF,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QACtE,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QANpG,YAAO,GAAG,EAAE,CAAC;IAOb,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAE1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,MAAM,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnD,KAAK,OAAO,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACtD,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,IAAU;QACvB,OAAO,IAAI,CAAC,KAAK,KAAK,wEAAS,CAAC,QAAQ,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,UAAU,CAAC,EAAU;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8FAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC7C,IAAG,UAAU,EAAC;gBACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAwB,EAAE;YAC3D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAEM,SAAS,CAAC,EAAU;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;YACzD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC7C,IAAG,UAAU,EAAC;gBACZ,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qGAAwB,EAAE;YAC3D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAEM,iBAAiB,CAAC,IAAU;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC;QACzC,uBAAuB;IACzB,CAAC;IAEM,oBAAoB,CAAC,IAAU;QACpC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;;oFA9FU,kBAAkB;kGAAlB,kBAAkB;QCnB/B,gEAEA;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAuB;QAAA,mEAAQ;QAAA,4DAAK;QACpC,uEAAyB;QAAA,+FAAoC;QAAA,4DAAI;QACjE,uEACE;QAAA,6EAAuD;QAAA,yEAAa;QAAA,4DAAS;QAC/E,4DAAI;QAIN,4DAAM;QAEN,0EACE;QAAA,4EACE;QADoD,gKAAiB,oBAAgB,IAAC;QACtF,yEACE;QAAA,sEACE;QAAA,0EAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAAgB;QAAA,qEAAS;QAAA,4DAAK;QAC9B,0EAA2B;QAAA,iEAAK;QAAA,4DAAK;QACrC,0EAA4B;QAAA,kEAAM;QAAA,4DAAK;QACvC,0EAAgB;QAAA,iEAAK;QAAA,4DAAK;QAC5B,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,iHACE;QAuBJ,4DAAQ;QACV,4DAAQ;QAER,yEAAwD;QAE1D,4DAAM;QAEN,sEACM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAnCU,2DAAgD;QAAhD,mFAAgD;;6FDVnD,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;AAmGD,SAAS,OAAO,CAAC,CAAyB,EAAE,CAAyB,EAAE,KAAc;IACnF,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;;;;;;;;;;;;;AEnHD;AAAA;AAAO,MAAM,YAAY;IAAzB;QASE,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,CAAC,CAAC;IAGnB,CAAC;CAAA;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICO5C,wEACE;IAAA,wEAA+D;IAAA,4EAAY;IAAA,4DAAI;IACjF,4DAAK;;;IACL,wEACE;IAAA,wEAA+D;IAAA,qEAAU;IAAA,4DAAI;IAC/E,4DAAK;;;IACL,wEACE;IAAA,wEAAiD;IAAA,0EAAe;IAAA,4DAAI;IACtE,4DAAK;;;IAEH,wEAAsE;IAAA,kEAAO;IAAA,4DAAI;;;IAIrF,yEACE;IAAA,wEACE;IAAA,wEAA2D;IAAA,sEAAW;IAAA,4DAAI;IAC5E,4DAAK;IACL,wEACE;IAAA,wEAAqD;IAAA,yEAAc;IAAA,4DAAI;IACzE,4DAAK;IACP,4DAAK;;;;IAEL,yEACE;IAAA,wEACE;IAAA,wEAAyD;IAAA,uDAAc;IAAA,4DAAI;IAC7E,4DAAK;IACL,wEACE;IAAA,wEAA4C;IAAnB,wSAAkB;IAAC,wEAAa;IAAA,4DAAI;IAC/D,4DAAK;IACP,4DAAK;;;IALwD,0DAAc;IAAd,gFAAc;;ADxBxE,MAAM,YAAY;IAOvB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAL5D,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,uBAAkB,GAAG,KAAK,CAAC;IAGqC,CAAC;IAEjE,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAExD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAEhE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACnC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;wEA1BU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,yEACE;QAAA,uEAAiC;QAAA,iEAAM;QAAA,4DAAI;QAC3C,wEACE;QAAA,wEACE;QAAA,uEAAmD;QAAA,kEAAO;QAAA,4DAAI;QAChE,4DAAK;QACL,sGACE;QAEF,sGACE;QAEF,wGACE;QAEF,yEACE;QAAA,sGAAsE;QACxE,4DAAK;QACP,4DAAK;QAEL,wGACE;QAQF,wGACE;QAOJ,4DAAM;QAEN,0EACE;QAAA,4EAA+B;QACjC,4DAAM;QACR,4DAAM;;QApCqB,0DAAsB;QAAtB,oFAAsB;QAGtB,0DAAsB;QAAtB,oFAAsB;QAGtB,0DAA0B;QAA1B,wFAA0B;QAIZ,0DAAkB;QAAlB,gFAAkB;QAIxB,0DAAmB;QAAnB,iFAAmB;QASnB,0DAAkB;QAAlB,gFAAkB;;6FDtBxC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,6CAAM;IACN,yDAAY;IACZ,mDAAS;AACX,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAET;;;;;;;;;ICGxC,gFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0C,mFAAuB;IAC1E,0DACJ;IADI,4FACJ;;ADGD,MAAM,cAAc;IASzB,gBAAgB,CAAC;IAEjB,QAAQ;QAEN,IAAI,CAAC,eAAe,GAAG,OAAO,GAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1D,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE3E,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,YAAY;aAC/C,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,CAAC,KAAa,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAC5C;QAEH,oCAAoC;IACtC,CAAC;IAEO,OAAO,CAAC,KAAa;QAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAExC,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAChG,CAAC;;4EA7BU,cAAc;8FAAd,cAAc;QCV3B,oFACI;QAAA,sEAGA;QAAA,4FACI;QAAA,wHACI;;QAER,4DAAmB;QACvB,4DAAiB;;;QAT0B,0FAA6B;QAEvD,0DAAqC;QAArC,2GAAqC;QAC9C,gFAAwB;QAEZ,0DAA0C;QAA1C,uJAA0C;;6FDKjD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;sCAGU,eAAe;kBAAvB,mDAAK;YACG,eAAe;kBAAvB,mDAAK;YACG,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,MAAM,OAAO,GAAG,iCAAiC,CAAC;AAK3C,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IAEH,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACpE,CAAC;;sEAlBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICiB5C,qEACE;IAAA,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,mFACF;;;IAnBN,yEACI;IAAA,4EACE;IAAA,qEACE;IAAA,yEAAQ;IAAA,uDAA0B;IAAA,4DAAS;IAAC,oEAC9C;IAAA,4DAAK;IACP,4DAAS;IACT,oEACE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IACvB,uDAEF;IAAA,4DAAI;IACJ,qEACE;IAAA,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IACvB,wDACF;IAAA,4DAAI;IACJ,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IACvB,sEACE;IAAA,kHACE;IAEJ,4DAAK;IACP,4DAAM;;;IAlBQ,0DAA0B;IAA1B,4FAA0B;IAKpC,0DAEF;IAFE,uNAEF;IAGE,0DACF;IADE,oGACF;IAGM,0DAAsC;IAAtC,6FAAsC;;;IAO5C,0EACF;;ADhBK,MAAM,gBAAgB;IAG3B,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAI,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;;gFAPU,gBAAgB;gGAAhB,gBAAgB;QCT7B,6GACI;QAsBF,wMACE;;;QAxBmB,iFAAmC;;6FDS7C,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;AAOlE,MAAM,+BAA+B;IAI1C,YACS,SAAwD,EAC/B,IAAY;QADrC,cAAS,GAAT,SAAS,CAA+C;QAC/B,SAAI,GAAJ,IAAI,CAAQ;QAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;IAER,CAAC;;8GAhBU,+BAA+B,0MAMhC,wEAAe;+GANd,+BAA+B;QCR5C,wEAAqB;QAAA,oFAAoB;QAAA,4DAAK;QAC9C,yEACI;QAAA,wEAAkB;QAAA,oEAAG;QAAA,kEAAO;QAAA,4DAAI;QAAA,uDAAe;QAAA,4DAAK;QACxD,4DAAM;QACN,yEACI;QAAA,4EAAwD;QAArB,uJAAS,cAAU,IAAC;QAAC,oEAAS;QAAA,4DAAS;QAC9E,4DAAM;;QAJ8B,0DAAe;QAAf,mGAAe;;6FDMtC,+BAA+B;cAL3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,2CAA2C,CAAC;aACzD;;sBAOI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEd3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACU;AACV;AAET;AACU;AACS;AACZ;AACiB;AACe;AACvB;AAEQ;AACG;AAEG;AACxB;AACQ;AACO;AACuB;AACU;AACW;AAC0B;AACxB;AACxC;AACc;AAChB;AACc;AACJ;AACS;AACR;AACM;AAChC;;AA0ClD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,mFAAwB,CAAC,YAV5B;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,6FAAuB;YACvB,oEAAkB;YAClB,2EAAmB;YACnB,kEAAmB;SACpB;mIAIU,SAAS,mBArClB,2DAAY;QACZ,qEAAc;QACd,8EAAiB;QACjB,kEAAa;QACb,mFAAkB;QAClB,mGAAuB;QACvB,4EAAgB;QAChB,uFAAmB;QACnB,iFAAiB;QACjB,wGAAwB;QACxB,kHAA0B;QAC1B,6HAA+B;QAC/B,uJAAuC;QACvC,+HAA+B;QAC/B,uFAAmB;QACnB,qGAAuB;QACvB,qFAAmB;QACnB,mGAAuB;QACvB,+FAAqB;QACrB,wGAAwB;QACxB,gGAAsB;QACtB,sGAAwB;QACxB,sEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,6FAAuB;QACvB,oEAAkB;QAClB,2EAAmB;QACnB,kEAAmB;6FAKV,SAAS;cAvCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,8EAAiB;oBACjB,kEAAa;oBACb,mFAAkB;oBAClB,mGAAuB;oBACvB,4EAAgB;oBAChB,uFAAmB;oBACnB,iFAAiB;oBACjB,wGAAwB;oBACxB,kHAA0B;oBAC1B,6HAA+B;oBAC/B,uJAAuC;oBACvC,+HAA+B;oBAC/B,uFAAmB;oBACnB,qGAAuB;oBACvB,qFAAmB;oBACnB,mGAAuB;oBACvB,+FAAqB;oBACrB,wGAAwB;oBACxB,gGAAsB;oBACtB,sGAAwB;oBACxB,sEAAc;iBACd;gBACF,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,6FAAuB;oBACvB,oEAAkB;oBAClB,2EAAmB;oBACnB,kEAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,mFAAwB,CAAC;gBACrC,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5ED;AAAA;AAAA;AAAA;AAA2C;;;AAS3C,MAAM,OAAO,GAAG,4BAA4B,CAAC;AAKtC,MAAM,gBAAgB;IAE3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,gBAAgB;QAEd,gBAAgB;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,OAAO,GAAG,WAAW,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAExF,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,qCAAqC,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1G,CAAC;;gFAfU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAA2C;;;AAG3C,MAAM,OAAO,GAAG,uCAAuC,CAAC;AAKjD,MAAM,iBAAiB;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,uBAAuB,CAAC,QAAgB;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,OAAO,GAAG,QAAQ,GAAG,QAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACrG,CAAC;IAED,mBAAmB,CAAC,IAAU,EAAE,EAAQ;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,OAAO,GAAG,QAAQ;YAC1D,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,MAAM;cAClD,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,sBAAsB,CAAC,IAAU;QAE/B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;IAClH,CAAC;;kFAnBU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AAQb;AAGoC;AACU;AAC/C;AAC0D;AAC0B;AACxB;AACjF;AAGiD;AACS;AACR;AACM;;;;;;;;;;;;;;;ICtBpF,4EAEI;IADI,gUAAsB;IAC1B,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC/B,4DAAS;;;;IACT,4EAEI;IADI,+TAAqB;IACzB,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IACpC,4DAAS;;;IAWO,6EAEI;IAAA,4EAEJ;IAAA,4DAAS;;;IACT,6EAGI;IAAA,0EAEJ;IAAA,4DAAS;;;IACT,6EAC4E;IAAA,0FAE5E;IAAA,4DAAS;;;IACT,6EACyE;IAAA,iFAGzE;IAAA,4DAAS;;;IACT,6EAC2D;IAAA,kEAAO;IAAA,4DAAS;;;;IA5BvF,sEACI;IAAA,yEACI;IAAA,6EAII;IAFA,iZAAgD;IAEhD,6EAAwB;IAAA,oFAAmB;IAAA,4DAAS;IACpD,sIAEI;IAGJ,sIAGI;IAGJ,sIAC4E;IAG5E,sIACyE;IAIzE,sIAC2D;IAC3D,8EAA2B;IAAA,gFAAoB;IAAA,4DAAS;IAC5D,4DAAS;IACb,4DAAM;IACV,4DAAM;;;;IA/BiC,0DAAwB;IAAxB,yFAAwB;IACtB,0DAAyC;IAAzC,+GAAyC;IACtE,wHAAmD;IAI3C,0DACoD;IADpD,kMACoD;IAIpD,0DAE4B;IAF5B,kPAE4B;IAI5B,0DACoD;IADpD,kMACoD;IAGpD,0DACmD;IADnD,iMACmD;IAInD,0DACmC;IADnC,8KACmC;;;IA7B3D,sEACI;IAAA,0HACI;IAgCR,4DAAM;;;IAjCG,0DAAqD;IAArD,gGAAqD;;;IAZlE,yEACI;IAAA,yHAEI;IAEJ,yHAEI;IAEJ,oEAEA;IAAA,mHACI;;IAkCR,4DAAM;;;IA7C8C,0DAAmC;IAAnC,oGAAmC;IAI9B,0DAAmC;IAAnC,oGAAmC;IAInF,0DAA+C;IAA/C,8LAA+C;IAE/C,0DAAmE;IAAnE,iKAAmE;;;IAqC5E,yEAA6C;;ADlBtC,MAAM,iBAAiB;IA6B5B,YAAoB,YAA0B,EAAU,KAAqB,EACnE,mBAAwC,EACxC,iBAAqC,EACrC,KAAwB,EACzB,MAAiB,EAChB,eAAiC;QALvB,iBAAY,GAAZ,YAAY,CAAc;QAAU,UAAK,GAAL,KAAK,CAAgB;QACnE,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,UAAK,GAAL,KAAK,CAAmB;QACzB,WAAM,GAAN,MAAM,CAAW;QAChB,oBAAe,GAAf,eAAe,CAAkB;QA/B3C,cAAS,GAAG,IAAI,CAAC;QAMjB,eAAU,GAAY,KAAK,CAAC;QAC5B,aAAQ,GAAY,KAAK,CAAC;QAC1B,kBAAa,GAAY,KAAK,CAAC;QAE/B,sBAAiB,GAAW,CAAC,CAAC;QAE9B,2BAAsB,GAAkB,CAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY;YAC3G,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAIpE,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;QAIrB,oBAAe,GAAoB,IAAI,KAAK,EAAsB,CAAC;IASpB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;gBAC/E,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAGO,iBAAiB,CAAC,KAAK;QAC7B,OAAO,IAAI,+CAAU,CAAC,QAAQ,CAAC,EAAE;YAC7B,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,GAAG,CAAC,MAAM,GAAG,UAAU,KAAK;gBACxB,MAAM,WAAW,GAAQ,KAAK,CAAC,aAAa,CAAC;gBAC7C,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gBAChC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBAClC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC;YACD,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAES,UAAU,CAAC,KAAK,EAAE,GAAG;QAC3B,OAAO,KAAK;aACT,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACpB,IAAG,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS;gBAAE,OAAO,IAAI,CAAC;YACvC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAC,CAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC;QAChF,CAAC,EAAE,EAAE,CAAC;IACX,CAAC;IAGQ,mBAAmB;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAChD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC;QAE7E,IAAI,KAAK,GAAG,EAAE;QAEd,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACnC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,aAAa;QACnB,MAAM,KAAK,GAAG;YACZ,GAAG,EAAE,sBAAsB,GAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAC,MAAM;SACtD;QAED,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,SAAS,CACrC,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CACH,CAAC;IACH,CAAC;IAEO,cAAc;QACpB,IAAG,CAAC,IAAI,CAAC,YAAY,EAAE,EAAC;YACtB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF;aAEG;YACF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAEO,oBAAoB;QAC1B,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GACjC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACtE,CAAC;IACJ,CAAC;IAED,6BAA6B;IACrB,4BAA4B,CAAC,YAA0B;QAC7D,IAAI,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,EAC1E,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAC5D,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAC5D,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EACxE,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;QAE/F,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QACjJ,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IACnJ,CAAC;IAEO,kBAAkB,CAAC,aAA2B;QACpD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzF,CAAC;IAEM,yBAAyB,CAAC,YAA0B;QAEzD,IAAI,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAEtD,OAAO;YACL,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI;YAC1C,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI;YAC3C,YAAY,EAAE,KAAK;SACpB;IACH,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACvC,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,GAAG,IAAI,GAAC,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACxC;QACD,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAE,qBAAqB;QAClE,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sBAAsB,CAAC,MAAc;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8HAA+B,EAAE;YAClE,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CAAC,aAA2B;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAwB,EAAE;YAC3D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,aAAa;YACnB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,aAA2B;QAClD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sJAAuC,EAAE;YAC1E,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,aAAa;YACnB,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,KAAU,EAAE,YAA0B;QACzD,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;YAClD,KAAK,eAAe;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,kEAAkE;gBAC9F,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;gBACzC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC3B,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;gBACzC,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;gBACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC3B,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC3B,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC3B,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;gBAC5C,MAAM;YACR;gBACE,MAAM,CAAC,8BAA8B,CAAC,CAAC;SAC1C;IACH,CAAC;IAEO,YAAY;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAC,CAAC,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,kBAAgC;QAE5C,IAAI,MAAM,GAAG,IAAI,kEAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC5D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAG,IAAI,CAAC,YAAY,EAAE,EAAC;gBACrB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,CAAC,4BAA4B,CAC/B,oBAAoB,GAAG,MAAM,CAAC,SAAS,GAAE,KAAK,GAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACvE,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF,CAAC;IAEJ,CAAC;IAEM,WAAW,CAAC,kBAAgC;QACjD,IAAI,MAAM,GAAG,IAAI,kEAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7G,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1D,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,4BAA4B,CAC/B,aAAa,GAAC,MAAM,CAAC,OAAO,GAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,GAAE,KAAK,GAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACjG,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QACpD,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,oBAAoB,CAAC,kBAAgC;QAC1D,IAAI,MAAM,GAAG,IAAI,kEAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7G,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACzD,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,4BAA4B,CAC/B,uCAAuC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAChE,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QAC1D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4BAA4B,CAAC,GAAW;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4HAA+B,EAAE;YAClE,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,GAAG;SACV,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mBAAmB,CAAC,MAAc;QACvC,OAAO,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC;IAC5C,CAAC;IAEM,qBAAqB,CAAC,MAAc;QACzC,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAEM,uBAAuB,CAAC,aAA2B;QACxD,IAAI,uBAAuB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,aAAa,CAAC;QAC5F,OAAO,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACzE,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;YAClE,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,uBAAuB,CAAC;YAC3F,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;IAC3E,CAAC;IAEM,kBAAkB,CAAC,YAA0B;QAClD,OAAO,YAAY,CAAC,OAAO,GAAC,CAAC,CAAC;IAChC,CAAC;IAEM,UAAU;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8FAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC7C,IAAG,UAAU,EAAC;gBACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wGAAwB,EAAE;YAC3D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAEM,SAAS;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gGAAsB,EAAE;YACzD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC7C,IAAG,UAAU,EAAC;gBACZ,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAwB,EAAE;YAC3D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAEM,yBAAyB;QAC9B,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,mBAAmB,CAAC;IAC1D,CAAC;;kFAhXU,iBAAiB;iGAAjB,iBAAiB;QC9B9B,6GACI;QA+CJ,6HAA+B;;QAhDX,gFAAkB;QAgDzB,0DAAiB;QAAjB,+EAAiB;;6FDlBjB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AE7BD;AAAA;AAAA;AAA2C;;AAMpC,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEV,kBAAkB,CAAC,YAA0B,EAAE,QAAgB,EAAE,QAAgB;QACtF,IAAI,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC;QACrC,IAAI,GAAG,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC;QACrC,YAAY,CAAC,IAAI,GAAI,CAAC,CAAC,GAAG,GAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrD,YAAY,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;;oFATU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,wBAAwB;IAEnC,YACS,SAAiD;QAAjD,cAAS,GAAT,SAAS,CAAwC;IAC1D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;IAER,CAAC;;gGAZU,wBAAwB;wGAAxB,wBAAwB;QCRrC,wEAAqB;QAAA,oGAAyC;QAAA,4DAAK;QACnE,yEACI;QAAA,4EAAwD;QAArB,gJAAS,cAAU,IAAC;QAAC,6DAAE;QAAA,4DAAS;QACvE,4DAAM;;6FDKO,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AAkD5C,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBA9C3B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;mIAGN,kBAAkB,cA9C3B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,mEAAa;QACb,gEAAY;QACZ,sEAAe;6FAGN,kBAAkB;cAhD9B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAU;oBACV,sEAAe;oBACf,qEAAgB;oBAChB,iEAAc;oBACd,+DAAa;oBACb,qEAAc;oBACd,oFAAqB;oBACrB,uEAAc;oBACd,oFAAoB;oBACpB,yEAAe;oBACf,sFAAqB;oBACrB,qEAAa;oBACb,6EAAiB;oBACjB,uEAAc;oBACd,2EAAgB;oBAChB,iFAAmB;oBACnB,yEAAe;oBACf,2EAAgB;oBAChB,+EAAkB;oBAClB,8EAAiB;oBACjB,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,qEAAa;oBACb,2EAAmB;oBACnB,+EAAkB;oBAClB,oFAAoB;oBACpB,4FAAwB;oBACxB,uEAAc;oBACd,uEAAe;oBACf,yEAAe;oBACf,2EAAgB;oBAChB,yEAAe;oBACf,oFAAoB;oBACpB,8EAAiB;oBACjB,qEAAa;oBACb,uEAAc;oBACd,qEAAa;oBACb,2EAAgB;oBAChB,2EAAgB;oBAChB,qEAAa;oBACb,mEAAa;oBACb,gEAAY;oBACZ,sEAAe;iBAChB;aACF;;;;;;;;;;;;;;AC5FD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCPpC,oEAAG;QAAA,iFAAsB;QAAA,4DAAI;;6FDOhB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,MAAM,OAAO,GAAG,uCAAuC,CAAC;AAKjD,MAAM,qBAAqB;IAElC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,OAAO,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/F,CAAC;;0FANY,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA0D;AACe;;;;AAOlE,MAAM,+BAA+B;IAI1C,YAAmB,SAAwD,EACzC,IAAY;QAD3B,cAAS,GAAT,SAAS,CAA+C;QACzC,SAAI,GAAJ,IAAI,CAAQ;QAC5C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;8GAdU,+BAA+B,0MAKhC,wEAAe;+GALd,+BAA+B;QCR5C,wEAAqB;QAAA,uDAAsB;QAAA,4DAAK;QAChD,uEAAiB;QAAA,0FAA+B;QAAA,4DAAI;QACpD,yEACI;QAAA,4EAAwD;QAArB,uJAAS,cAAU,IAAC;QAAC,6DAAE;QAAA,4DAAS;QACvE,4DAAM;;QAJe,0DAAsB;QAAtB,uFAAsB;;6FDQ9B,+BAA+B;cAL3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,WAAW,EAAE,2CAA2C;gBACxD,SAAS,EAAE,CAAC,0CAA0C,CAAC;aACxD;;sBAMI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEb3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACd;;;AAK3C,MAAM,gBAAgB,GAAG,eAAe,CAAC;AACzC,MAAM,2BAA2B,GAAG,CAAC,qCAAqC,EAAE,oCAAoC,CAAC;AAG1G,MAAM,eAAe;IAC1B,YAAoB,KAA0B;QAA1B,UAAK,GAAL,KAAK,CAAqB;IAAI,CAAC;IAEnD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,IAAI,OAAO,GAAG,GAAG,CAAC;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,EAAE;YACzD,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;SACxF;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,0BAA0B,CAAC,GAAqB;QAC9C,OAAO,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC;;8EAdU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;AAkBJ,MAAM,wBAAwB,GAAG;IACtC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE;CACvE,CAAC;;;;;;;;;;;;;AC7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEW;AACT;AACH;AACS;AACQ;AACe;AAC/B;AACmB;AACN;AACM;AACF;;;AAExE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mFAAkB,EAAE;IAC/C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,kGAAuB,EAAE;IACnD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,qFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAmB,EAAE;IAClD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,iFAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY,EAAE,oEAAa;mIAE1B,gBAAgB,uFAFjB,4DAAY,EAAE,oEAAa;6FAE1B,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,EAAE,oEAAa,CAAC;aACvC;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICoBxC,0EAKE;IAAA,8FACF;IAAA,4DAAM;;;IAkBJ,sEAAsC;IAAA,0FAA0B;IAAA,4DAAM;;;IACtE,sEACE;IAAA,kHACF;IAAA,4DAAM;;;IARR,0EAKE;IAAA,yHAAsC;IACtC,yHACE;IAEJ,4DAAM;;;;IAJC,0DAAgC;IAAhC,qFAAgC;IAChC,0DAAiC;IAAjC,sFAAiC;;;IAWxC,0EAKE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,yHACF;;;;IA3DJ,6EAOE;IAJA,qZAAuC;IAIvC,yEACE;IAAA,2EAAsB;IAAA,4EAAiB;IAAA,4DAAQ;IAC/C,+EAQA;IAJE,sVAA2B;IAJ7B,4DAQA;IAAA,kHAKE;IAEJ,4DAAM;IACN,yEACE;IAAA,4EAAsB;IAAA,2EAAU;IAAA,4DAAQ;IACxC,iFASA;IALE,uVAA2B;IAJ7B,4DASA;IAAA,oHAKE;IAKJ,4DAAM;IACN,0EACE;IAAA,8EACE;IAAA,4EACF;IAAA,4DAAS;IACX,4DAAM;IACN,0EACE;IAAA,oHAKE;IAEJ,4DAAM;IACR,4DAAO;;;;;;IAhDD,0DAA2B;IAA3B,yFAA2B;IAO3B,0DAAuC;IAAvC,8FAAuC;IAWvC,0DAA2B;IAA3B,yFAA2B;IAQ3B,0DAAuC;IAAvC,8FAAuC;IAiBvC,0DAAoC;IAApC,uGAAoC;;;IAO1C,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,uGACF;;AD3DC,MAAM,cAAc;IAOzB,YAAoB,WAAwB,EAAU,YAAiC;QAAnE,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QANvF,SAAI,GAAQ,EAAE,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;IAEsE,CAAC;IAE5F,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAEjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;4EApCU,cAAc;8FAAd,cAAc;QCT3B,yEACE;QAAA,wEAAwB;QAAA,yEAAc;QAAA,4DAAK;QACzC,yEACE;QAAA,6GAOE;QAwDF,0GACE;QAEJ,4DAAM;QACR,4DAAM;;QAlEA,0DAAmB;QAAnB,iFAAmB;QA8DY,0DAAkB;QAAlB,gFAAkB;;6FDzD5C,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,0BAA0B;IAErC,YAAmB,SAAmD;QAAnD,cAAS,GAAT,SAAS,CAA0C;IAAI,CAAC;IAE3E,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;oGATU,0BAA0B;0GAA1B,0BAA0B;QCRvC,wEAAqB;QAAA,mFAAwB;QAAA,4DAAK;QAClD,yEACI;QAAA,4EAAwD;QAArB,kJAAS,cAAU,IAAC;QAAC,6DAAE;QAAA,4DAAS;QACvE,4DAAM;;6FDKO,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;;;;;;;;;;;;;AEPD;AAAA;AAAO,MAAM,KAAK;IAKhB,YAAY,EAAU;QACpB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;CAEF;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEe;;;;;;;AAUlE,MAAM,wBAAwB;IAInC,YACS,SAAiD,EACxB,IAAkB;QAD3C,cAAS,GAAT,SAAS,CAAwC;QACxB,SAAI,GAAJ,IAAI,CAAc;QAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ;IAER,CAAC;;gGAhBU,wBAAwB,0MAMzB,wEAAe;wGANd,wBAAwB;QCZrC,wEAAqB;QAAA,uDAA2C;QAAA,4DAAK;QACrE,yEACI;QAAA,oEAAG;QAAA,uFAA4B;QAAA,4DAAI;QACnC,gFAEa;QAFD,sMAAyB;QAErC,4DAAa;QACjB,4DAAM;QACN,yEACI;QAAA,4EAAwD;QAArB,gJAAS,cAAU,IAAC;QAAC,oEAAS;QAAA,4DAAS;QAC9E,4DAAM;;QATe,0DAA2C;QAA3C,qHAA2C;QAIxD,0DAA8B;QAA9B,oGAA8B;QADtB,oFAAyB;;6FDS5B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;sBAOI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AElB3B;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ImagesService {\r\n\r\n  FUNCIONA = \"https://cors-anywhere.herokuapp.com/https://pixabay.com/api/?key=18376709-a188ab6baf8fe12654f8c3700&q=Rojas&image_type=photo\"\r\n\r\n  CORS_HEROKU = \"https://cors-anywhere.herokuapp.com/\"\r\n\r\n  // No subirlo en prod\r\n  API_KEY = '18376709-a188ab6baf8fe12654f8c3700';\r\n\r\n  API_URL = 'https://pixabay.com/api/?key=';\r\n  API_NAME_PARAMETER = '&q=';\r\n  API_IMG_TYPE = '&image_type=photo';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  //this.CORS_HEROKU+this.API_URL+this.API_KEY+this.API_NAME_PARAMETER+imageSearch+this.API_IMG_TYPE\r\n\r\n  getImages(imageSearch: string): Observable<any> {\r\n    let imageSearchFormatted = imageSearch.split(\" \").join('%20');\r\n\r\n    return this.http.get(\r\n      this.CORS_HEROKU+this.API_URL+this.API_KEY+this.API_NAME_PARAMETER+imageSearch+this.API_IMG_TYPE, \r\n      { responseType: 'json' });\r\n  }\r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-surrendered',\r\n  templateUrl: './game-surrendered.component.html',\r\n  styleUrls: ['./game-surrendered.component.css']\r\n})\r\nexport class GameSurrenderedComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GameSurrenderedComponent>) {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Te has rendido! vaya cobarde! 🤣</h1>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>","\r\nexport class Action {\r\n  attackMun: string;\r\n  defenceMun: string;\r\n  ammount: number;\r\n\r\n  constructor(attackMun: string, defenceMun: string, ammount: number){\r\n    this.attackMun = attackMun;\r\n    this.defenceMun = defenceMun;\r\n    this.ammount = ammount;\r\n  }\r\n}","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ScoreBoardShowComponent} from '../score-board-show/score-board-show.component';\r\nimport {Game} from '../shared/models/game.model';\r\nimport {GamesService} from '../_services/games.service';\r\n\r\n@Component({\r\n  selector: 'app-score-board',\r\n  templateUrl: './score-board.component.html',\r\n  styleUrls: ['./score-board.component.css']\r\n})\r\n\r\nexport class ScoreBoardComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog, private gamesService: GamesService) { }\r\n\r\n  displayedColumns: string[] = ['id', 'province', 'date', 'players', 'actions'];\r\n  dataSource: MatTableDataSource<any>;\r\n  showMessageNoData: boolean;\r\n\r\n  range = new FormGroup({\r\n    start: new FormControl('', Validators.required),\r\n    end: new FormControl('', Validators.required)\r\n  });\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.showMessageNoData = false;\r\n    this.dataSource = new MatTableDataSource<Game>();\r\n  }\r\n\r\n  clearData()\r\n  {\r\n    this.showMessageNoData = false;\r\n    this.dataSource = null;\r\n  }\r\n\r\n  getDateRange() {\r\n    this.showMessageNoData = false;\r\n    let fromDate = this.range.value.start;\r\n    let toDate = this.range.value.end;\r\n    this.gamesService.getGamesByDate(fromDate, toDate).subscribe(data =>\r\n      {\r\n        if(data.length == 0)\r\n          this.showMessageNoData = true;\r\n        this.dataSource = new MatTableDataSource<Game>(data);\r\n      }\r\n    );\r\n  }\r\n\r\n  openShowScoreBoardDialog(id: number): void {\r\n    let gameId = id;\r\n    this.dialog.open(ScoreBoardShowComponent, {\r\n      width: '600px',\r\n      data: gameId,\r\n      disableClose: true\r\n    });\r\n  }\r\n}\r\n","<div class=\"search-div\">\r\n  <br>\r\n  <mat-form-field appearance=\"legacy\">\r\n    \r\n    <mat-label>Ingrese un rango de fechas</mat-label>\r\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n      <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n      <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    \r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n    \r\n  </mat-form-field>\r\n    <mat-datepicker-toggle [for]=\"picker\"></mat-datepicker-toggle>\r\n    <button mat-button-toggle matSuffix mat-icon-button aria-label=\"Search\"\r\n    [disabled]=\"range.controls.start.errors?.required\r\n          || range.controls.end.errors?.required\"\r\n    (click)=\"getDateRange()\">\r\n      <mat-icon>search</mat-icon>\r\n    </button>\r\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\"\r\n    [disabled]=\"range.controls.start.errors?.required\r\n          || range.controls.end.errors?.required\"\r\n    (click)=\"clearData()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n\r\n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\r\n      || range.controls.end.hasError('matEndDateInvalid')\">Rango de fechas inválida</mat-error>\r\n</div>\r\n<div class=\"mat-elevation-z8 table-dark\">\r\n  <mat-table [dataSource]=\"dataSource\"  matSort>\r\n    <ng-container matColumnDef=\"id\">\r\n      <mat-header-cell *matHeaderCellDef  mat-sort-header>Nro</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{element.id}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"province\">\r\n      <mat-header-cell *matHeaderCellDef  mat-sort-header>Provincia</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{element.province}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Fecha</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{element.date | date: 'short'}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"players\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Jugadores</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">{{element.players.join(', ')}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"actions\">\r\n      <mat-header-cell *matHeaderCellDef>Scoreboard</mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\">\r\n        <button mat-icon-button color=\"primary\" (click)=\"openShowScoreBoardDialog(element.id)\"><mat-icon>assignment</mat-icon></button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"noData\"  >\r\n      <mat-footer-cell *matFooterCellDef>\r\n        No hay partidas en ese rango de fechas.\r\n      </mat-footer-cell>\r\n    </ng-container>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> <!-- [ngClass]=\"{'hide':!(listData!=null && listData.data.length==0)}\"-->\r\n    <mat-footer-row [hidden]=\"!showMessageNoData\" *matFooterRowDef=\"['noData']\" ></mat-footer-row>\r\n  </mat-table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserInfo } from '../shared/models/userInfo.model';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n\r\n  getUsersList(): Observable<UserInfo[]> {\r\n    \r\n    return this.http.get<UserInfo[]>(API_URL + 'users', { responseType: 'json' });\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.register(this.form).subscribe(\r\n      data => {\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}","<div class=\"card col-lg-8\">\r\n  <h4 class=\"card-header\">Registrarse</h4>\r\n    <div class=\"card-body\">\r\n      <form\r\n        *ngIf=\"!isSuccessful\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Nombre De Usuario</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            [(ngModel)]=\"form.username\"\r\n            required\r\n            minlength=\"3\"\r\n            maxlength=\"20\"\r\n            #username=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\r\n            <div *ngIf=\"username.errors.required\">Nombre de usuario es requerido</div>\r\n            <div *ngIf=\"username.errors.minlength\">\r\n              El Nombre de usuario debe contener minimo 3 caracteres\r\n            </div>\r\n            <div *ngIf=\"username.errors.maxlength\">\r\n              El Nombre de usuario debe contener maximo 20 caracteres\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            [(ngModel)]=\"form.email\"\r\n            required\r\n            email\r\n            #email=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n            <div *ngIf=\"email.errors.required\">Se requiere un email</div>\r\n            <div *ngIf=\"email.errors.email\">\r\n              El email debe ser valido\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            [(ngModel)]=\"form.password\"\r\n            required\r\n            minlength=\"6\"\r\n            #password=\"ngModel\"\r\n          />\r\n          <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n            <div *ngIf=\"password.errors.required\">Una contraseña es requerida</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              La contraseña debe tener minimo 6 caracteres\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n        </div>\r\n  \r\n        <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n          Registro fallido!<br />{{ errorMessage }}\r\n        </div>\r\n      </form>\r\n  \r\n      <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n        Tu registro ha sido exitoso!\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-surrender',\r\n  templateUrl: './game-surrender.component.html',\r\n  styleUrls: ['./game-surrender.component.css']\r\n})\r\nexport class GameSurrenderComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GameSurrenderComponent>) {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>📛 ¿Estás seguro que deseas Rendirte? 📛</h1>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\" id=\"confirm-button\">Confirmar</button>\r\n    <button mat-button cdkFocusInitial (click)=\"onCancel()\" id=\"cancel-button\">Cancelar</button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { UserInfo } from '../shared/models/userInfo.model';\r\nimport { StatisticsShowComponent } from '../statistics-show/statistics-show.component';\r\nimport { StatisticsService } from '../_services/statistics.service';\r\nimport { UsersService } from '../_services/users.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n\r\n  filteredUsers: Observable<UserInfo[]>;\r\n  users: UserInfo[] = new Array();\r\n\r\n  firstFormGroup: FormGroup;\r\n  range = new FormGroup({\r\n    start: new FormControl('', Validators.required),\r\n    end: new FormControl('', Validators.required)\r\n  });\r\n\r\n  constructor(private _formBuilder: FormBuilder, public dialog: MatDialog,\r\n    private statisticsService: StatisticsService, private usersService: UsersService) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group(\r\n      {\r\n        firstCtrl: ['', [Validators.required]]\r\n      }\r\n    );\r\n\r\n    this.filteredUsers = this.firstFormGroup.controls.firstCtrl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n    \r\n    this.usersService.getUsersList().subscribe(\r\n      result => { result.forEach(p => this.users.push(p) ) }\r\n    );\r\n  }\r\n\r\n  private _filter(value: String): UserInfo[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.users.filter(user => user.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  public userExists(): Boolean {\r\n    return this.users.some(user => \r\n       this.firstFormGroup.controls.firstCtrl.value == user.username); \r\n  };\r\n\r\n  openShowStatisticsByDate(): void {\r\n    let statistics = new Map<string, number>();\r\n    let from = this.range.value.start;\r\n    let to = this.range.value.end;\r\n\r\n    this.statisticsService.getStatisticsByDate(from, to).subscribe(\r\n      data => {\r\n        statistics = data;\r\n\r\n        this.dialog.open(StatisticsShowComponent, {\r\n          width: '600px',\r\n          data: statistics, \r\n          disableClose: true\r\n        });\r\n      });\r\n  }\r\n\r\n  openShowIndividualStatisticsDialog(): void{\r\n    let statistics = new Map<string, number>();\r\n    let userName = this.firstFormGroup.controls.firstCtrl.value;\r\n\r\n    this.statisticsService.getIndividualStatistics(userName).subscribe(\r\n      data => {\r\n        statistics = data;\r\n\r\n        this.dialog.open(StatisticsShowComponent, {\r\n          width: '600px',\r\n          height: '600px',\r\n          data: statistics, \r\n          disableClose: true\r\n        });\r\n      });\r\n  }\r\n\r\n}\r\n","<br>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div  class=\"card card text-white bg-dark\">\r\n      <div class=\"card-header \">\r\n        <h5 class=\"card-title\">¿Qué desea hacer?</h5>\r\n      </div>\r\n      <div class=\"card-body \">\r\n        <form >\r\n          <p>Obtener estadísticas entre las fechas: </p>\r\n          <mat-form-field appearance=\"legacy\">\r\n            <mat-label>Ingrese el rango de fechas</mat-label>\r\n            <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n              <input matStartDate formControlName=\"start\" placeholder=\"Start date\">\r\n              <input matEndDate formControlName=\"end\" placeholder=\"End date\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n        \r\n          </mat-form-field>\r\n          <button mat-button-toggle matSuffix mat-icon-button aria-label=\"Search\"\r\n          [disabled]=\"range.controls.start.errors?.required\r\n          || range.controls.end.errors?.required\"\r\n          (click)=\"openShowStatisticsByDate()\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\r\n            || range.controls.end.hasError('matEndDateInvalid')\">Rango de fechas inválida</mat-error>\r\n      \r\n        </form>\r\n        <br>\r\n        <form [formGroup]=\"firstFormGroup\">\r\n            <div class=\"example-button-row\">\r\n              <p>Obtener el estadísticas de: </p>\r\n              <mat-form-field appearance=\"legacy\" class=\"example-form-field\">\r\n                <mat-label>Nombre del usuario</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"firstCtrl\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                  <mat-option *ngFor=\"let user of filteredUsers | async\" [value]=\"user.username\">\r\n                    {{user.username}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n              </mat-form-field>\r\n              <button mat-icon-button aria-label=\"Search\"\r\n              [disabled]=\"firstFormGroup.controls.firstCtrl.hasError('required') || !userExists()\"\r\n               (click)=\"openShowIndividualStatisticsDialog()\">\r\n                <mat-icon>search</mat-icon>\r\n              </button>\r\n              <mat-error *ngIf=\"!firstFormGroup.controls.firstCtrl.hasError('required') && !userExists()\">\r\n                Debe insertar un usuario valido\r\n              </mat-error>\r\n                \r\n              \r\n            </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Municipality } from '../shared/models/municipality.model';\r\nimport { ImagesService } from '../_services/images.service';\r\n\r\n@Component({\r\n  selector: 'app-game-show-municipality-statistics',\r\n  templateUrl: './game-show-municipality-statistics.component.html',\r\n  styleUrls: ['./game-show-municipality-statistics.component.css']\r\n})\r\nexport class GameShowMunicipalityStatisticsComponent implements OnInit {\r\n\r\n  municipality: Municipality;\r\n  imageService: ImagesService;\r\n  municipalityImgUrl: string = '';\r\n  isLoading = true;\r\n\r\n  constructor(public dialogRef: MatDialogRef<GameShowMunicipalityStatisticsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Municipality,\r\n    imageService: ImagesService) {\r\n    this.municipality = data;\r\n    this.imageService = imageService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.imageService.getImages(this.municipality.nombre).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        if (data.hits.length > 0) {          \r\n          this.municipalityImgUrl = data.hits[0].webformatURL;\r\n          console.log(this.municipalityImgUrl);\r\n        }\r\n\r\n        else {\r\n          this.municipalityImgUrl = \"../assets/provinces/Catamarca.png\";\r\n        }\r\n\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!isLoading\">\r\n<h1 mat-dialog-title><u>{{municipality.nombre}}</u></h1>\r\n<img id=\"municipality-image\" src={{municipalityImgUrl}} alt=\"\">\r\n<mat-list>\r\n    <mat-list-item>\r\n        <mat-icon matListIcon>account_balance</mat-icon>\r\n        <h3 matLine>Perteneciente a: {{municipality.owner}}</h3>\r\n    </mat-list-item>\r\n    <mat-list-item>\r\n        <mat-icon matListIcon>construction</mat-icon>\r\n        <h3 matLine>Coeficiente Produccion: {{municipality.mode.coefProdGauchos}}</h3>\r\n    </mat-list-item>\r\n    <mat-list-item>\r\n        <mat-icon matListIcon>local_police</mat-icon>\r\n        <h3 matLine>Coeficiente Defensa: {{municipality.mode.multDef}}</h3>\r\n    </mat-list-item>\r\n    <mat-list-item>\r\n        <mat-icon matListIcon>face</mat-icon>\r\n        <h3 matLine>Cantidad de Gauchos: {{municipality.gauchos}}</h3>\r\n    </mat-list-item>\r\n</mat-list>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>\r\n</div>\r\n\r\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-pass-turn',\r\n  templateUrl: './game-pass-turn.component.html',\r\n  styleUrls: ['./game-pass-turn.component.css']\r\n})\r\nexport class GamePassTurnComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GamePassTurnComponent>) {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>❗ ¿Estás seguro que deseas pasar el turno? ❗</h1>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\" id=\"confirm-button\">Confirmar</button>\r\n    <button mat-button cdkFocusInitial (click)=\"onCancel()\" id=\"cancel-button\">Cancelar</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  content: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    //TODO: Ver que puede ir aca en la pagina principal\r\n    \r\n    /*this.userService.getPublicContent().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );*/\r\n  }\r\n}","<div class=\"container\">\r\n    <header class=\"jumbotron\">\r\n      <p>{{ content }}</p>\r\n    </header>\r\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class ProvinceInfo {\r\n  name: String;\r\n  municipalitiesCant: number;\r\n\r\n  constructor(name: string, municipalitiesCant:number){\r\n    this.name = name;\r\n    this.municipalitiesCant = municipalitiesCant;\r\n  }\r\n\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-statistics-show',\r\n  templateUrl: './statistics-show.component.html',\r\n  styleUrls: ['./statistics-show.component.scss']\r\n})\r\nexport class StatisticsShowComponent implements OnInit {\r\n\r\n  statistics: Array<any> = [];\r\n  elementsStatistics: Map<string, number>;\r\n\r\n  constructor(public dialogRef: MatDialogRef<StatisticsShowComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Map<string, number>) {\r\n      this.elementsStatistics = data;\r\n     }\r\n\r\n  ngOnInit() { \r\n    Object.entries(this.elementsStatistics).forEach((v) =>\r\n      this.statistics.push({key: v[0].toString().replace('_', ' '), val: v[1]}));\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Estadisticas </h1>\r\n<div mat-dialog-content>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card card text-white bg-dark\">\r\n            <div class=\"card-body \">\r\n              <table class=\"table table-striped table-dark\" matSort >\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Estado del juego</th>\r\n                    <th scope=\"col\">Cantidad de juegos</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of statistics ; let i = index;\">\r\n                    <td>{{element.key}}</td>\r\n                    <td>{{element.val}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"card-footer \">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}","import { GameStyle } from './gameStyle.model';\r\n\r\nexport class GameInfo {\r\n  playersUsernames: Array<String>;\r\n  provinceName: String;\r\n  municipalitiesCant: number;\r\n  styleIndex: Number;\r\n\r\n  constructor(playersUsernames: Array<String>, municipalitiesCant:number, provinceName:String, gameStyle: Number){\r\n    this.playersUsernames = playersUsernames;\r\n    this.municipalitiesCant = municipalitiesCant;\r\n    this.provinceName = provinceName;    \r\n    this.styleIndex = gameStyle;\r\n    console.log(this.styleIndex);\r\n  }\r\n\r\n}","\r\nexport enum GameState {\r\n  CREATED,\r\n  IN_PROGRESS,\r\n  FINISHED,\r\n  CANCELLED\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {GameInfo} from '../shared/models/gameInfo.model';\r\nimport {Game} from '../shared/models/game.model';\r\nimport {Action} from '../shared/models/action.model';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GamesService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  createGame(gameInfo: GameInfo): Observable<any> {\r\n    return this.http.post(API_URL + 'games', {\r\n      playersUsernames: gameInfo.playersUsernames,\r\n      provinceName: gameInfo.provinceName,\r\n      municipalitiesCant: gameInfo.municipalitiesCant,\r\n      styleIndex: gameInfo.styleIndex\r\n    }, httpOptions);\r\n  }\r\n\r\n  getGame(id: Number): Observable<Game> {\r\n    return this.http.get<Game>(API_URL + 'games/' + id.toString(), { responseType: 'json' });\r\n  }\r\n\r\n  getGames(): Observable<Array<Game>> {\r\n    return this.http.get<Array<Game>>(API_URL + 'games', { responseType: 'json' });\r\n  }\r\n\r\n  getGamesByDate(from: Date, to: Date):Observable<Array<Game>>\r\n  {\r\n    return this.http.get<Array<Game>>(API_URL + \"games/by?\" +\r\n      \"from=\" + this.convertDateToISOString(from) + \"&to=\"\r\n      + this.convertDateToISOString(to), { responseType: 'json' });\r\n  }\r\n\r\n  convertDateToISOString(date: Date): string\r\n  {\r\n    return date.getFullYear().toString() + \"-\" + (date.getMonth() + 1).toString() + \"-\" + date.getDate().toString();\r\n  }\r\n\r\n  moveGauchos(action: Action, id: Number): Observable<any> {\r\n    return this.http.post(API_URL + 'games/' + id.toString() + \"/moves\", {\r\n      attackMun: action.attackMun,\r\n      defenceMun: action.defenceMun,\r\n      ammount: action.ammount\r\n    }, httpOptions);\r\n  }\r\n\r\n  attackGauchos(action: Action, id: Number): Observable<any> {\r\n    return this.http.post(API_URL + 'games/' + id.toString() + \"/attacks\", {\r\n      attackMun: action.attackMun,\r\n      defenceMun: action.defenceMun,\r\n      ammount: action.ammount\r\n    }, httpOptions);\r\n  }\r\n\r\n  changeMode(action: Action, id: Number):Observable<any>{\r\n    return this.http.post(API_URL + 'games/' + id.toString() + \"/municipalities/mode\", {\r\n      attackMun: action.attackMun,\r\n      defenceMun: action.defenceMun,\r\n      ammount: action.ammount\r\n    }, httpOptions);\r\n  }\r\n\r\n  passTurn(id: Number):Observable<any>{\r\n    return this.http.post(API_URL + 'games/' + id.toString() + \"/passTurn\", httpOptions);\r\n  }\r\n\r\n  surrender(id: Number):Observable<any>{\r\n    return this.http.post(API_URL + 'games/' + id.toString() + \"/surrender\", httpOptions);\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ElementScoreBoard } from '../shared/models/elementScoreBoard.model';\r\nimport { ScoreBoardShowService } from '../_services/score-board-show.service';\r\n\r\n@Component({\r\n  selector: 'app-score-board-show',\r\n  templateUrl: './score-board-show.component.html',\r\n  styleUrls: ['./score-board-show.component.css']\r\n})\r\nexport class ScoreBoardShowComponent implements OnInit {\r\n\r\n  gameId: number; \r\n // elementsScoreBoard: Map<string, number>; \r\n  scoreBoard: Array<any> = [];\r\n\r\n  constructor(private scoreBoardShowService: ScoreBoardShowService, public dialogRef: MatDialogRef<ScoreBoardShowComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: number) {\r\n      this.gameId = data;\r\n     }\r\n\r\n  ngOnInit() {\r\n      this.scoreBoardShowService.getScoreBoard(this.gameId).subscribe(data =>\r\n      {\r\n       // this.elementsScoreBoard = data;\r\n        /*Object.entries(this.elementsStatistics).forEach((v) =>\r\n      this.statistics.push({key: v[0].toString().replace('_', ' '), val: v[1]})); */\r\n      Object.entries(data).forEach((v) =>\r\n      this.scoreBoard.push({key: v[0], val: v[1]}));\r\n      }\r\n    );\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Scoreboard del juego {{gameId}} </h1>\r\n<div mat-dialog-content>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card card text-white bg-dark\">\r\n            <div class=\"card-body \">\r\n              <table class=\"table table-striped table-dark\" matSort >\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Jugador</th>\r\n                    <th scope=\"col\">Municipalidades obtenidas</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let element of scoreBoard ; let i = index;\">\r\n                    <td>{{element.key}}</td>\r\n                    <td>{{element.val}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"card-footer \">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ProvinceInfo} from '../shared/models/provinceInfo.model';\r\nimport {ProvincesService} from '../_services/provinces.service';\r\nimport {UserInfo} from '../shared/models/userInfo.model';\r\nimport {UsersService} from '../_services/users.service';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {GamesService} from '../_services/games.service';\r\nimport {GameInfo} from '../shared/models/gameInfo.model';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Router} from '@angular/router';\r\nimport {Rival} from '../shared/models/rival.model';\r\nimport {GameStyle} from '../shared/models/gameStyle.model';\r\n\r\n/**\r\n * @title Stepper overview\r\n */\r\n\r\n@Component({\r\n  selector: 'app-game-create',\r\n  templateUrl: './game-create.component.html',\r\n  styleUrls: ['./game-create.component.css']\r\n})\r\nexport class GameCreateComponent implements OnInit {\r\n  provinceSelected: ProvinceInfo;\r\n  municipalitiesAmount = 0;\r\n  isLinear = true;\r\n  rivalsFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  isInputDisabled: boolean = true;\r\n  provinces: ProvinceInfo[] = [];\r\n  users: UserInfo[] = [];\r\n\r\n  currentUserUsername: String\r\n  myControl = new FormControl();\r\n  filteredUsers: Observable<UserInfo[]>;\r\n  rivals: Array<Rival> = [];\r\n\r\n  gameStyle: GameStyle = GameStyle.NORMAL;\r\n\r\n  possiblesGamesStyles: GameStyle[] = [GameStyle.NORMAL, GameStyle.SUPERDEFENSA, GameStyle.SUPERPROD];\r\n\r\n  gameStyle2: string = 'a';\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n    private provincesService: ProvincesService,\r\n    private usersService: UsersService,\r\n    private gamesService: GamesService,\r\n    private tokenStorageService: TokenStorageService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    const user = this.tokenStorageService.getUser();\r\n    this.currentUserUsername = user.username;\r\n\r\n    this.provincesService.getProvincesList().subscribe(\r\n      result => { result.forEach(p => this.provinces.push(p)); this.sortProvinces(); }\r\n    );\r\n\r\n    this.provinceSelected = new ProvinceInfo(\"provincia sin seleccionar\", 2);\r\n\r\n    this.usersService.getUsersList().subscribe(\r\n      result => { result.forEach(p => { if (p.username !== this.currentUserUsername) { this.users.push(p) } }) }\r\n    );\r\n\r\n    this.rivalsFormGroup = this._formBuilder.group({\r\n    });\r\n\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrlFirstCondition: ['', Validators.required],\r\n      secondCtrlSecondCondition: [{ value: '' }, [Validators.required]]\r\n    });\r\n\r\n    this.addRival();\r\n\r\n\r\n  }\r\n\r\n  isAddRivalDisabled(){\r\n    return this.rivals.length >= 3;\r\n  }\r\n\r\n\r\n  isDeleteRivalDisabled(){\r\n    return this.rivals.length <= 1;\r\n  }\r\n\r\n  sortProvinces() {\r\n    this.provinces.sort(function (p1, p2) {\r\n      if (p1.name > p2.name) { return 1; }\r\n      if (p1.name < p2.name) { return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n\r\n  public notAllUsernameAreValid(): Boolean {\r\n    return this.anyUsernameIsEmpty() || this.anyUsernameIsNotValid();\r\n  };\r\n\r\n  anyUsernameIsNotValid(): boolean{\r\n    let possibleRivalsUsernames = this.rivals.map(r => {\r\n      var formControlChild = this.getFormControlRival(r);\r\n      return formControlChild.value;\r\n    });\r\n\r\n    return this.isThereRepeatedRivals(possibleRivalsUsernames) || !this.allRivalsExists(possibleRivalsUsernames);\r\n  }\r\n\r\n  allRivalsExists(possibleRivalsUsernames: Array<string>): boolean{\r\n    return possibleRivalsUsernames.every(r => {\r\n      return this.users.some(user => r == user.username);\r\n    });\r\n\r\n  }\r\n\r\n  isThereRepeatedRivals(possibleRivalsUsernames: Array<string>): boolean{\r\n    const status =  possibleRivalsUsernames.some(user => {\r\n      let counter  = 0;\r\n      for (const iterator of possibleRivalsUsernames) {\r\n        if (iterator === user) {\r\n          counter += 1;\r\n        }\r\n      }\r\n      return counter > 1;\r\n    });\r\n\r\n    return status;\r\n  }\r\n\r\n\r\n  anyUsernameIsEmpty(): boolean{\r\n\r\n    if(this.rivals.length > 0){\r\n      return this.rivals.some(r => {\r\n        var formControlChild = this.getFormControlRival(r);\r\n        return formControlChild.hasError('required');\r\n      });\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  getFormControlRival(r: Rival): AbstractControl{\r\n    var formControlName = 'rival'+(r.id).toString();\r\n    return this.rivalsFormGroup.controls[formControlName];\r\n  }\r\n\r\n  public createGame() {\r\n    var userNames = new Array<String>();\r\n    var municipalitiesCant = this.secondFormGroup.controls.secondCtrlSecondCondition.value;\r\n    var provinceName = this.provinceSelected.name;\r\n\r\n    this.rivals.forEach(r => {\r\n      var formControlChild = this.getFormControlRival(r);\r\n      r.username = formControlChild.value;\r\n    });\r\n\r\n    this.rivals.forEach(r => userNames.push(r.username));\r\n    userNames.push(this.currentUserUsername);\r\n\r\n    var gameInfo = new GameInfo(userNames, municipalitiesCant, provinceName, this.gameStyle);\r\n    //console.log(this.gameStyle);\r\n    this.gamesService.createGame(gameInfo).subscribe(\r\n      data => { this.router.navigate(['/game', data.id]); }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  public municipalitiesCantUnder100(municipalitiesCant: number): boolean {\r\n    return municipalitiesCant < 100;\r\n  }\r\n\r\n  addRival(){\r\n    this.rivals.push(new Rival(this.rivals.length+1));\r\n    let rivalControlName = 'rival'+ (this.rivals.length).toString();\r\n    this.rivalsFormGroup.addControl(rivalControlName, new FormControl('', Validators.required));\r\n  }\r\n\r\n  deleteRival(){\r\n    let rivalControlName = 'rival'+ (this.rivals.length).toString();\r\n    this.rivals.pop();\r\n    this.rivalsFormGroup.removeControl(rivalControlName);\r\n  }\r\n\r\n  convertEnumToString(gameStyle: GameStyle): string{\r\n    return GameStyle[gameStyle];\r\n  }\r\n\r\n}\r\n","<mat-horizontal-stepper class=\"bg-dark text-white\" [linear]=\"isLinear\" #stepper>\r\n    <mat-step [stepControl]=\"rivalsFormGroup\">\r\n        <form [formGroup]=\"rivalsFormGroup\">\r\n            <ng-template matStepLabel>Busca rivales</ng-template>\r\n            <p style=\"display: inline;\">¿A quien enfrentaras el dia de hoy?</p>\r\n            <!--<mat-form-field>\r\n                <mat-label>Nombre de usuario</mat-label>\r\n                <input matInput formControlName=\"firstCtrl\" required>\r\n            </mat-form-field>-->\r\n            <button class=\"add-button\" mat-button (click)=\"addRival()\" [disabled]=\"isAddRivalDisabled()\">\r\n                <span class=\"material-icons\">\r\n                    person_add\r\n                </span>\r\n            </button>\r\n            <button class=\"delete-button\" mat-button (click)=\"deleteRival()\" [disabled]=\"isDeleteRivalDisabled()\">\r\n                <span class=\"material-icons\">\r\n                    person_remove\r\n                </span>\r\n            </button>\r\n\r\n            <rival-component *ngFor=\"let rival of rivals;\" \r\n            [possiblesRivals] = \"users\" [parentFormGroup] = \"rivalsFormGroup\" [rival] = \"rival\">\r\n\r\n            </rival-component>\r\n\r\n            <!--<mat-form-field class=\"example-full-width\">                \r\n                <input type=\"text\" placeholder=\"Elige oponente\" aria-label=\"Number\" matInput formControlName=\"firstCtrl\"\r\n                    [matAutocomplete]=\"auto\">\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let user of filteredUsers | async\" [value]=\"user.username\">\r\n                        {{user.username}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>-->\r\n\r\n            <mat-error *ngIf=\"notAllUsernameAreValid()\">\r\n                Todos los usuarios que ingrese deben ser validos y no se debe elegir mas de 1 vez al mismo rival\r\n            </mat-error>\r\n\r\n            <div>\r\n                <button id=\"next-button\" class=\"btn btn-info\" [disabled]=\"notAllUsernameAreValid()\" mat-button\r\n                    matStepperNext>Next</button>\r\n            </div>\r\n\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Elige modo de juego\">\r\n        <form [formGroup]=\"secondFormGroup\">\r\n            <p>¿En donde tendra lugar vuestro combate?</p>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label style=\"color: white\">Provincia de combate</mat-label>\r\n                <mat-select formControlName=\"secondCtrlFirstCondition\" required [(value)]=\"provinceSelected\">\r\n                    <mat-option *ngFor=\"let province of provinces\" [value]=\"province\">\r\n                        {{province.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <br>\r\n            <p>¿Cuantas municipalidades?</p>\r\n            <br>\r\n            <br>\r\n            <mat-slider *ngIf=\"municipalitiesCantUnder100(provinceSelected.municipalitiesCant); \r\n                    else municipalitiesCantOver100\" formControlName=\"secondCtrlSecondCondition\" thumbLabel\r\n                tickInterval=\"1000\" min=\"2\" max=\"{{provinceSelected.municipalitiesCant}}\"></mat-slider>\r\n            <ng-template #municipalitiesCantOver100>\r\n                <mat-slider formControlName=\"secondCtrlSecondCondition\" thumbLabel tickInterval=\"1000\" min=\"2\"\r\n                    max=\"100\"></mat-slider>\r\n            </ng-template>\r\n            <div>\r\n                <button mat-button class=\"btn btn-secondary\" matStepperPrevious>Back</button>\r\n                <button mat-button class=\"btn btn-info\" matStepperNext>Next</button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step>\r\n        <ng-template matStepLabel>¡A Pelear!</ng-template>\r\n        <p>Modo de Juego</p>\r\n        <br>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-select  required [(value)]=\"gameStyle\">\r\n                <mat-option *ngFor=\"let possibleGameStyle of possiblesGamesStyles\" \r\n                [value]=\"possibleGameStyle\">\r\n                    {{convertEnumToString(possibleGameStyle)}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <div>\r\n            <button mat-button class=\"btn btn-secondary\" matStepperPrevious>Back</button>\r\n            <button mat-button class=\"btn btn-success\" (click)=\"createGame()\">Confirmar\r\n                <span class=\"material-icons\" style=\"margin-bottom: 4px;\">\r\n                    done\r\n                </span>\r\n            </button>\r\n        </div>\r\n    </mat-step>\r\n</mat-horizontal-stepper>","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from '../_services/user.service';\r\nimport {Game} from \"../shared/models/game.model\";\r\nimport {Sort} from '@angular/material/sort';\r\nimport {GameState} from \"../shared/models/gameState.model\";\r\nimport {GamesService} from '../_services/games.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {GamePassTurnComponent} from '../game-pass-turn/game-pass-turn.component';\r\nimport {GameTurnChangedComponent} from '../game-turn-changed/game-turn-changed.component';\r\nimport {GameSurrenderComponent} from '../game-surrender/game-surrender.component';\r\nimport {GameSurrenderedComponent} from '../game-surrendered/game-surrendered.component';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './board-user.component.html',\r\n  styleUrls: ['./board-user.component.css']\r\n})\r\nexport class BoardUserComponent implements OnInit {\r\n  content = '';\r\n  games: Array<Game>;\r\n  sortedData: Game[];\r\n\r\n\r\n  constructor(private userService: UserService, private gamesService: GamesService,\r\n    private router: Router, public dialog: MatDialog, private tokenStorageService: TokenStorageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.gamesService.getGames().subscribe(data =>\r\n      {\r\n        this.games = data;\r\n        this.sortedData = this.games.slice();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.games.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'date': return compare(a.date, b.date, isAsc);\r\n        case 'state': return compare(a.state, b.state, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isGameFinished(game: Game): boolean{\r\n    return game.state === GameState.FINISHED;\r\n  }\r\n\r\n  goToGame(id: number){\r\n    this.router.navigate(['/game', id]);\r\n  }\r\n\r\n  public changeTurn(id: number){\r\n    const dialogRef = this.dialog.open(GamePassTurnComponent, {\r\n      width: '500px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(changeTurn => {\r\n      if(changeTurn){\r\n        this.gamesService.passTurn(id).subscribe(data => {\r\n          this.turnChanged();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  turnChanged(){\r\n    const dialogRef = this.dialog.open(GameTurnChangedComponent, {\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  public surrender(id: number) {\r\n    const dialogRef = this.dialog.open(GameSurrenderComponent, {\r\n      width: '500px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(changeTurn => {\r\n      if(changeTurn){\r\n        this.gamesService.surrender(id).subscribe(data => {\r\n          this.surrendered();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  surrendered(){\r\n    const dialogRef = this.dialog.open(GameSurrenderedComponent, {\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  public isCancelAvailable(game: Game): boolean{\r\n    const user = this.tokenStorageService.getUser();\r\n    return game.players[0] === user.username;\r\n    //return false; // TODO\r\n  }\r\n\r\n  public isSurrenderAvailable(game: Game): boolean{\r\n    return !this.isGameFinished(game);\r\n  }\r\n\r\n}\r\n\r\nfunction compare(a: number | string | Date, b: number | string | Date, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","<br>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card text-white bg-dark\">\r\n      <div class=\"card-header \">\r\n        <h5 class=\"card-title\">Partidas</h5>\r\n        <p class=\"card-category\">Visualiza el estado de tus partidas </p>\r\n        <a routerLink=\"/create\">\r\n          <button type=\"button\" class=\"btn btn-success new-game\">Crear partida</button>\r\n        </a>\r\n\r\n        \r\n\r\n      </div>\r\n\r\n      <div class=\"card-body \">\r\n        <table class=\"table table-striped table-dark\" matSort (matSortChange)=\"sortData($event)\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Jugadores</th>\r\n              <th scope=\"col\">Provincia</th>\r\n              <th mat-sort-header=\"date\">Fecha</th>\r\n              <th mat-sort-header=\"state\">Estado</th>\r\n              <th scope=\"col\">Jugar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let game of sortedData ; let i = index;\">\r\n              <th scope=\"row\">{{i}}</th>\r\n              <td><span *ngFor=\"let player of game.players; let isLast=last\">\r\n                  {{player}}{{isLast ? '' : ', '}}\r\n                </span>\r\n              </td>\r\n              <td>{{game.province}}</td>\r\n              <td>{{game.date | date: 'short'}}</td>\r\n              <td>{{game.state}}</td>\r\n              <td><button mat-button-toggle matSuffix mat-icon-button\r\n                [disabled]=\"isGameFinished(game)\" color=\"primary\" \r\n                 (click)=\"goToGame(game.id)\">\r\n                <mat-icon>play_arrow</mat-icon>\r\n              </button>\r\n              <button mat-button-toggle matSuffix mat-icon-button id=\"pass-button\" *ngIf=\"isCancelAvailable(game)\"\r\n                  (click)=\"changeTurn(game.id)\">\r\n              <mat-icon>cancel</mat-icon> \r\n              </button>\r\n              <button mat-button-toggle matSuffix mat-icon-button id=\"surrender-button\" *ngIf=\"isSurrenderAvailable(game)\"\r\n                      (click)=\"surrender(game.id)\">\r\n                  <mat-icon>emoji_flags</mat-icon>\r\n              </button>\r\n            </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <canvas id=chartHours width=\"400\" height=\"180\"></canvas>\r\n\r\n      </div>\r\n\r\n      <div class=\"card-footer \">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Centroide } from './centroide.model';\r\nimport { Movement } from './movement.model';\r\nimport { MunicipalityMode } from \"./municipalityMode.model\";\r\n\r\nexport class Municipality {\r\n  //id: number;\r\n  gauchos: number;\r\n  nombre: string;\r\n  height: number;\r\n  coefDist: number;\r\n  coefAlt: number;\r\n  mode: MunicipalityMode;\r\n  centroide: Centroide;  \r\n  posX: Number = 0;\r\n  posY: Number = 0;\r\n  owner: string;\r\n  movements: Array<Movement>;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from './_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  username: string;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.username = user.username;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n}","<div id=\"app\">\r\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n    <a href=\"#\" class=\"navbar-brand\">wololo</a>\r\n    <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/home\" class=\"nav-link\" routerLink=\"home\">Inicio </a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/statistics\" class=\"nav-link\" routerLink=\"statistics\">Estadísticas</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n        <a href=\"/scoreboard\" class=\"nav-link\" routerLink=\"scoreboard\">Scoreboard</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n        <a href=\"/mod\" class=\"nav-link\" routerLink=\"mod\">Moderator Board</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/user\" class=\"nav-link\" *ngIf=\"isLoggedIn\" routerLink=\"user\">Usuario</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"!isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/register\" class=\"nav-link\" routerLink=\"register\">Registrarse</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href=\"/login\" class=\"nav-link\" routerLink=\"login\">Iniciar Sesion</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\r\n      <li class=\"nav-item\">\r\n        <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a href class=\"nav-link\" (click)=\"logout()\">Cerrar Sesion</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","\r\nexport enum GameStyle {\r\n  NORMAL,\r\n  SUPERDEFENSA,\r\n  SUPERPROD\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Rival } from '../shared/models/rival.model';\r\n\r\n@Component({\r\n  selector: 'rival-component',\r\n  templateUrl: './rival.component.html',\r\n  styleUrls: ['./rival.component.css']\r\n})\r\nexport class RivalComponent implements OnInit {\r\n\r\n  @Input() possiblesRivals\r\n  @Input() parentFormGroup\r\n  @Input() rival;\r\n\r\n  formControlName: string\r\n  filteredUsers: Observable<Rival[]>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.formControlName = 'rival'+(this.rival.id).toString();\r\n    var formControlChild = this.parentFormGroup.controls[this.formControlName];\r\n\r\n    this.filteredUsers = formControlChild.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map((value: string) => this._filter(value))\r\n      )\r\n\r\n    //console.log(this.possiblesRivals);\r\n  }\r\n\r\n  private _filter(value: String): Rival[] {    \r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.possiblesRivals.filter(user => user.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"example-full-width\" [formGroup]=\"parentFormGroup\">                \r\n    <input type=\"text\" placeholder=\"Elige oponente\" aria-label=\"Number\" \r\n        matInput formControlName=\"{{formControlName}}\"\r\n        [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let user of filteredUsers | async\" [value]=\"user.username\">\r\n            {{user.username}}\r\n        </mat-option>\r\n    </mat-autocomplete>\r\n</mat-form-field>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  /*getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }*/\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.token.getUser();\r\n  }\r\n}","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n    <header class=\"jumbotron\">\r\n      <h3>\r\n        <strong>{{ currentUser.username }}</strong> Profile\r\n      </h3>\r\n    </header>\r\n    <p>\r\n      <strong>Token:</strong>\r\n      {{ currentUser.accessToken.substring(0, 20) }} ...\r\n      {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\r\n    </p>\r\n    <p>\r\n      <strong>Email:</strong>\r\n      {{ currentUser.email }}\r\n    </p>\r\n    <strong>Roles:</strong>\r\n    <ul>\r\n      <li *ngFor=\"let role of currentUser.roles\">\r\n        {{ role }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  \r\n  <ng-template #loggedOut>\r\n    Please login.\r\n  </ng-template>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-finished-show-winner',\r\n  templateUrl: './game-finished-show-winner.component.html',\r\n  styleUrls: ['./game-finished-show-winner.component.css']\r\n})\r\nexport class GameFinishedShowWinnerComponent implements OnInit {\r\n\r\n  winner: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GameFinishedShowWinnerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string) {\r\n      this.winner = data;\r\n    }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Partida finalizada ✨</h1>\r\n<div mat-dialog-content>\r\n    <h5 id=\"subtitle\"><u>Ganador</u>: {{winner}} 🎉</h5>    \r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Confirmar</button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\nimport { GameCreateComponent } from './game-create/game-create.component';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {DemoMaterialModule} from './material-module';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { GamePlayComponent } from './game-play/game-play.component';\r\nimport { GameMoveGauchosComponent } from './game-move-gauchos/game-move-gauchos.component';\r\nimport { GameNotTurnToPlayComponent } from './game-not-turn-to-play/game-not-turn-to-play.component';\r\nimport { GameMovementSuccessfulComponent } from './game-movement-successful/game-movement-successful.component';\r\nimport { GameShowMunicipalityStatisticsComponent } from './game-show-municipality-statistics/game-show-municipality-statistics.component';\r\nimport { GameFinishedShowWinnerComponent } from './game-finished-show-winner/game-finished-show-winner.component';\r\nimport { ScoreBoardComponent } from './score-board/score-board.component';\r\nimport { ScoreBoardShowComponent } from './score-board-show/score-board-show.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\nimport { StatisticsShowComponent } from './statistics-show/statistics-show.component';\r\nimport { GamePassTurnComponent } from './game-pass-turn/game-pass-turn.component';\r\nimport { GameTurnChangedComponent } from './game-turn-changed/game-turn-changed.component';\r\nimport { GameSurrenderComponent } from './game-surrender/game-surrender.component';\r\nimport { GameSurrenderedComponent } from './game-surrendered/game-surrendered.component';\r\nimport { RivalComponent } from './rival/rival.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\t\t\t\t\t\t\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    BoardUserComponent,\r\n    BoardModeratorComponent,\r\n    ProfileComponent,\r\n    GameCreateComponent,\r\n    GamePlayComponent,\r\n    GameMoveGauchosComponent,\r\n    GameNotTurnToPlayComponent,\r\n    GameMovementSuccessfulComponent,\r\n    GameShowMunicipalityStatisticsComponent,\r\n    GameFinishedShowWinnerComponent,\r\n    ScoreBoardComponent,\r\n    ScoreBoardShowComponent,\r\n    StatisticsComponent,\r\n    StatisticsShowComponent,\r\n    GamePassTurnComponent,\r\n    GameTurnChangedComponent,\r\n    GameSurrenderComponent,\r\n    GameSurrenderedComponent,\r\n    RivalComponent\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [authInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ProvinceInfo } from '../shared/models/provinceInfo.model';\r\nimport { AuthService } from './auth.service';\r\nimport { TokenStorageService } from './token-storage.service';\r\nimport { AuthInterceptor } from '../_helpers/auth.interceptor';\r\nimport { ProvinceLimits } from '../shared/models/ProvinceLimits.model';\r\n\r\nconst API_URL = 'http://localhost:8080/api/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvincesService {\r\n\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n\r\n  getProvincesList(): Observable<ProvinceInfo[]> {\r\n    \r\n    //var request = \r\n    return this.http.get<ProvinceInfo[]>(API_URL + 'provinces', { responseType: 'json' });\r\n\r\n  }\r\n\r\n  getLimits(): Observable<ProvinceLimits[]> {\r\n    return this.http.get<ProvinceLimits[]>(\"../../assets/provinces/Limites.json\", { responseType: 'json' });\r\n  }\r\n    \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/statistics/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatisticsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIndividualStatistics(userName: string): Observable<Map<string, number>>\r\n  {\r\n    return this.http.get<Map<string, number>>(API_URL + \"users/\" + userName, { responseType: 'json' });\r\n  }\r\n  \r\n  getStatisticsByDate(from: Date, to: Date): Observable<Map<string, number>>\r\n  { \r\n    return this.http.get<Map<string, number>>(API_URL + \"games?\" +\r\n      \"from=\" + this.convertDateToISOString(from) + \"&to=\"\r\n      + this.convertDateToISOString(to), { responseType: 'json' });\r\n  }\r\n\r\n  convertDateToISOString(date: Date): string\r\n  {\r\n    return date.getFullYear().toString() + \"-\" + (date.getMonth() + 1).toString() + \"-\" + date.getDate().toString();\r\n  }\r\n}\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Subscription} from 'rxjs/internal/Subscription';\r\nimport {Game} from '../shared/models/game.model';\r\nimport {GamesService} from '../_services/games.service';\r\nimport {CoordinatesService} from '../_services/coordinates.service';\r\nimport {Municipality} from '../shared/models/municipality.model';\r\nimport {MapPosition} from '../shared/models/mapPosition.model';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {GameMoveGauchosComponent} from '../game-move-gauchos/game-move-gauchos.component';\r\nimport {GameNotTurnToPlayComponent} from '../game-not-turn-to-play/game-not-turn-to-play.component';\r\nimport {Action} from '../shared/models/action.model';\r\nimport {GameMovementSuccessfulComponent} from '../game-movement-successful/game-movement-successful.component';\r\nimport {GameShowMunicipalityStatisticsComponent} from '../game-show-municipality-statistics/game-show-municipality-statistics.component';\r\nimport {GameFinishedShowWinnerComponent} from '../game-finished-show-winner/game-finished-show-winner.component';\r\nimport {Observable} from 'rxjs';\r\nimport {ProvinceLimits} from '../shared/models/ProvinceLimits.model';\r\nimport {ProvincesService} from '../_services/provinces.service';\r\nimport {GamePassTurnComponent} from '../game-pass-turn/game-pass-turn.component';\r\nimport {GameTurnChangedComponent} from '../game-turn-changed/game-turn-changed.component';\r\nimport {GameSurrenderComponent} from '../game-surrender/game-surrender.component';\r\nimport {GameSurrenderedComponent} from '../game-surrendered/game-surrendered.component';\r\n\r\n@Component({\r\n  selector: 'app-game-play',\r\n  templateUrl: './game-play.component.html',\r\n  styleUrls: ['./game-play.component.css']\r\n})\r\nexport class GamePlayComponent implements OnInit {\r\n  private routeSub: Subscription;\r\n\r\n  isLoading = true;\r\n\r\n  selectForm: FormGroup;\r\n  currentUserUsername: String;\r\n\r\n  municipalityInAction: Municipality;\r\n  attackMode: boolean = false;\r\n  moveMode: boolean = false;\r\n  alreadyPlayed: boolean = false;\r\n  isCurrentlyUserTurn: boolean;\r\n  cantGauchosToMove: number = 0;\r\n\r\n  colorsOfMunicipalities: Array<string> = ['Green', 'Red', 'Purple', 'White', 'Cyan', 'Magenta', 'Aquamarine',\r\n  'Beige', 'Chocolate', 'Orange', 'darkgoldenrod', 'Violet', 'Olive'];\r\n\r\n  game: Game; //TODO: cambiar a Game\r\n  gameId: Number;\r\n  imgSizeX: number = 0;\r\n  imgSizeY: number = 0;\r\n\r\n  provinceLimits: ProvinceLimits;\r\n\r\n  matrizPositions: MapPosition[][] = new Array<Array<MapPosition>>();\r\n\r\n  municipalitiesByUser: any;\r\n\r\n  constructor(private gamesService: GamesService, private route: ActivatedRoute,\r\n    private tokenStorageService: TokenStorageService,\r\n    private coordinateService: CoordinatesService,\r\n    private cdRef: ChangeDetectorRef,\r\n    public dialog: MatDialog,\r\n    private provinceService: ProvincesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.routeSub = this.route.params.subscribe(params => {\r\n      this.gameId = params['id']\r\n    });\r\n    this.gamesService.getGame(this.gameId).subscribe(\r\n      data => {\r\n        this.game = data;\r\n        this.provinceService.getLimits().subscribe(data => {\r\n          this.provinceLimits = data.find(pl =>pl.name == this.game.province);\r\n          this.municipalitiesByUser = this.groupByKey(this.game.municipalities, 'owner');\r\n          this.initializeVariables();\r\n        });\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  private getImageDimension(image): Observable<any> {\r\n    return new Observable(observer => {\r\n        const img = new Image();\r\n        img.onload = function (event) {\r\n            const loadedImage: any = event.currentTarget;\r\n            image.width = loadedImage.width;\r\n            image.height = loadedImage.height;\r\n            observer.next(image);\r\n            observer.complete();\r\n        }\r\n        img.src = image.url;\r\n    });\r\n}\r\n\r\n  private groupByKey(array, key) {\r\n    return array\r\n      .reduce((hash, obj) => {\r\n        if(obj[key] === undefined) return hash;\r\n        return Object.assign(hash, { [obj[key]]:( hash[obj[key]] || [] ).concat(obj)})\r\n      }, {})\r\n }\r\n\r\n\r\n  private initializeVariables() {\r\n    const user = this.tokenStorageService.getUser();\r\n    this.currentUserUsername = user.username;\r\n    this.isCurrentlyUserTurn = this.game.players[0] === this.currentUserUsername;\r\n\r\n    let group = {}\r\n\r\n    this.game.municipalities.forEach(m => {\r\n      group[m.nombre] = new FormControl('');\r\n    });\r\n\r\n    this.selectForm = new FormGroup(group);\r\n\r\n    this.assignImgSize();\r\n  }\r\n\r\n  private assignImgSize(){\r\n    const image = {\r\n      url: \"../assets/provinces/\"+this.game.province+\".png\"\r\n    }\r\n\r\n    this.getImageDimension(image).subscribe(\r\n      response => {\r\n        this.imgSizeX = response.width;\r\n        this.imgSizeY = response.height;\r\n        this.assignMunicipalities();\r\n        this.checkVariables();\r\n      }\r\n   );\r\n  }\r\n\r\n  private checkVariables(){\r\n    if(!this.gameFinished()){\r\n      if (!this.isCurrentlyUserTurn) {\r\n        this.openNotYourTurnDialog();\r\n      }\r\n    }\r\n\r\n    else{\r\n      this.openGameFinishedDialog(this.game.players[0]);\r\n    }\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private assignMunicipalities(){\r\n    this.game.municipalities.forEach(m =>\r\n      { this.convertCoordinates(m); this.assignPositionToMunicipality(m); }\r\n    );\r\n  }\r\n\r\n  //Ecuaciones de interpolacion\r\n  private assignPositionToMunicipality(municipality: Municipality) {\r\n    let lonMun = municipality.centroide.lon, latMun = municipality.centroide.lat,\r\n      latMin = this.game.map.latMin, lonMin = this.game.map.lonMin,\r\n      latMax = this.game.map.latMax, lonMax = this.game.map.lonMax,\r\n      limitX = this.provinceLimits.limitX, limitY = this.provinceLimits.limitY,\r\n      limitMinusX = this.provinceLimits.limitMinusX, limitMinusY = this.provinceLimits.limitMinusY;\r\n\r\n    municipality.posX = this.imgSizeX * limitMinusX + (lonMun - lonMin) * (this.imgSizeX * limitX - this.imgSizeX * limitMinusX) / (lonMax - lonMin);\r\n    municipality.posY = this.imgSizeY * limitMinusY + (latMun - latMax) * (this.imgSizeY * limitY - this.imgSizeY * limitMinusY) / (latMin - latMax);\r\n  }\r\n\r\n  private convertCoordinates(municipalitiy: Municipality) {\r\n    this.coordinateService.convertCoordinates(municipalitiy, this.imgSizeX, this.imgSizeY);\r\n  }\r\n\r\n  public calculatePositionAndColor(municipality: Municipality) {\r\n\r\n    let hashAssigned = this.hashNumberFromOwner(municipality.owner);\r\n    let color = this.colorsOfMunicipalities[hashAssigned];\r\n\r\n    return {\r\n      \"top\": municipality.posY.toString() + 'px',\r\n      \"left\": municipality.posX.toString() + 'px',\r\n      \"background\": color\r\n    }\r\n  }\r\n\r\n  private hashNumberFromOwner(owner: string): number{\r\n    var hash = 7;\r\n    for (var i = 0; i < owner.length; i++) {\r\n        hash = hash*31 + owner.charCodeAt(i);\r\n    }\r\n    hash %= this.colorsOfMunicipalities.length;  //Cantidad de colores\r\n    return hash;\r\n  }\r\n\r\n  openGameFinishedDialog(winner: string): void {\r\n    const dialogRef = this.dialog.open(GameFinishedShowWinnerComponent, {\r\n      width: '400px',\r\n      data: winner,\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  openNotYourTurnDialog(): void {\r\n    const dialogRef = this.dialog.open(GameNotTurnToPlayComponent, {\r\n      width: '400px',\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  openMoveGauchosDialog(municipalitiy: Municipality): void {\r\n    const dialogRef = this.dialog.open(GameMoveGauchosComponent, {\r\n      width: '250px',\r\n      data: municipalitiy,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.cantGauchosToMove = result;\r\n    });\r\n  }\r\n\r\n  openShowStatisticsDialog(municipalitiy: Municipality): void {\r\n    const dialogRef = this.dialog.open(GameShowMunicipalityStatisticsComponent, {\r\n      width: '400px',\r\n      data: municipalitiy,\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.cantGauchosToMove = result;\r\n    });\r\n  }\r\n\r\n  public realizeAction(event: any, municipality: Municipality) {\r\n    switch (this.selectForm.value[municipality.nombre]) {\r\n      case 'prepareAttack':\r\n        this.attackMode = true;\r\n        this.municipalityInAction = municipality;\r\n        this.cdRef.detectChanges(); // Esto es porque tira Expression has changed after it was checked\r\n        break;\r\n      case 'prepareMove':\r\n        this.moveMode = true;\r\n        this.municipalityInAction = municipality;\r\n        this.openMoveGauchosDialog(municipality);\r\n        this.cdRef.detectChanges();\r\n        break;\r\n      case 'modify':\r\n        this.municipalityInAction = municipality;\r\n        this.modifySpecialization(municipality);\r\n        this.alreadyPlayed = true;\r\n        this.cdRef.detectChanges();\r\n        break;\r\n      case 'attack':\r\n        this.attack(municipality);\r\n        this.alreadyPlayed = true;\r\n        this.cdRef.detectChanges();\r\n        break;\r\n      case 'move':\r\n        this.moveGauchos(municipality);\r\n        this.alreadyPlayed = true;\r\n        this.cdRef.detectChanges();\r\n        break;\r\n      case 'statistics':\r\n        this.openShowStatisticsDialog(municipality);\r\n        break;\r\n      default:\r\n        throw (\"Se pidio una accion invalida\");\r\n    }\r\n  }\r\n\r\n  private gameFinished(): boolean{\r\n    return this.game.players.length<2;\r\n  }\r\n\r\n  public attack(municipalityTarget: Municipality) {\r\n\r\n    let action = new Action(this.municipalityInAction.nombre, municipalityTarget.nombre, 0);\r\n    this.gamesService.attackGauchos(action, this.gameId).subscribe(\r\n      data => {\r\n        this.game = data;\r\n        if(this.gameFinished()){\r\n          this.openGameFinishedDialog(this.game.players[0]);\r\n        }\r\n        this.openDialogMovementSuccessful(\r\n          \"Has atacado desde \" + action.attackMun+ \" a \"+ action.defenceMun);\r\n      },\r\n      err => {\r\n        console.log(\"Hubo un error al atacar\");\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  public moveGauchos(municipalityTarget: Municipality) {\r\n    let action = new Action(this.municipalityInAction.nombre, municipalityTarget.nombre, this.cantGauchosToMove);\r\n    this.gamesService.moveGauchos(action, this.gameId).subscribe(\r\n      data => {\r\n        this.game = data;\r\n        this.openDialogMovementSuccessful(\r\n          \"Has movido \"+action.ammount+\" gauchos desde \" + action.attackMun+ \" a \"+ action.defenceMun);\r\n      },\r\n      err => {\r\n        console.log(\"Hubo un error al mover los gauchos\");\r\n      }\r\n    );\r\n  }\r\n\r\n  public modifySpecialization(municipalityTarget: Municipality) {\r\n    let action = new Action(this.municipalityInAction.nombre, municipalityTarget.nombre, this.cantGauchosToMove);\r\n    this.gamesService.changeMode(action, this.gameId).subscribe(\r\n      data => {\r\n        this.game = data;\r\n        this.openDialogMovementSuccessful(\r\n          \"Has modificado la especializacion de \" + action.attackMun);\r\n      },\r\n      err => {\r\n        console.log(\"Hubo un error al cambiar la especialidad\");\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialogMovementSuccessful(msg: string): void {\r\n    const dialogRef = this.dialog.open(GameMovementSuccessfulComponent, {\r\n      width: '400px',\r\n      data: msg\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  public playerIsCurrentUser(player: string): boolean {\r\n    return player == this.currentUserUsername;\r\n  }\r\n\r\n  public isCurrentPlayerOption(player: string): boolean {\r\n    return this.playerIsCurrentUser(player);\r\n  }\r\n\r\n  public isSelectActionsDisabled(municipalitiy: Municipality): boolean {\r\n    let municipalityWantsToMove = this.selectForm.value[municipalitiy.nombre] === 'prepareMove';\r\n    return (!this.playerIsCurrentUser(municipalitiy.owner) && !this.attackMode) ||\r\n      (this.playerIsCurrentUser(municipalitiy.owner) && this.attackMode) ||\r\n      (this.playerIsCurrentUser(municipalitiy.owner) && this.moveMode && municipalityWantsToMove) ||\r\n      this.alreadyPlayed || !this.isCurrentlyUserTurn || this.gameFinished();\r\n  }\r\n\r\n  public hasGauchosToAttack(municipality: Municipality): boolean{\r\n    return municipality.gauchos>0;\r\n  }\r\n\r\n  public changeTurn(){\r\n    const dialogRef = this.dialog.open(GamePassTurnComponent, {\r\n      width: '500px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(changeTurn => {\r\n      if(changeTurn){\r\n        this.gamesService.passTurn(this.gameId).subscribe(data => {\r\n          this.game = data;\r\n          this.alreadyPlayed = true;\r\n          this.turnChanged();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  turnChanged(){\r\n    const dialogRef = this.dialog.open(GameTurnChangedComponent, {\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  public surrender() {\r\n    const dialogRef = this.dialog.open(GameSurrenderComponent, {\r\n      width: '500px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(changeTurn => {\r\n      if(changeTurn){\r\n        this.gamesService.surrender(this.gameId).subscribe(data => {\r\n          this.game = data;\r\n          this.alreadyPlayed = true;\r\n          this.surrendered();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  surrendered(){\r\n    const dialogRef = this.dialog.open(GameSurrenderedComponent, {\r\n      width: '400px',\r\n    });\r\n  }\r\n\r\n  public isSpecialButtonsAvailable(): boolean{\r\n    return !this.gameFinished() && this.isCurrentlyUserTurn;\r\n  }\r\n\r\n}\r\n","<div class=\"imdesc\" *ngIf=\"!isLoading\">\r\n    <button class=\"special-button\" id=\"pass-button\" *ngIf=\"isSpecialButtonsAvailable()\" mat-icon-button\r\n            (click)=\"changeTurn()\">\r\n        <mat-icon>cancel</mat-icon>\r\n    </button>\r\n    <button class=\"special-button\" id=\"surrender-button\" *ngIf=\"isSpecialButtonsAvailable()\" mat-icon-button \r\n            (click)=\"surrender()\">\r\n        <mat-icon>emoji_flags</mat-icon>\r\n    </button>\r\n    <img src=\"../assets/provinces/{{game.province}}.png\" />\r\n\r\n    <div *ngFor=\"let municipalitiesUser of municipalitiesByUser | keyvalue;\">\r\n        <div *ngFor=\"let municipality of municipalitiesUser.value\">\r\n            <div class=\"municipality-elements\" [formGroup]=\"selectForm\">\r\n                <select id=\"actions\" class=\"cen\" formControlName=\"{{municipality.nombre}}\"\r\n                    [ngStyle]=\"calculatePositionAndColor(municipality)\"\r\n                    (change)=\"realizeAction($event, municipality); \">\r\n\r\n                    <option selected value> -- Elije Acción -- </option>\r\n                    <option *ngIf=\"!isSelectActionsDisabled(municipality) && \r\n                    isCurrentPlayerOption(municipality.owner) && !this.moveMode\" value=\"prepareAttack\">\r\n                        Preparar\r\n                        ataque\r\n                    </option>\r\n                    <option *ngIf=\"!isSelectActionsDisabled(municipality) && \r\n                    isCurrentPlayerOption(municipality.owner) && !this.moveMode\r\n                    && hasGauchosToAttack(municipality)\" value=\"prepareMove\">\r\n                        Mover\r\n                        Gauchos\r\n                    </option>\r\n                    <option *ngIf=\"!isSelectActionsDisabled(municipality) && \r\n                    isCurrentPlayerOption(municipality.owner) && !this.moveMode\" value=\"modify\">Modificar\r\n                        Especialización\r\n                    </option>\r\n                    <option *ngIf=\"!isSelectActionsDisabled(municipality) && \r\n                    isCurrentPlayerOption(municipality.owner) && this.moveMode\" value=\"move\">Asentar\r\n                        Gauchos\r\n                        Aqui!\r\n                    </option>\r\n                    <option *ngIf=\"!isSelectActionsDisabled(municipality) && \r\n                    !isCurrentPlayerOption(municipality.owner)\" value=\"attack\">Atacar!</option>\r\n                    <option value=\"statistics\">Mostrar Estadisticas</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</div>\r\n\r\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>","import { Injectable } from '@angular/core';\r\nimport { Municipality } from '../shared/models/municipality.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoordinatesService {\r\n\r\n  constructor() { }\r\n\r\n  public convertCoordinates(municipality: Municipality, imgSizeX: number, imgSizeY: number){\r\n    let lat = municipality.centroide.lat;\r\n    let lon = municipality.centroide.lon;\r\n    municipality.posY =  ((lat* 5000) * -1) / (imgSizeY);\r\n    municipality.posX = (lon + 5000) / (imgSizeX);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-turn-changed',\r\n  templateUrl: './game-turn-changed.component.html',\r\n  styleUrls: ['./game-turn-changed.component.css']\r\n})\r\nexport class GameTurnChangedComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GameTurnChangedComponent>) {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Has pasado tu turno al siguiente jugador!</h1>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>board-moderator works!</p>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ElementScoreBoard } from '../shared/models/elementScoreBoard.model';\r\n\r\nconst API_URL = 'http://localhost:8080/api/scoreboard/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScoreBoardShowService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ngetScoreBoard(id: Number): Observable<Map<string, number>> {\r\n  return this.http.get<Map<string, number>>(API_URL + id.toString(), { responseType: 'json' });\r\n}\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-movement-successful',\r\n  templateUrl: './game-movement-successful.component.html',\r\n  styleUrls: ['./game-movement-successful.component.css']\r\n})\r\nexport class GameMovementSuccessfulComponent implements OnInit {\r\n\r\n  mensajeParaUsuario: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<GameMovementSuccessfulComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string) {\r\n    this.mensajeParaUsuario = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>{{mensajeParaUsuario}}</h1>\r\n<p id=\"subtitle\">Ahora espera la ofensiva rival!</p>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\nconst EXCEPTIONS_URL_NO_INTERCEPT = [\"https://cors-anywhere.herokuapp.com\", \"http://cors-anywhere.herokuapp.com\"]\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null && this.isARequestWhoNeedIntercept(req)) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n\r\n  isARequestWhoNeedIntercept(req: HttpRequest<any>): boolean{\r\n    return !EXCEPTIONS_URL_NO_INTERCEPT.some(e => req.url.startsWith(e));\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BoardUserComponent } from './board-user/board-user.component';\r\nimport { BoardModeratorComponent } from './board-moderator/board-moderator.component';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { GameCreateComponent } from './game-create/game-create.component';\r\nimport { GamePlayComponent } from './game-play/game-play.component';\r\nimport { ScoreBoardComponent } from './score-board/score-board.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'user', component: BoardUserComponent },\r\n  { path: 'mod', component: BoardModeratorComponent },\r\n  { path: 'statistics', component: StatisticsComponent },\r\n  { path: 'scoreboard', component: ScoreBoardComponent },\r\n  { path: 'create', component: GameCreateComponent },\r\n  { path: 'game/:id', component: GamePlayComponent },\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule, MatSortModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { TokenStorageService } from '../_services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n\r\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.login(this.form).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n}","<div class=\"card col-lg-8\">\r\n  <h4 class=\"card-header\">Iniciar Sesion</h4>\r\n    <div class=\"card-body\">\r\n      <form\r\n        *ngIf=\"!isLoggedIn\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Nombre De Usuario</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            [(ngModel)]=\"form.username\"\r\n            required\r\n            #username=\"ngModel\"\r\n          />\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && username.invalid\"\r\n          >\r\n            Se requiere un nombre de usuario!\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            [(ngModel)]=\"form.password\"\r\n            required\r\n            minlength=\"6\"\r\n            #password=\"ngModel\"\r\n          />\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && password.invalid\"\r\n          >\r\n            <div *ngIf=\"password.errors.required\">Se requiere una contraseña</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              La contraseña de be contener minimo 6 caracteres\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">\r\n            Iniciar Sesion\r\n          </button>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && isLoginFailed\"\r\n          >\r\n            Inicio de Sesion fallido: {{ errorMessage }}\r\n          </div>\r\n        </div>\r\n      </form>\r\n  \r\n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n        Logueado como {{ roles }}.\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-game-not-turn-to-play',\r\n  templateUrl: './game-not-turn-to-play.component.html',\r\n  styleUrls: ['./game-not-turn-to-play.component.css']\r\n})\r\nexport class GameNotTurnToPlayComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<GameNotTurnToPlayComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>No es tu turno de jugar!</h1>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Ok</button>\r\n</div>","export class Rival {\r\n  \r\n  username: String;\r\n  id: number;\r\n\r\n  constructor(id: number){\r\n    this.id = id;\r\n  }\r\n\r\n}","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Municipality } from '../shared/models/municipality.model';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\n\r\n@Component({\r\n  selector: 'app-game-move-gauchos',\r\n  templateUrl: './game-move-gauchos.component.html',\r\n  styleUrls: ['./game-move-gauchos.component.css']\r\n})\r\nexport class GameMoveGauchosComponent implements OnInit {\r\n  municipality: Municipality;\r\n  cantGauchos: number;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<GameMoveGauchosComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Municipality) {\r\n      this.municipality = data;\r\n    }\r\n\r\n  onAccept(): void {\r\n    this.dialogRef.close(this.cantGauchos);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Mover gauchos desde {{municipality.nombre}}</h1>\r\n<div mat-dialog-content>\r\n    <p>Cantidad de gauchos a mover:</p>\r\n    <mat-slider [(ngModel)]=\"cantGauchos\" thumbLabel tickInterval=\"1000\" min=\"0\"\r\n        max=\"{{municipality.gauchos}}\">\r\n    </mat-slider>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button cdkFocusInitial (click)=\"onAccept()\">Confirmar</button>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}