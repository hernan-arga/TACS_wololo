{"version":3,"sources":["ng://ngx-bootstrap/chronos/utils.ts","ng://ngx-bootstrap/chronos/utils/type-checks.ts","ng://ngx-bootstrap/chronos/units/aliases.ts","ng://ngx-bootstrap/chronos/units/constants.ts","ng://ngx-bootstrap/chronos/utils/zero-fill.ts","ng://ngx-bootstrap/chronos/format/format.ts","ng://ngx-bootstrap/chronos/create/date-from-array.ts","ng://ngx-bootstrap/chronos/utils/date-getters.ts","ng://ngx-bootstrap/chronos/parse/regex.ts","ng://ngx-bootstrap/chronos/parse/token.ts","ng://ngx-bootstrap/chronos/create/parsing-flags.ts","ng://ngx-bootstrap/chronos/units/year.ts","ng://ngx-bootstrap/chronos/units/month.ts","ng://ngx-bootstrap/chronos/utils/date-setters.ts","ng://ngx-bootstrap/chronos/create/clone.ts","ng://ngx-bootstrap/chronos/utils/start-end-of.ts","ng://ngx-bootstrap/chronos/units/day-of-week.ts","ng://ngx-bootstrap/chronos/units/day-of-year.ts","ng://ngx-bootstrap/chronos/units/week-calendar-utils.ts","ng://ngx-bootstrap/chronos/locale/locale.class.ts","ng://ngx-bootstrap/chronos/locale/calendar.ts","ng://ngx-bootstrap/chronos/locale/locale.defaults.ts","ng://ngx-bootstrap/chronos/utils/compare-arrays.ts","ng://ngx-bootstrap/chronos/units/week.ts","ng://ngx-bootstrap/chronos/units/week-year.ts","ng://ngx-bootstrap/chronos/units/timestamp.ts","ng://ngx-bootstrap/chronos/units/quarter.ts","ng://ngx-bootstrap/chronos/units/offset.ts","ng://ngx-bootstrap/chronos/units/hour.ts","ng://ngx-bootstrap/chronos/locale/locales.ts","ng://ngx-bootstrap/chronos/units/timezone.ts","ng://ngx-bootstrap/chronos/units/second.ts","ng://ngx-bootstrap/chronos/units/minute.ts","ng://ngx-bootstrap/chronos/units/millisecond.ts","ng://ngx-bootstrap/chronos/units/day-of-month.ts","ng://ngx-bootstrap/chronos/duration/valid.ts","ng://ngx-bootstrap/chronos/utils/abs-ceil.ts","ng://ngx-bootstrap/chronos/duration/bubble.ts","ng://ngx-bootstrap/chronos/duration/humanize.ts","ng://ngx-bootstrap/chronos/duration/constructor.ts","ng://ngx-bootstrap/chronos/create/valid.ts","ng://ngx-bootstrap/chronos/create/from-string.ts","ng://ngx-bootstrap/chronos/format.ts","ng://ngx-bootstrap/chronos/utils/defaults.ts","ng://ngx-bootstrap/chronos/create/from-array.ts","ng://ngx-bootstrap/chronos/create/check-overflow.ts","ng://ngx-bootstrap/chronos/create/from-string-and-format.ts","ng://ngx-bootstrap/chronos/create/from-object.ts","ng://ngx-bootstrap/chronos/create/from-anything.ts","ng://ngx-bootstrap/chronos/create/from-string-and-array.ts","ng://ngx-bootstrap/chronos/create/local.ts","ng://ngx-bootstrap/chronos/utils/abs-round.ts","ng://ngx-bootstrap/chronos/utils/date-compare.ts","ng://ngx-bootstrap/chronos/duration/create.ts","ng://ngx-bootstrap/chronos/moment/add-subtract.ts","ng://ngx-bootstrap/chronos/i18n/ar.ts","ng://ngx-bootstrap/chronos/i18n/bg.ts","ng://ngx-bootstrap/chronos/i18n/ca.ts","ng://ngx-bootstrap/chronos/i18n/cs.ts","ng://ngx-bootstrap/chronos/i18n/da.ts","ng://ngx-bootstrap/chronos/i18n/de.ts","ng://ngx-bootstrap/chronos/i18n/en-gb.ts","ng://ngx-bootstrap/chronos/i18n/es-do.ts","ng://ngx-bootstrap/chronos/i18n/es.ts","ng://ngx-bootstrap/chronos/i18n/es-us.ts","ng://ngx-bootstrap/chronos/i18n/et.ts","ng://ngx-bootstrap/chronos/i18n/fi.ts","ng://ngx-bootstrap/chronos/i18n/fr.ts","ng://ngx-bootstrap/chronos/i18n/gl.ts","ng://ngx-bootstrap/chronos/i18n/he.ts","ng://ngx-bootstrap/chronos/i18n/hi.ts","ng://ngx-bootstrap/chronos/i18n/hu.ts","ng://ngx-bootstrap/chronos/i18n/hr.ts","ng://ngx-bootstrap/chronos/i18n/id.ts","ng://ngx-bootstrap/chronos/i18n/it.ts","ng://ngx-bootstrap/chronos/i18n/ja.ts","ng://ngx-bootstrap/chronos/i18n/ka.ts","ng://ngx-bootstrap/chronos/i18n/ko.ts","ng://ngx-bootstrap/chronos/i18n/lt.ts","ng://ngx-bootstrap/chronos/i18n/lv.ts","ng://ngx-bootstrap/chronos/i18n/mn.ts","ng://ngx-bootstrap/chronos/i18n/nb.ts","ng://ngx-bootstrap/chronos/i18n/nl-be.ts","ng://ngx-bootstrap/chronos/i18n/nl.ts","ng://ngx-bootstrap/chronos/i18n/pl.ts","ng://ngx-bootstrap/chronos/i18n/pt-br.ts","ng://ngx-bootstrap/chronos/i18n/ro.ts","ng://ngx-bootstrap/chronos/i18n/ru.ts","ng://ngx-bootstrap/chronos/i18n/sk.ts","ng://ngx-bootstrap/chronos/i18n/sl.ts","ng://ngx-bootstrap/chronos/i18n/sv.ts","ng://ngx-bootstrap/chronos/i18n/th.ts","ng://ngx-bootstrap/chronos/i18n/th-be.ts","ng://ngx-bootstrap/chronos/i18n/tr.ts","ng://ngx-bootstrap/chronos/i18n/uk.ts","ng://ngx-bootstrap/chronos/i18n/vi.ts","ng://ngx-bootstrap/chronos/i18n/zh-cn.ts"],"names":["absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","length","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","removeFormattingTokens","match","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","isUTC","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","isSameMonth","date1","date2","isSameYear","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","array","config","i","addWeekParseToken","_w","addTimeToArrayFromToken","_a","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getYear","parseTwoDigitYear","daysInYear","year","isLeapYear","daysInMonth","month","NaN","x","modMonth","defaultTimeUnit","day","seconds","getNum","def","setMonth","dayOfMonth","min","setUTCMonth","setDate","setUTCDate","cloneDate","startOf","_date","setUTCHours","setHours","setUTCMinutes","setMinutes","setUTCSeconds","setSeconds","setUTCMilliseconds","setMilliseconds","weekday","getLocaleDayOfWeek","add","setLocaleDayOfWeek","getLocale","weekdaysParse","parseIsoWeekday","setDayOfWeek","getDayOfWeek","setISODayOfWeek","endOf","subtract","getDayOfYear","someDate","round","firstWeekOffset","dow","doy","fwd","weekOfYear","resWeek","resYear","weekOffset","week","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultMonthsShortRegex","defaultMonthsRegex","Locale","this","set","confKey","prop","_config","calendar","key","now","output","_calendar","sameElse","longDateFormat","format","_longDateFormat","formatUpper","toUpperCase","val","slice","defineProperty","_invalidDate","_ordinal","preparse","preinput","postvalue","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","months","_months","standalone","isFormat","test","monthsShort","_monthsShort","monthsParse","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","monthsRegex","computeMonthsParse","_monthsStrictRegex","_monthsRegex","monthsShortRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfWeek","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","ii","mom","llc","toLocaleLowerCase","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","baseConfig","sameDay","nextDay","nextWeek","lastDay","lastWeek","invalidDate","dayOfMonthOrdinalParse","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","addWeekYearFormatToken","getter","_getWeekYearFormatCb","getWeekYear","_getISOWeekYearFormatCb","getISOWeekYear","initTimestamp","valueOf","unix","_d","parseFloat","initQuarter","getQuarter","addOffsetFormatToken","separator","offset","_offset","_isUTC","getTimezoneOffset","getDateOffset","getUTCOffset","sign","initOffset","_useUTC","_tzm","matcher","matches","parts","chunkOffset","parseInt","_min","offsetFromString","initHour","hFormat","lowercase","matchMeridiem","_meridiemParse","kFormat","kInput","_isPm","_locale","_meridiem","bigHour","pos","pos1","pos2","globalLocale","locales","localeFamilies","normalizeLocale","mergeConfigs","parentConfig","childConfig","res","assign","childProp","parentProp","loadLocale","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","_strict","parseMs","initMillisecond","_dayOfYear","getISODayOfWeek","invalidWeekday","_dayOfMonthOrdinalParse","_ordinalParse","setDefaultLocale","names","next","j","chooseLocale","ordering","orderingHash","reduce","mem","order","absCeil","number","daysToMonths","monthsToDays","thresholds","Duration","duration","_data","normalizedInput","years","quarters","quarter","weeks","days","milliseconds","_isValid","keys","some","unitHasDecimal","isDurationValid","_milliseconds","_days","dur","monthsFromDays","bubble","isValid","humanize","withSuffix","localeData","posNegDuration","createDuration","as","localeKey","mathAbs","_units","Error","flags","parsedParts","isNowValid","isFrozen","createInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","allowTime","dateFormat","timeFormat","tzFormat","l","exec","_f","configFromStringAndFormat","untruncateYear","yearStr","configFromRFC2822","trim","markInvalid","monthStr","dayStr","hourStr","minuteStr","secondStr","result","parsedArray","weekdayStr","parsedInput","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","expandFormat","_format","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","resDayOfYear","dayOfYear","dayOfYearFromWeeks","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","checkOverflow","ISO_8601","RFC_2822","skipped","totalParsedInputLength","inputLength","_hour","meridiemHour","isPm","meridiemFixWrap","configFromObject","inputObject","normalizedProp","normalizeObjectUnits","map","obj","createFromConfig","_l","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","configFromString","_arr","configFromInput","prepareConfig","createLocalOrUTC","_input","getOwnPropertyNames","k","isObjectEmpty","parseDate","absRound","isAfter","isBefore","aspNetRegex","isoRegex","parseIso","diffRes","base","other","_other","offsetDiff","setTime","cloneWithOffset","positiveMomentsDifference","momentsDifference","from","to","convertDuration","inp","period","addSubtract","isAdding","_num","_weekDay","parseWeekday","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","plural","translate","csLocale","months$1","monthsShort$1","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","esDoLocale","monthsRegex$1","monthsParse$1","esLocale","monthsRegex$2","monthsParse$2","esUsLocale","etLocale","numbersPast","numbersFuture","verbalNumber","fiLocale","ll","lll","llll","frLocale","glLocale","monthsRegex$3","monthsParse$3","heLocale","१","२","३","४","५","६","७","८","९","०","hiLocale","weekEndings","huLocale","hrLocale","idLocale","itLocale","jaLocale","kaLocale","st","_period","koLocale","isUpper","translateSingular","forms","special","ltLocale","lvLocale","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","nlBeLocale","monthsRegex$4","monthsParse$4","nlLocale","monthsRegex$5","monthsParse$5","monthsNominative","monthsSubjective","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","word","ruLocale","monthsParse$6","skLocale","slLocale","svLocale","thLocale","thBeLocale","preinputDate","suffixes","70","80","20","50","100","10","30","60","90","trLocale","processHoursFunction","ukLocale","nominative","accusative","genitive","viLocale","zhCnLocale","formatArr","postValue","makeFormatFunction","formatMoment","daysDisabled","inputMs","tmpLocale"],"mappings":"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","sourcesContent":["\n\nexport function mod(n: number, x: number): number {\n  return (n % x + x) % x;\n}\n\nexport function absFloor(num: number): number {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\n","import { absFloor } from '../utils';\n\nexport function isString(str: any): str is string {\n  return typeof str === 'string';\n}\n\nexport function isDate(value: any): value is Date {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return value === true || value === false;\n}\n\nexport function isDateValid(date: Date): boolean {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return (\n    fn instanceof Function ||\n    Object.prototype.toString.call(fn) === '[object Function]'\n  );\n}\n\nexport function isNumber(value?: any): value is number {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nexport function isArray<T>(input?: any): input is T[] {\n  return (\n    input instanceof Array ||\n    Object.prototype.toString.call(input) === '[object Array]'\n  );\n}\n\nexport function hasOwnProp<T>(a: T /*object*/, b: string): b is Extract<keyof T, string> {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nexport function isObject<T>(input: any /*object*/): input is T {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return (\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\n  );\n}\n\nexport function isObjectEmpty(obj: any): boolean {\n  if (Object.getOwnPropertyNames) {\n    return (Object.getOwnPropertyNames(obj).length === 0);\n  }\n  let k;\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nexport function isUndefined(input: any): boolean {\n  return input === void 0;\n}\n\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n","import { hasOwnProp, isString } from '../utils/type-checks';\nimport { DateObject, UnitOfTime } from '../types';\n\nconst aliases: { [key: string]: string } = {};\n\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\n\nconst _mapUnits: { [key: string]: UnitOfTime } = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n\nexport function normalizeUnits(units: string | string[]): string {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nexport function normalizeObjectUnits(inputObject: { [key: string]: number }): DateObject {\n  const normalizedInput: { [key: string]: number } = {};\n  let normalizedProp;\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return normalizedInput as any;\n}\n","// place in new Date([array])\nexport const YEAR = 0;\nexport const MONTH = 1;\nexport const DATE = 2;\nexport const HOUR = 3;\nexport const MINUTE = 4;\nexport const SECOND = 5;\nexport const MILLISECOND = 6;\nexport const WEEK = 7;\nexport const WEEKDAY = 8;\n","export function zeroFill(num: number,\n                         targetLength: number,\n                         forceSign?: boolean): string {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return (_sign + _zeros + absNumber);\n}\n","import { Locale } from '../locale/locale.class';\nimport { zeroFill } from '../utils/zero-fill';\nimport { isFunction } from '../utils/type-checks';\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\n\nexport let formatFunctions: {\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\n} = {};\nexport let formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\n\n// tslint:disable-next-line\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nexport function addFormatToken(token: string,\n                               padded: [string, number, boolean],\n                               ordinal: string,\n                               callback: DateFormatterFn): void {\n\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function (): string {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n\nexport function makeFormatFunction(format: string):\n  (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\n\n  const array: string[] = format.match(formattingTokens);\n  const length = array.length;\n\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]]\n      ? formatTokenFunctions[array[i]]\n      : removeFormattingTokens(array[i]);\n  }\n\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\n\n    const postValue = locale.postvalue(date);\n\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j])\n        ? (formatArr[j] as DateFormatterFn).call(null, postValue, {format, locale, isUTC, offset})\n        : formatArr[j];\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input: string): string {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n","export function createUTCDate(y?: number,\n                              m?: number,\n                              d?: number): Date {\n  const date = new Date(Date.UTC.apply(null, arguments));\n\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n\nexport function createDate(y?: number,\n                           m = 0,\n                           d = 1,\n                           h = 0,\n                           M = 0,\n                           s = 0,\n                           ms = 0): Date {\n  const date = new Date(y, m, d, h, M, s, ms);\n\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n","import { createDate } from '../create/date-from-array';\n\nexport function getHours(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n\nexport function getMinutes(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n\nexport function getSeconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n\nexport function getMilliseconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nexport function getTime(date: Date): number {\n  return date.getTime();\n}\n\nexport function getDay(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n\nexport function getDate(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n\nexport function getMonth(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n\nexport function getFullYear(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n\nexport function getUnixTime(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function unix(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function getFirstDayOfMonth(date: Date): Date {\n  return createDate(\n    date.getFullYear(),\n    date.getMonth(),\n    1,\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds()\n  );\n}\n\nexport function daysInMonth(date: Date): number {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n\nexport function _daysInMonth(year: number, month: number): number {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\n  return date.getDay() === firstDayOfWeek;\n}\n\nexport function isSameMonth(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n\nexport function isSameYear(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n\nexport function isSameDay(date1: Date, date2: Date): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return (\n    isSameYear(date1, date2) &&\n    isSameMonth(date1, date2) &&\n    getDate(date1) === getDate(date2)\n  );\n}\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\nimport { Locale } from '../locale/locale.class';\n\nexport const match1 = /\\d/;            //       0 - 9\nexport const match2 = /\\d\\d/;          //      00 - 99\nexport const match3 = /\\d{3}/;         //     000 - 999\nexport const match4 = /\\d{4}/;         //    0000 - 9999\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nexport const matchUnsigned = /\\d+/;           //       0 - inf\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\n\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\nconst regexes: {[key: string]: RegExpTokenFn} = {};\n\n\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n\n    return;\n  }\n\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\n    return (isStrict && strictRegex) ? strictRegex : regex;\n  };\n}\n\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str: string): string {\n  // tslint:disable-next-line\n  return regexEscape(str\n    .replace('\\\\', '')\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\n  );\n}\n\nexport function regexEscape(str: string): string {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","// tslint:disable:max-line-length\nimport { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateParseTokenFn } from '../types';\n\nconst tokens: {[key: string]: DateParseTokenFn} = {};\n\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[callback] = toInt(input);\n\n      return config;\n    };\n  }\n\n  if (isArray<string>(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\n    config._w = config._w || {};\n\n    return callback(input, config._w, config, _token);\n  });\n}\n\n\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\n\nfunction defaultParsingFlags(): DateParsingFlags {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n","import { addFormatToken } from '../format/format';\nimport { getFullYear } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { YEAR } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\n  return getFullYear(date, opts.isUTC).toString();\n}\n\nexport function initYear() {\n  addFormatToken('Y', null, null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    const y = getFullYear(date, opts.isUTC);\n\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n\n  addFormatToken(null, ['YY', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n\n  // ALIASES\n\n  addUnitAlias('year', 'y');\n\n  // PRIORITIES\n\n  addUnitPriority('year', 1);\n\n  // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n\n    return config;\n  });\n}\n\nexport function parseTwoDigitYear(input: string): number {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n\nexport function daysInYear(year: number): number {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function isLeapYear(year: number): boolean {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n","import { addFormatToken } from '../format/format';\nimport { isLeapYear } from './year';\nimport { mod } from '../utils';\nimport { getMonth } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateFormatterOptions } from '../types';\n\n// todo: this is duplicate, source in date-getters.ts\nexport function daysInMonth(year: number, month: number): number {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1\n    ? isLeapYear(_year) ? 29 : 28\n    : (31 - modMonth % 7 % 2);\n}\n\nexport function initMonth() {\n// FORMATTING\n\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMonth(date, opts.isUTC) + 1).toString(10);\n    }\n  );\n\n  addFormatToken('MMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('MMMM', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.months(date, opts.format, opts.isUTC);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('month', 'M');\n\n// PRIORITY\n\n  addUnitPriority('month', 8);\n\n// PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function(isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function(isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n\n  addParseToken(['M', 'MM'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = toInt(input) - 1;\n\n    return config;\n  });\n\n  addParseToken(\n    ['MMM', 'MMMM'],\n    function(input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\n      const month = config._locale.monthsParse(input, token, config._strict);\n      // if we didn't find a month name, mark the date as invalid.\n      if (month != null) {\n        array[MONTH] = month;\n      } else {\n        getParsingFlags(config).invalidMonth = !!input;\n      }\n\n      return config;\n    }\n  );\n}\n","import { TimeUnit } from '../types';\nimport { daysInMonth } from '../units/month';\nimport { isNumber } from './type-checks';\nimport { getDate, getFullYear, getMonth } from './date-getters';\nimport { isLeapYear } from '../units/year';\nimport { createDate } from '../create/date-from-array';\n\nconst defaultTimeUnit: TimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(\n    year,\n    month,\n    day,\n    date.getHours() + (_unit.hour || 0),\n    date.getMinutes() + (_unit.minute || 0),\n    date.getSeconds() + (_unit.seconds || 0)\n  );\n}\n\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\n  return createDate(\n    getNum(date.getFullYear(), unit.year),\n    getNum(date.getMonth(), unit.month),\n    1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour),\n    getNum(date.getMinutes(), unit.minute),\n    getNum(date.getSeconds(), unit.seconds),\n    getNum(date.getMilliseconds(), unit.milliseconds)\n  );\n}\n\nfunction getNum(def: number, num?: number): number {\n  return isNumber(num) ? num : def;\n}\n\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n\n  return date;\n}\n\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n\n  return date;\n}\n\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n\n  return date;\n}\n\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n\n  return date;\n}\n\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n\n  return date;\n}\n\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n\n  return date;\n}\n\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setTime(date: Date, value: number): Date {\n  date.setTime(value);\n\n  return date;\n}\n","// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nexport function cloneDate(date: Date): Date {\n  return new Date(date.getTime());\n}\n","// tslint:disable: switch-default\nimport { TimeUnit, UnitOfTime } from '../types';\nimport {\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\n  shiftDate\n} from './date-setters';\nimport { cloneDate } from '../create/clone';\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getMonth } from './date-getters';\nimport { add, subtract } from '../moment/add-subtract';\n\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {isUTC});\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n\n  return res;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { getDay } from '../utils/date-getters';\nimport { addRegexToken, match1to2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { add } from '../moment/add-subtract';\nimport { getLocale } from '../locale/locales';\n\n\nexport function initDayOfWeek() {\n// FORMATTING\n\n  addFormatToken('d', null, 'do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDay(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('dd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('ddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('dddd', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }\n  );\n\n  addFormatToken('e', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n        .toString(10);\n      // return getDay(date, opts.isUTC).toString(10);\n    }\n  );\n  addFormatToken('E', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getISODayOfWeek(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n\n// PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n\n  addRegexToken('dd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n\n  addRegexToken('ddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function(isStrict: boolean, locale: Locale): RegExp {\n    return locale.weekdaysRegex(isStrict);\n  });\n\n  addWeekParseToken(\n    ['dd', 'ddd', 'dddd'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token) {\n      const weekday = config._locale.weekdaysParse(input, token, config._strict);\n      // if we didn't get a weekday name, mark the date as invalid\n      if (weekday != null) {\n        week.d = weekday;\n      } else {\n        getParsingFlags(config).invalidWeekday = !!input;\n      }\n\n      return config;\n    }\n  );\n\n  addWeekParseToken(\n    ['d', 'e', 'E'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token] = toInt(input);\n\n      return config;\n    }\n  );\n}\n\n// HELPERS\n\nexport function parseWeekday(input: string | number, locale: Locale): number {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n\n// MOMENTS\n\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC);\n}\n\n/********************************************/\n\n// todo: utc\n// getSetLocaleDayOfWeek\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n\n  return add(date, input - weekday, 'day');\n}\n\n\n// getSetISODayOfWeek\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC) || 7;\n}\n\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  const weekday = parseIsoWeekday(input, opts.locale);\n\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n","import { addFormatToken } from '../format/format';\nimport { startOf } from '../utils/start-end-of';\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { toInt } from '../utils/type-checks';\nimport { add } from '../moment/add-subtract';\n\n\nexport function initDayOfYear() {\n// FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n    function(date: Date): string {\n      return getDayOfYear(date)\n        .toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(\n    ['DDD', 'DDDD'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      config._dayOfYear = toInt(input);\n\n      return config;\n    }\n  );\n}\n\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  return Math.round(someDate / oneDay) + 1;\n}\n\nexport function setDayOfYear(date: Date, input: number): Date {\n  const dayOfYear = getDayOfYear(date);\n\n  return add(date, (input - dayOfYear), 'day');\n}\n","/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nimport { createUTCDate } from '../create/date-from-array';\nimport { daysInYear } from './year';\nimport { getDayOfYear } from './day-of-year';\nimport { getFullYear } from '../utils/date-getters';\n\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nexport function dayOfYearFromWeeks(\n  year: number,\n  week: number,\n  weekday: number,\n  dow: number,\n  doy: number\n): { year: number; dayOfYear: number } {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear: number;\n  let resDayOfYear: number;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek: number;\n  let resYear: number;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nexport function weeksInYear(year: number, dow: number, doy: number): number {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","// tslint:disable:max-file-line-count max-line-length cyclomatic-complexity\n\nimport { weekOfYear } from '../units/week-calendar-utils';\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\nimport { getDay, getMonth } from '../utils/date-getters';\nimport { matchWord, regexEscape } from '../parse/regex';\nimport { setDayOfWeek } from '../units/day-of-week';\n\nexport interface LocaleOptionsFormat {\n  format: string[];\n  standalone: string[];\n  isFormat?: RegExp;\n}\n\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n  '_'\n);\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n  '_'\n);\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nexport const defaultLongDateFormat: { [index: string]: string } = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n\nexport const defaultOrdinal = '%d';\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\n\nexport type OrdinalDateFn = (num: number, token?: string) => string;\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\n                               key?: string, isFuture?: boolean) => string;\n\nexport interface LocaleData {\n  abbr?: string;\n  parentLocale?: string;\n\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsParseExact?: boolean;\n\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysParseExact?: boolean;\n\n  longDateFormat?: { [index: string]: string };\n  calendar?: {\n    [key: string]: (string\n      | ((date: Date, now?: Date) => string)\n      // tslint:disable-next-line\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\n  };\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\n  dayOfMonthOrdinalParse?: RegExp;\n  ordinal?: string | OrdinalDateFn;\n\n  week?: { dow?: number; doy?: number };\n\n  invalidDate?: string;\n\n  monthsRegex?: RegExp;\n  monthsParse?: RegExp[];\n  monthsShortRegex?: RegExp;\n  monthsStrictRegex?: RegExp;\n  monthsShortStrictRegex?: RegExp;\n  longMonthsParse?: RegExp[];\n  shortMonthsParse?: RegExp[];\n\n  meridiemParse?: RegExp;\n\n  meridiemHour?(hour: number, meridiem: string): number;\n\n  preparse?(str: string): string;\n\n  preinput?(input: Date): Date;\n\n  postvalue?(value: Date): Date;\n\n  postformat?(str: string | number): string;\n\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\n\n  isPM?(input: string): boolean;\n}\n\nexport class Locale {\n  parentLocale?: Locale;\n  _abbr: string;\n  _config: LocaleData;\n  meridiemHour: (hour: number, meridiem: string) => number;\n\n  _invalidDate: string;\n  _week: { dow: number; doy: number };\n  _dayOfMonthOrdinalParse: RegExp;\n  _ordinalParse: RegExp;\n  _meridiemParse: RegExp;\n\n  private _calendar: { [key: string]: string };\n  private _relativeTime: { future: string; past: string };\n  private _months: LocaleOptions;\n  private _monthsShort: LocaleOptions;\n  private _monthsRegex: RegExp;\n  private _monthsShortRegex: RegExp;\n  private _monthsStrictRegex: RegExp;\n  private _monthsShortStrictRegex: RegExp;\n  private _monthsParse: RegExp[];\n  private _longMonthsParse: string[] | RegExp[];\n  private _shortMonthsParse: string[] | RegExp[];\n  private _monthsParseExact: RegExp;\n  private _weekdaysParseExact: boolean;\n  private _weekdaysRegex: RegExp;\n  private _weekdaysShortRegex: RegExp;\n  private _weekdaysMinRegex: RegExp;\n\n  private _weekdaysStrictRegex: RegExp;\n  private _weekdaysShortStrictRegex: RegExp;\n  private _weekdaysMinStrictRegex: RegExp;\n\n  private _weekdays: LocaleOptions;\n  private _weekdaysShort: string[];\n  private _weekdaysMin: string[];\n  private _weekdaysParse: string[] | RegExp[];\n  private _minWeekdaysParse: string[] | RegExp[];\n  private _shortWeekdaysParse: string[] | RegExp[];\n  private _fullWeekdaysParse: RegExp[];\n  private _longDateFormat: { [key: string]: string };\n\n  private _ordinal: string;\n\n  constructor(config: LocaleData) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n\n  set(config: LocaleData): void {\n    let confKey;\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey as keyof LocaleData];\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\n\n      this[key] = prop as any;\n    }\n\n    this._config = config;\n  }\n\n  calendar(key: string, date: Date, now: Date): string {\n    const output = this._calendar[key] || this._calendar.sameElse;\n\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n\n  longDateFormat(key: string) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  get invalidDate(): string {\n    return this._invalidDate;\n  }\n\n  set invalidDate(val: string) {\n    this._invalidDate = val;\n  }\n\n  ordinal(num: number, token?: string): string {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n\n  preparse(str: string) {\n    return str;\n  }\n\n  preinput(input: Date) {\n    return input;\n  }\n\n  postvalue(value: Date) {\n    return value;\n  }\n\n  postformat(str: string) {\n    return str;\n  }\n\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\n    const output = this._relativeTime[str];\n\n    return (isFunction(output)) ?\n      output(num, withoutSuffix, str, isFuture) :\n      output.replace(/%d/i, num.toString(10));\n  }\n\n  pastFuture(diff: number, output: string): string {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  /** Months */\n  months(): string[];\n  months(date: Date, format?: string, isUTC?: boolean): string;\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._months)\n        ? this._months\n        : this._months.standalone;\n    }\n\n    if (isArray<string>(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._months[key][getMonth(date, isUTC)];\n  }\n\n  monthsShort(): string[];\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._monthsShort)\n        ? this._monthsShort\n        : this._monthsShort.standalone;\n    }\n\n    if (isArray<string>(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\n    let date;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ?\n      this._monthsStrictRegex : this._monthsRegex;\n  }\n\n  monthsShortRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ?\n      this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n\n  /** Week */\n  week(date: Date, isUTC?: boolean): number {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n\n  firstDayOfWeek(): number {\n    return this._week.dow;\n  }\n\n  firstDayOfYear(): number {\n    return this._week.doy;\n  }\n\n  /** Day of Week */\n  weekdays(): string[];\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return isArray<string>(this._weekdays)\n        ? this._weekdays\n        : this._weekdays.standalone;\n    }\n\n    if (isArray<string>(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n\n    const _key = this._weekdays.isFormat.test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n\n  weekdaysMin(): string[];\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n\n  weekdaysShort(): string[];\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n\n\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\n    let i;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\n        || !isArray<RegExp>(this._shortWeekdaysParse)\n        || !isArray<RegExp>(this._minWeekdaysParse)\n        || !isArray<RegExp>(this._weekdaysParse)) {\n        return;\n      }\n\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict: boolean) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input: string): boolean {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n\n  formatLongDate(key: string) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[\n      key\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n    return ii !== -1 ? ii : null;\n  }\n\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray<string>(this._weekdaysParse)\n      || !isArray<string>(this._shortWeekdaysParse)\n      || !isArray<string>(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  private computeMonthsParse() {\n    const shortPieces: string[] = [];\n    const longPieces: string[] = [];\n    const mixedPieces: string[] = [];\n    let date;\n\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n\n  private computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\n\nfunction cmpLenRev(a: string, b: string): number {\n  return b.length - a.length;\n}\n","export const defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n","import {\n  defaultDayOfMonthOrdinalParse,\n  defaultLocaleMonths,\n  defaultLocaleMonthsShort,\n  defaultLocaleWeekdays,\n  defaultLocaleWeekdaysMin,\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\n  LocaleData\n} from './locale.class';\nimport { defaultCalendar } from './calendar';\n\nexport const defaultInvalidDate = 'Invalid date';\n\nexport const defaultLocaleWeek = {\n  dow: 0, // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\nexport const defaultRelativeTime: {[key: string]: string} = {\n  future : 'in %s',\n  past   : '%s ago',\n  s  : 'a few seconds',\n  ss : '%d seconds',\n  m  : 'a minute',\n  mm : '%d minutes',\n  h  : 'an hour',\n  hh : '%d hours',\n  d  : 'a day',\n  dd : '%d days',\n  M  : 'a month',\n  MM : '%d months',\n  y  : 'a year',\n  yy : '%d years'\n};\n\nexport const baseConfig: LocaleData = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n\n  week: defaultLocaleWeek,\n\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n\n  meridiemParse: defaultLocaleMeridiemParse\n};\n","// compare two arrays, return the number of differences\nimport { toInt } from './type-checks';\n\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if ((dontConvert && array1[i] !== array2[i])\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { weekOfYear } from './week-calendar-utils';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\nexport function initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getWeek(date, opts.locale)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n    function(date: Date): string {\n      return getISOWeek(date)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n\n// PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n\n  addWeekParseToken(\n    ['w', 'ww', 'W', 'WW'],\n    function(input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n      week[token.substr(0, 1)] = toInt(input);\n\n      return config;\n    }\n  );\n\n// export function getSetWeek (input) {\n//   var week = this.localeData().week(this);\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n}\n\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\n  const week = getWeek(date, locale);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return locale.week(date, isUTC);\n}\n\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\nexport function setISOWeek(date: Date, input: number): Date {\n  const week = getISOWeek(date);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n","import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { parseTwoDigitYear } from './year';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\nimport { createUTCDate } from '../create/date-from-array';\nimport { getISOWeek, getWeek } from './week';\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\nimport { getLocale } from '../locale/locales';\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\nimport { Locale } from '../locale/locale.class';\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\n\n// FORMATTING\n\nexport function initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n    function (date: Date, opts: DateFormatterOptions): string {\n      // return this.weekYear() % 100;\n      return (getWeekYear(date, opts.locale) % 100).toString();\n    }\n  );\n\n  addFormatToken(null, ['GG', 2, false], null,\n    function (date: Date): string {\n      // return this.isoWeekYear() % 100;\n      return (getISOWeekYear(date) % 100).toString();\n    }\n  );\n\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n\n// ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n    function (input, week: WeekParsing, config, token) {\n      week[token.substr(0, 2)] = toInt(input);\n\n      return config;\n    });\n\n  addWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\n    week[token] = parseTwoDigitYear(input);\n\n    return config;\n  });\n}\n\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\n  return getWeekYear(date, opts.locale).toString();\n}\n\nfunction _getISOWeekYearFormatCb(date: Date): string {\n  return getISOWeekYear(date).toString();\n}\n\n// MOMENTS\n\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date,\n    input,\n    // this.week(),\n    getWeek(date, locale, isUTC),\n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC),\n    locale.firstDayOfWeek(),\n    locale.firstDayOfYear(),\n    isUTC);\n}\n\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n\nfunction setWeekAll(date: Date, weekYear: number, week: number,\n                    weekday: number, dow: number, doy: number): Date {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n\n  return date;\n}\n","import { addFormatToken } from '../format/format';\nimport { unix } from '../utils/date-getters';\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\nimport { addParseToken} from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initTimestamp() {\n// FORMATTING\n\n  addFormatToken('X', null, null, function(date: Date): string {\n    return unix(date)\n      .toString(10);\n  });\n  addFormatToken('x', null, null, function(date: Date): string {\n    return date.valueOf()\n      .toString(10);\n  });\n\n// PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n\n  addParseToken('X', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(parseFloat(input) * 1000);\n\n    return config;\n  });\n  addParseToken('x', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._d = new Date(toInt(input));\n\n    return config;\n  });\n}\n","import { addFormatToken } from '../format/format';\nimport { addRegexToken, match1 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { getMonth } from '../utils/date-getters';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { setMonth } from '../utils/date-setters';\n\n\nexport function initQuarter() {\n// FORMATTING\n\n  addFormatToken('Q', null, 'Qo',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getQuarter(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\n  addUnitPriority('quarter', 7);\n\n// PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MONTH] = (toInt(input) - 1) * 3;\n\n    return config;\n  });\n}\n\n// MOMENTS\n\nexport function getQuarter(date: Date, isUTC = false): number {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n","// tslint:disable:no-bitwise max-line-length\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\nimport { add } from '../moment/add-subtract';\nimport { addParseToken } from '../parse/token';\nimport { DateArray } from '../types';\nimport { cloneDate } from '../create/clone';\nimport { setMonth } from '../utils/date-setters';\n\nfunction addOffsetFormatToken(token: string, separator: string): void {\n  addFormatToken(token, null, null, function (date: Date, config): string {\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n  });\n}\n\nexport function initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', '');\n\n// PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n\n    return config;\n  });\n}\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher: RegExp, str: string): number {\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nexport function cloneWithOffset(input: Date, date: Date,\n                                config: DateParsingConfig = {}): Date {\n  if (!config._isUTC) {\n    return input;\n  }\n\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n\nexport function getDateOffset(date: Date): number {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n\nexport function isDaylightSavingTime(date: Date): boolean {\n\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n\n\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { Locale } from '../locale/locale.class';\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\n\n\nexport function initHour() {\n// FORMATTING\n\n  function hFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n\n  function kFormat(date: Date, isUTC: boolean): number {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getHours(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('h', ['hh', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return hFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n  addFormatToken('k', ['kk', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return kFormat(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n  addFormatToken('hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}`;\n    }\n  );\n\n  addFormatToken('hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _h = hFormat(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_h}${_mm}${_ss}`;\n    }\n  );\n\n  addFormatToken('Hmm', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}`;\n    }\n  );\n\n  addFormatToken('Hmmss', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      const _H = getHours(date, opts.isUTC);\n      const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n      const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n      return `${_H}${_mm}${_ss}`;\n    }\n  );\n\n  function meridiem(token: string, lowercase: boolean): void {\n    addFormatToken(token, null, null,\n      function(date: Date, opts: DateFormatterOptions): string {\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n      }\n    );\n  }\n\n  meridiem('a', true);\n  meridiem('A', false);\n\n// ALIASES\n\n  addUnitAlias('hour', 'h');\n\n// PRIORITY\n  addUnitPriority('hour', 13);\n\n\n// PARSING\n\n  function matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(\n    ['k', 'kk'],\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      const kInput = toInt(input);\n      array[HOUR] = kInput === 24 ? 0 : kInput;\n\n      return config;\n    }\n  );\n  addParseToken(['a', 'A'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n\n    return config;\n  });\n  addParseToken(['h', 'hh'], function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n\n    return config;\n  });\n  addParseToken('Hmm', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n\n    return config;\n  });\n  addParseToken('Hmmss', function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n\n    return config;\n  });\n\n}\n","// internal storage for locale config files\nimport { Locale, LocaleData } from './locale.class';\nimport { baseConfig } from './locale.defaults';\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\nimport { compareArrays } from '../utils/compare-arrays';\n\nimport { initWeek } from '../units/week';\nimport { initWeekYear } from '../units/week-year';\nimport { initYear } from '../units/year';\nimport { initTimezone } from '../units/timezone';\nimport { initTimestamp } from '../units/timestamp';\nimport { initSecond } from '../units/second';\nimport { initQuarter } from '../units/quarter';\nimport { initOffset } from '../units/offset';\nimport { initMinute } from '../units/minute';\nimport { initMillisecond } from '../units/millisecond';\nimport { initMonth } from '../units/month';\nimport { initHour } from '../units/hour';\nimport { initDayOfYear } from '../units/day-of-year';\nimport { initDayOfWeek } from '../units/day-of-week';\nimport { initDayOfMonth } from '../units/day-of-month';\n\nconst locales: { [key: string]: Locale } = {};\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\nlet globalLocale: Locale;\n\nfunction normalizeLocale(key: string): string {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names: string[]): Locale {\n  let next;\n  let locale;\n  let i = 0;\n\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n\n  return null;\n}\n\nexport function mergeConfigs(parentConfig: LocaleData,\n                             childConfig: LocaleData) {\n  const res: LocaleData = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp as any] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp as any] = childConfig[childProp];\n    } else {\n      delete res[childProp as any];\n    }\n  }\n  for (const parentProp in parentConfig) {\n    if (\n      hasOwnProp(parentConfig, parentProp) &&\n      !hasOwnProp(childConfig, parentProp) &&\n      isObject(parentConfig[parentProp as keyof LocaleData])\n    ) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp as any] = Object.assign({}, res[parentProp as keyof LocaleData]);\n    }\n  }\n\n  return res;\n}\n\n\nfunction loadLocale(name: string): Locale {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\n  let data: Locale;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n\nexport function defineLocale(name: string, config?: LocaleData): Locale {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({ name, config });\n\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n\n\n  return locales[name];\n}\n\nexport function updateLocale(name: string, config?: LocaleData): Locale {\n  let _config = config;\n\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n}\n\n// returns locale data\nexport function getLocale(key?: string | string[]): Locale {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n\nexport function listLocales(): string[] {\n  return Object.keys(locales);\n}\n\nfunction setDefaultLocale(): void {\n  if (locales[`en`]) {\n\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal(num: number): string {\n      const b = num % 10;\n      const output =\n        toInt((num % 100) / 10) === 1\n          ? 'th'\n          : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n\n      return num + output;\n    }\n  });\n\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n","import { addFormatToken } from '../format/format';\nimport { DateFormatterOptions } from '../types';\n\n// todo: add support for timezones\n\nexport function initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'UTC' : '';\n    }\n  );\n  addFormatToken('zz', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return opts.isUTC ? 'Coordinated Universal Time' : '';\n    }\n  );\n}\n\n// MOMENTS\n\nexport function getZoneAbbr(isUTC: boolean) {\n  return isUTC ? 'UTC' : '';\n}\n\nexport function getZoneName(isUTC: boolean) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n","import { addFormatToken } from '../format/format';\nimport { getSeconds } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { SECOND } from './constants';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initSecond() {\n// FORMATTING\n\n  addFormatToken('s', ['ss', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getSeconds(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('second', 's');\n\n// PRIORITY\n\n  addUnitPriority('second', 15);\n\n// PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n","import { addFormatToken } from '../format/format';\nimport { getMinutes } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MINUTE } from './constants';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n\nexport function initMinute() {\n// FORMATTING\n\n  addFormatToken('m', ['mm', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getMinutes(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('minute', 'm');\n\n// PRIORITY\n\n  addUnitPriority('minute', 14);\n\n// PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n","// tslint:disable:no-bitwise\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\nimport { MILLISECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addParseToken } from '../parse/token';\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getMilliseconds } from '../utils/date-getters';\n\n\nexport function initMillisecond() {\n  addFormatToken('S', null, null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SS', 2, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    }\n  );\n\n  addFormatToken(null, ['SSS', 3, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC)).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSS', 4, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSS', 5, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    }\n  );\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n    function(date: Date, opts: DateFormatterOptions): string {\n      return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    }\n  );\n\n\n// ALIASES\n\n  addUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\n  addUnitPriority('millisecond', 16);\n\n// PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n\n  let token;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n// MOMENTS\n}\n","import { addFormatToken } from '../format/format';\nimport { getDate } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n\nexport function initDayOfMonth() {\n// FORMATTING\n\n  addFormatToken('D', ['DD', 2, false], 'Do',\n    function(date: Date, opts: DateFormatterOptions): string {\n      return getDate(date, opts.isUTC)\n        .toString(10);\n    }\n  );\n\n// ALIASES\n\n  addUnitAlias('date', 'D');\n\n// PRIOROITY\n  addUnitPriority('date', 9);\n\n// PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function(isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken(\n    'Do',\n    function(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[DATE] = toInt(input.match(match1to2)[0]);\n\n      return config;\n    }\n  );\n}\n","import { toInt } from '../utils/type-checks';\nimport { createDuration } from './create';\nimport { Duration } from './constructor';\nimport { DateObject } from '../types';\n\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\n  mem[order] = true;\n\n  return mem;\n}, {});\n\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys\n      .some((key: keyof DateObject) => {\n        return (key in orderingHash)\n          && duration[key] === null\n          || isNaN(duration[key]);\n      })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n","export function absCeil (number: number): number {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n","import { Duration } from './constructor';\nimport { absFloor } from '../utils';\nimport { absCeil } from '../utils/abs-ceil';\n\nexport function bubble(dur: Duration): Duration {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n\n  days += absFloor(hours / 24);\n\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n\n  data.day = days;\n  data.month = months;\n  data.year = years;\n\n  return dur;\n}\n\nexport function daysToMonths(day: number): number {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n\nexport function monthsToDays(month: number): number {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n","// tslint:disable:cyclomatic-complexity\nimport { createDuration } from './create';\nimport { Locale } from '../locale/locale.class';\nimport { Duration } from './constructor';\n\nlet round = Math.round;\nconst thresholds: { [key: string]: number } = {\n  ss: 44,         // a few seconds to seconds\n  s: 45,         // seconds to minute\n  m: 45,         // minutes to hour\n  h: 22,         // hours to day\n  d: 26,         // days to month\n  M: 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\n                           withoutSuffix: boolean, isFuture: boolean,\n                           locale: Locale): string {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n\n  const a: [string] | [string, number] =\n    seconds <= thresholds.ss && ['s', seconds] ||\n    seconds < thresholds.s && ['ss', seconds] ||\n    minutes <= 1 && ['m'] ||\n    minutes < thresholds.m && ['mm', minutes] ||\n    hours <= 1 && ['h'] ||\n    hours < thresholds.h && ['hh', hours] ||\n    days <= 1 && ['d'] ||\n    days < thresholds.d && ['dd', days] ||\n    months <= 1 && ['M'] ||\n    months < thresholds.M && ['MM', months] ||\n    years <= 1 && ['y'] || ['yy', years];\n\n  const b: [string, number | string, boolean, boolean, Locale] =\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n}\n\n// This function allows you to set the rounding function for relative time strings\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | Function {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof(roundingFunction) === 'function') {\n    round = roundingFunction;\n\n    return true;\n  }\n\n  return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n","import { getLocale } from '../locale/locales';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isDurationValid } from './valid';\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\nimport { DateObject } from '../types';\nimport { Locale } from '../locale/locale.class';\nimport { normalizeUnits } from '../units/aliases';\nimport { relativeTime } from './humanize';\nimport { toInt } from '../utils/type-checks';\n\nexport class Duration {\n  _milliseconds: number;\n  _days: number;\n  _months: number;\n  _data: Partial<DateObject> = {};\n  _locale: Locale = getLocale();\n  _isValid: boolean;\n\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n      seconds * 1000 +\n      minutes * 60 * 1000 + // 1000 * 60\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n      weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n      quarters * 3 +\n      years * 12;\n\n    // this._data = {};\n\n    // this._locale = getLocale();\n\n    // this._bubble();\n    return bubble(this);\n  }\n\n  isValid(): boolean {\n    return this._isValid;\n  }\n\n  humanize(withSuffix?: boolean): string {\n    // throw new Error(`TODO: implement`);\n\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  localeData(): Locale {\n    return this._locale;\n  }\n\n  locale(): string;\n  locale(localeKey: string): Duration;\n  locale(localeKey?: string): Duration | string {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n\n    return this;\n  }\n\n\n  abs(): Duration {\n    const mathAbs = Math.abs;\n\n    const data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n\n    return this;\n  }\n\n  as(_units: string): number {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      return units === 'month' ? months : months / 12;\n    }\n\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week'   :\n        return days / 7 + milliseconds / 6048e5;\n      case 'day'    :\n        return days + milliseconds / 864e5;\n      case 'hours'   :\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes' :\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds' :\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n\n  valueOf () {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return (\n      this._milliseconds +\n      this._days * 864e5 +\n      (this._months % 12) * 2592e6 +\n      toInt(this._months / 12) * 31536e6\n    );\n  }\n}\n\nexport function isDuration(obj: any): obj is Duration {\n  return obj instanceof Duration;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { getParsingFlags } from './parsing-flags';\n\nexport function isValid(config: DateParsingConfig): boolean {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n      flags.overflow < 0 &&\n      !flags.empty &&\n      !flags.invalidMonth &&\n      !flags.invalidWeekday &&\n      !flags.weekdayMismatch &&\n      !flags.nullInput &&\n      !flags.invalidFormat &&\n      !flags.userInvalidated &&\n      (!flags.meridiem || (flags.meridiem && parsedParts));\n\n    if (config._strict) {\n      isNowValid = isNowValid &&\n        flags.charsLeftOver === 0 &&\n        flags.unusedTokens.length === 0 &&\n        flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n\n  return config;\n}\n\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\n  config._isValid = false;\n\n  return config;\n}\n","// tslint:disable-next-line\nimport { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from './parsing.types';\nimport { isString } from '../utils/type-checks';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { createUTCDate } from './date-from-array';\nimport { createInvalid, markInvalid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nconst isoDates: [string, RegExp, boolean][] = [\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n  ['YYYYMMDD', /\\d{8}/, true],\n  // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n  ['YYYYDDD', /\\d{7}/, true]\n];\n\n// iso time formats and regexes\nconst isoTimes: [string, RegExp][] = [\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n  ['HH:mm', /\\d\\d:\\d\\d/],\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n  ['HHmm', /\\d\\d\\d\\d/],\n  ['HH', /\\d\\d/]\n];\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\nconst obsOffsets: { [key: string]: number } = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n// date from iso format\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n\n\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n\n      return config;\n    }\n\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\n  return configFromStringAndFormat(config);\n}\n\n// tslint:disable-next-line\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\n  const result = [\n    untruncateYear(yearStr),\n    defaultLocaleMonthsShort.indexOf(monthStr),\n    parseInt(dayStr, 10),\n    parseInt(hourStr, 10),\n    parseInt(minuteStr, 10)\n  ];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n\nfunction untruncateYear(yearStr: string): number {\n  const year = parseInt(yearStr, 10);\n\n  return year <= 49 ? year + 2000 : year;\n}\n\nfunction preprocessRFC2822(str: string): string {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n    .replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n\n    return h * 60 + m;\n  }\n}\n\n// date and time from ref 2822 format\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n\n  return config;\n}\n\n// date from iso format or fallback\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n\n    return config;\n  }\n\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n","// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\n\nimport './units/index';\nimport { formatFunctions, makeFormatFunction } from './format/format';\nimport { Locale } from './locale/locale.class';\nimport { getLocale } from './locale/locales';\nimport { isDateValid } from './utils/type-checks';\n\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\n    );\n  }\n\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n}\n\n// format date using native date object\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n\nexport function expandFormat(_format: string, locale: Locale): string {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n  const replaceLongDateFormatTokens = (input: any) => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n","// Pick the first defined of two or three arguments.\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { DateArray } from '../types';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\nimport { daysInYear } from '../units/year';\nimport { getParsingFlags } from './parsing-flags';\nimport { createUTCDate } from './date-from-array';\nimport { createDate } from './date-from-array';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\nimport { defaults } from '../utils/defaults';\n\nfunction currentDateArray(config: DateParsingConfig): DateArray {\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\n  const input = [];\n  let i;\n  let date;\n  let currentDate;\n  let expectedWeekday;\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config);\n\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n  }\n\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 &&\n    config._a[MINUTE] === 0 &&\n    config._a[SECOND] === 0 &&\n    config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n\n  // check for mismatching day of week\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\n  let w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n  w = config._w;\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4;\n\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n    // Default to current week.\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n","import { getParsingFlags } from './parsing-flags';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\nimport { daysInMonth } from '../units/month';\nimport { DateParsingConfig } from './parsing.types';\n\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\n  let overflow;\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow =\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n\n","import { DateParsingConfig } from './parsing.types';\nimport { configFromISO, configFromRFC2822 } from './from-string';\nimport { expandFormat } from '../format';\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\nimport { isArray, isString } from '../utils/type-checks';\nimport { getParseRegexForToken } from '../parse/regex';\nimport { addTimeToArrayFromToken } from '../parse/token';\nimport { HOUR } from '../units/constants';\nimport { configFromArray } from './from-array';\nimport { getParsingFlags } from './parsing-flags';\nimport { checkOverflow } from './check-overflow';\nimport { Locale } from '../locale/locale.class';\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nexport const ISO_8601 = 'ISO_8601';\n\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nexport const RFC_2822 = 'RFC_2822';\n\n// date from string and format string\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\n    return config;\n  }\n\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 &&\n    getParsingFlags(config).bigHour === true &&\n    config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n  configFromArray(config);\n\n  return checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n","import { normalizeObjectUnits } from '../units/aliases';\nimport { configFromArray } from './from-array';\nimport { DateParsingConfig } from './parsing.types';\nimport { isObject, isString } from '../utils/type-checks';\n\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\n  if (config._d) {\n    return config;\n  }\n\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input as any);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n","// tslint:disable:max-line-length\nimport { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\nimport { DateParsingConfig } from './parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { createInvalid, isValid } from './valid';\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { cloneDate } from './clone';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\nimport { checkOverflow } from './check-overflow';\nimport { DateInput } from '../test/chain';\n\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n  return res;\n}\n\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\n  let input = config._i;\n  const format = config._f;\n\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || (format === undefined && input === '')) {\n    return createInvalid(config, { nullInput: true });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n\n    return config;\n  }\n\n  // todo: add check for recursion\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray<string | number>(input) && input.length) {\n    const _arr: (string | number)[] = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\n  const config: DateParsingConfig = {};\n  let _input = input;\n\n  // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n\n  // todo: fail fast and return not valid date\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n\n  return createFromConfig(config);\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { createInvalid, isValid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\nimport { configFromStringAndFormat } from './from-string-and-format';\n\n// date from string and array of format strings\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n\n    return createInvalid(config);\n  }\n\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n","import { createLocalOrUTC } from './from-anything';\nimport { DateInput } from '../test/chain';\nimport { isDate } from '../utils/type-checks';\n\nexport function parseDate(input: DateInput, format?: string | string[],\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\n  if (isDate(input)) {\n    return input;\n  }\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n\n  return config._d;\n}\n\nexport function utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n    date.getUTCMilliseconds()\n  );\n}\n","export function absRound(num: number): number {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n","import { UnitOfTime } from '../types';\nimport { endOf, startOf } from './start-end-of';\n\nexport function isAfter(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n\nexport function isBefore(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n\nexport function isDisabledDay(date: Date, daysDisabled: number[]): boolean {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some((day: number) => day === date.getDay());\n}\n\nexport function isBetween(\n  date: Date,\n  from: Date,\n  to: Date,\n  units: UnitOfTime,\n  inclusivity = '()'\n): boolean {\n  const leftBound =\n    inclusivity[0] === '('\n      ? isAfter(date, from, units)\n      : !isBefore(date, from, units);\n  const rightBound =\n    inclusivity[1] === ')'\n      ? isBefore(date, to, units)\n      : !isAfter(date, to, units);\n\n  return leftBound && rightBound;\n}\n\nexport function isSame(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n\n  const inputMs = date2.valueOf();\n\n  return (\n    startOf(date1, units).valueOf() <= inputMs &&\n    inputMs <= endOf(date1, units).valueOf()\n  );\n}\n\nexport function isSameDay(date1: Date, date2: Date):boolean{\n  return (date1.getDay() == date2.getDay());\n}\n\nexport function isSameOrAfter(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n\nexport function isSameOrBefore(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n","// ASP.NET json date format regex\nimport { Duration, isDuration } from './constructor';\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\nimport { parseDate } from '../create/local';\nimport { absRound } from '../utils/abs-round';\nimport { DateObject } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { cloneWithOffset } from '../units/offset';\nimport { isAfter, isBefore } from '../utils/date-compare';\nimport { getFullYear, getMonth } from '../utils/date-getters';\nimport { add } from '../moment/add-subtract';\nimport { cloneDate } from '../create/clone';\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\n\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? { [key]: input } : { milliseconds: input };\n  }\n\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : 1;\n\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n\n  }\n\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n}\n\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\nfunction parseIso(inp: string, sign: number): number {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  const res = { milliseconds: 0, months: 0 };\n\n  res.months = getMonth(other) - getMonth(base) +\n    (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n\n  return res;\n}\n\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return { milliseconds: 0, months: 0 };\n  }\n\n  let res;\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n","import { createDuration } from '../duration/create';\nimport { absRound } from '../utils/abs-round';\nimport { Duration } from '../duration/constructor';\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\nimport { cloneDate } from '../create/clone';\nimport { UnitOfTime } from '../types';\n\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, 1, isUTC);\n}\n\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, -1, isUTC);\n}\n\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\nimport { LocaleData } from '../locale/locale.class';\n\nconst symbolMap: {[key: string]: string} = {\n  1: 'Ù¡',\n  2: 'Ù¢',\n  3: 'Ù£',\n  4: 'Ù¤',\n  5: 'Ù¥',\n  6: 'Ù¦',\n  7: 'Ù§',\n  8: 'Ù¨',\n  9: 'Ù©',\n  0: 'Ù '\n};\nconst numberMap: {[key: string]: string} = {\n  'Ù¡': '1',\n  'Ù¢': '2',\n  'Ù£': '3',\n  'Ù¤': '4',\n  'Ù¥': '5',\n  'Ù¦': '6',\n  'Ù§': '7',\n  'Ù¨': '8',\n  'Ù©': '9',\n  'Ù ': '0'\n};\nconst pluralForm = function (num: number): number {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\n  s: ['Ø£ÙÙ ÙÙ Ø«Ø§ÙÙØ©', 'Ø«Ø§ÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø«Ø§ÙÙØªØ§Ù', 'Ø«Ø§ÙÙØªÙÙ'], '%d Ø«ÙØ§Ù', '%d Ø«Ø§ÙÙØ©', '%d Ø«Ø§ÙÙØ©'],\n  m: ['Ø£ÙÙ ÙÙ Ø¯ÙÙÙØ©', 'Ø¯ÙÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø¯ÙÙÙØªØ§Ù', 'Ø¯ÙÙÙØªÙÙ'], '%d Ø¯ÙØ§Ø¦Ù', '%d Ø¯ÙÙÙØ©', '%d Ø¯ÙÙÙØ©'],\n  h: ['Ø£ÙÙ ÙÙ Ø³Ø§Ø¹Ø©', 'Ø³Ø§Ø¹Ø© ÙØ§Ø­Ø¯Ø©', ['Ø³Ø§Ø¹ØªØ§Ù', 'Ø³Ø§Ø¹ØªÙÙ'], '%d Ø³Ø§Ø¹Ø§Øª', '%d Ø³Ø§Ø¹Ø©', '%d Ø³Ø§Ø¹Ø©'],\n  d: ['Ø£ÙÙ ÙÙ ÙÙÙ', 'ÙÙÙ ÙØ§Ø­Ø¯', ['ÙÙÙØ§Ù', 'ÙÙÙÙÙ'], '%d Ø£ÙØ§Ù', '%d ÙÙÙÙØ§', '%d ÙÙÙ'],\n  M: ['Ø£ÙÙ ÙÙ Ø´ÙØ±', 'Ø´ÙØ± ÙØ§Ø­Ø¯', ['Ø´ÙØ±Ø§Ù', 'Ø´ÙØ±ÙÙ'], '%d Ø£Ø´ÙØ±', '%d Ø´ÙØ±Ø§', '%d Ø´ÙØ±'],\n  y: ['Ø£ÙÙ ÙÙ Ø¹Ø§Ù', 'Ø¹Ø§Ù ÙØ§Ø­Ø¯', ['Ø¹Ø§ÙØ§Ù', 'Ø¹Ø§ÙÙÙ'], '%d Ø£Ø¹ÙØ§Ù', '%d Ø¹Ø§ÙÙØ§', '%d Ø¹Ø§Ù']\n};\nconst pluralize = function (u: string) {\n  return function (num: number, withoutSuffix: boolean): string {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n\n    return (str as string).replace(/%d/i, num.toString());\n  };\n};\nconst months: string[] = [\n  'ÙÙØ§ÙØ±',\n  'ÙØ¨Ø±Ø§ÙØ±',\n  'ÙØ§Ø±Ø³',\n  'Ø£Ø¨Ø±ÙÙ',\n  'ÙØ§ÙÙ',\n  'ÙÙÙÙÙ',\n  'ÙÙÙÙÙ',\n  'Ø£ØºØ³Ø·Ø³',\n  'Ø³Ø¨ØªÙØ¨Ø±',\n  'Ø£ÙØªÙØ¨Ø±',\n  'ÙÙÙÙØ¨Ø±',\n  'Ø¯ÙØ³ÙØ¨Ø±'\n];\n\nexport const arLocale: LocaleData = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'Ø§ÙØ£Ø­Ø¯_Ø§ÙØ¥Ø«ÙÙÙ_Ø§ÙØ«ÙØ§Ø«Ø§Ø¡_Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡_Ø§ÙØ®ÙÙØ³_Ø§ÙØ¬ÙØ¹Ø©_Ø§ÙØ³Ø¨Øª'.split('_'),\n  weekdaysShort: 'Ø£Ø­Ø¯_Ø¥Ø«ÙÙÙ_Ø«ÙØ§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®ÙÙØ³_Ø¬ÙØ¹Ø©_Ø³Ø¨Øª'.split('_'),\n  weekdaysMin: 'Ø­_Ù_Ø«_Ø±_Ø®_Ø¬_Ø³'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /Øµ|Ù/,\n  isPM(input) {\n    return 'Ù' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Øµ';\n    } else {\n      return 'Ù';\n    }\n  },\n  calendar: {\n    sameDay: '[Ø§ÙÙÙÙ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextDay: '[ØºØ¯ÙØ§ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastDay: '[Ø£ÙØ³ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Ø¨Ø¹Ø¯ %s',\n    past: 'ÙÙØ° %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str: string): string {\n    return str.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (match) {\n      return numberMap[match];\n    }).replace(/Ø/g, ',');\n  },\n  postformat(str: string) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, 'Ø');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { Khronos } from '../test/chain';\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\nexport const bgLocale: LocaleData = {\n  abbr: 'bg',\n  months: 'ÑÐ½ÑÐ°ÑÐ¸_ÑÐµÐ²ÑÑÐ°ÑÐ¸_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐ¸Ð»_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸_Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸_Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸_Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸'.split('_'),\n  monthsShort: 'ÑÐ½Ñ_ÑÐµÐ²_Ð¼Ð°Ñ_Ð°Ð¿Ñ_Ð¼Ð°Ð¹_ÑÐ½Ð¸_ÑÐ»Ð¸_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ_Ð½Ð¾Ðµ_Ð´ÐµÐº'.split('_'),\n  weekdays: 'Ð½ÐµÐ´ÐµÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÑÐ´Ð°_ÑÐµÑÐ²ÑÑÑÑÐº_Ð¿ÐµÑÑÐº_ÑÑÐ±Ð¾ÑÐ°'.split('_'),\n  weekdaysShort: 'Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²ÑÐ¾_ÑÑÑ_ÑÐµÑ_Ð¿ÐµÑ_ÑÑÐ±'.split('_'),\n  weekdaysMin: 'Ð½Ð´_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[ÐÐ½ÐµÑ Ð²] LT',\n    nextDay: '[Ð£ÑÑÐµ Ð²] LT',\n    nextWeek: 'dddd [Ð²] LT',\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\n    lastWeek: function (d: any) {\n\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð°ÑÐ°] dddd [Ð²] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[Ð Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð¸Ñ] dddd [Ð²] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'ÑÐ»ÐµÐ´ %s',\n    past: 'Ð¿ÑÐµÐ´Ð¸ %s',\n    s: 'Ð½ÑÐºÐ¾Ð»ÐºÐ¾ ÑÐµÐºÑÐ½Ð´Ð¸',\n    ss: '%d ÑÐµÐºÑÐ½Ð´Ð¸',\n    m: 'Ð¼Ð¸Ð½ÑÑÐ°',\n    mm: '%d Ð¼Ð¸Ð½ÑÑÐ¸',\n    h: 'ÑÐ°Ñ',\n    hh: '%d ÑÐ°ÑÐ°',\n    d: 'Ð´ÐµÐ½',\n    dd: '%d Ð´Ð½Ð¸',\n    M: 'Ð¼ÐµÑÐµÑ',\n    MM: '%d Ð¼ÐµÑÐµÑÐ°',\n    y: 'Ð³Ð¾Ð´Ð¸Ð½Ð°',\n    yy: '%d Ð³Ð¾Ð´Ð¸Ð½Ð¸'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ÐµÐ²|ÐµÐ½|ÑÐ¸|Ð²Ð¸|ÑÐ¸|Ð¼Ð¸)/,\n  ordinal: function (_num: number): string {\n\n    const number = Number(_num);\n\n    let lastDigit = number % 10,\n      last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ÐµÐ²';\n    } else if (last2Digits === 0) {\n      return number + '-ÐµÐ½';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ÑÐ¸';\n    } else if (lastDigit === 1) {\n      return number + '-Ð²Ð¸';\n    } else if (lastDigit === 2) {\n      return number + '-ÑÐ¸';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-Ð¼Ð¸';\n    } else {\n      return number + '-ÑÐ¸';\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex = /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n\nexport const caLocale: LocaleData = {\n  abbr: 'ca',\n  months: 'gener_febrer_marÃ§_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|marÃ§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|Ã©)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const output = (num > 4) ? 'Ã©' :\n        (num === 1 || num === 3) ? 'r' :\n          (num === 2) ? 'n' :\n            (num === 4) ? 't' : 'Ã©';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nconst months: string[] = 'leden_Ãºnor_bÅezen_duben_kvÄten_Äerven_Äervenec_srpen_zÃ¡ÅÃ­_ÅÃ­jen_listopad_prosinec'.split('_');\nconst monthsShort: string[] = 'led_Ãºno_bÅe_dub_kvÄ_Ävn_Ävc_srp_zÃ¡Å_ÅÃ­j_lis_pro'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekund' : 'pÃ¡r sekundami';\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':  // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':  // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':  // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dnÃ­');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':  // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mÄsÃ­c' : 'mÄsÃ­cem';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mÄsÃ­ce' : 'mÄsÃ­cÅ¯');\n      } else {\n        return result + 'mÄsÃ­ci';\n      }\n    // break;\n    case 'y':  // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\n\nexport const csLocale: LocaleData = {\n  abbr: 'cs',\n  months,\n  monthsShort,\n  monthsParse: (function (months, monthsShort) {\n    let i, _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (Äervenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months, monthsShort)),\n  shortMonthsParse: (function (monthsShort) {\n    let i, _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort)),\n  longMonthsParse: (function (months) {\n    let i, _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months)),\n  weekdays: 'nedÄle_pondÄlÃ­_ÃºterÃ½_stÅeda_Ätvrtek_pÃ¡tek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  weekdaysMin: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zÃ­tra v] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve stÅedu v] LT';\n        case 4:\n          return '[ve Ätvrtek v] LT';\n        case 5:\n          return '[v pÃ¡tek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[vÄera v] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[minulÃ©] dddd [v] LT';\n        case 3:\n          return '[minulou stÅedu v] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'pÅed %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\nexport const daLocale: LocaleData = {\n  abbr: 'da',\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'SÃ¸ndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_LÃ¸rdag'.split('_'),\n  weekdaysShort : 'SÃ¸n_Man_Tir_Ons_Tor_Fre_LÃ¸r'.split('_'),\n  weekdaysMin : 'SÃ¸_Ma_Ti_On_To_Fr_LÃ¸'.split('_'),\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'DD/MM/YYYY',\n      LL : 'D. MMMM YYYY',\n      LLL : 'D. MMMM YYYY HH:mm',\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar : {\n      sameDay : '[i dag kl.] LT',\n      nextDay : '[i morgen kl.] LT',\n      nextWeek : 'pÃ¥ dddd [kl.] LT',\n      lastDay : '[i gÃ¥r kl.] LT',\n      lastWeek : '[i] dddd[s kl.] LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'om %s',\n      past : '%s siden',\n      s : 'fÃ¥ sekunder',\n      m : 'et minut',\n      mm : '%d minutter',\n      h : 'en time',\n      hh : '%d timer',\n      d : 'en dag',\n      dd : '%d dage',\n      M : 'en mÃ¥ned',\n      MM : '%d mÃ¥neder',\n      y : 'et Ã¥r',\n      yy : '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion ElensÃºle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const format: { [key: string]: [string, string] } = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport const deLocale: LocaleData = {\n  abbr: 'de',\n  months: 'Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const enGbLocale: LocaleData = {\n  abbr: 'en-gb',\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'in %s',\n    past : '%s ago',\n    s : 'a few seconds',\n    ss : '%d seconds',\n    m : 'a minute',\n    mm : '%d minutes',\n    h : 'an hour',\n    hh : '%d hours',\n    d : 'a day',\n    dd : '%d days',\n    M : 'a month',\n    MM : '%d months',\n    y : 'a year',\n    yy : '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\n        (b === 1) ? 'st' :\n          (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n    return num + output;\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esDoLocale: LocaleData = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio NapurÃ­ : https://github.com/julionc\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esLocale: LocaleData = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nexport const esUsLocale: LocaleData = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\nconst processRelativeTime = function (num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  const format = {\n      s : ['mÃµne sekundi', 'mÃµni sekund', 'paar sekundit'],\n      ss: [num + 'sekundi', num + 'sekundit'],\n      m : ['Ã¼he minuti', 'Ã¼ks minut'],\n      mm: [num + ' minuti', num + ' minutit'],\n      h : ['Ã¼he tunni', 'tund aega', 'Ã¼ks tund'],\n      hh: [num + ' tunni', num + ' tundi'],\n      d : ['Ã¼he pÃ¤eva', 'Ã¼ks pÃ¤ev'],\n      M : ['kuu aja', 'kuu aega', 'Ã¼ks kuu'],\n      MM: [num + ' kuu', num + ' kuud'],\n      y : ['Ã¼he aasta', 'aasta', 'Ã¼ks aasta'],\n      yy: [num + ' aasta', num + ' aastat']\n  };\n  if (withoutSuffix) {\n      return format[key][2] ? format[key][2] : format[key][1];\n  }\n  return isFuture ? format[key][0] : format[key][1];\n};\n\nexport const etLocale: LocaleData = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_mÃ¤rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_mÃ¤rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pÃ¼hapÃ¤ev_esmaspÃ¤ev_teisipÃ¤ev_kolmapÃ¤ev_neljapÃ¤ev_reede_laupÃ¤ev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT:   'H:mm',\n    LTS:  'H:mm:ss',\n    L:    'DD.MM.YYYY',\n    LL:   'D. MMMM YYYY',\n    LLL:  'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay:  '[TÃ¤na,] LT',\n    nextDay:  '[Homme,] LT',\n    nextWeek: '[JÃ¤rgmine] dddd LT',\n    lastDay:  '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : '%s pÃ¤rast',\n    past   : '%s tagasi',\n    s      : processRelativeTime,\n    ss     : processRelativeTime,\n    m      : processRelativeTime,\n    mm     : processRelativeTime,\n    h      : processRelativeTime,\n    hh     : processRelativeTime,\n    d      : processRelativeTime,\n    dd     : '%d pÃ¤eva',\n    M      : processRelativeTime,\n    MM     : processRelativeTime,\n    y      : processRelativeTime,\n    yy     : processRelativeTime\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\nvar numbersPast = 'nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n'.split(' '),\n  numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljÃ¤n', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n  ];\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤';\n    case 'dd':\n      result = isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤Ã¤';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n\nfunction verbalNumber(num: number, isFuture: boolean) {\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n\nexport const fiLocale: LocaleData = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tÃ¤nÃ¤Ã¤n] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pÃ¤Ã¤stÃ¤',\n    past: '%s sitten',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\nexport const frLocale: LocaleData = {\n  abbr: 'fr',\n  months: 'janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre'.split('_'),\n  monthsShort: 'janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourdâhui Ã ] LT',\n    nextDay: '[Demain Ã ] LT',\n    nextWeek: 'dddd [Ã ] LT',\n    lastDay: '[Hier Ã ] LT',\n    lastWeek: 'dddd [dernier Ã ] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : DarÃ­o BeirÃ³ : https://github.com/quinobravo\n\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuÃ±._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort = 'xan_feb_mar_abr_mai_xuÃ±_xul_ago_set_out_nov_dec'.split('_');\n\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuÃ±/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n\nexport const glLocale: LocaleData = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuÃ±o_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_luns_martes_mÃ©rcores_xoves_venres_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mÃ©r._xov._ven._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mÃ©_xo_ve_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoxe Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±an Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[onte Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[o] dddd [pasado Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\nexport const heLocale: LocaleData = {\n  abbr: 'he',\n  months: '×× ×××¨_×¤××¨×××¨_××¨×¥_××¤×¨××_×××_××× ×_××××_×××××¡×_×¡×¤××××¨_×××§××××¨_× ×××××¨_××¦×××¨'.split('_'),\n  monthsShort: '×× ××³_×¤××¨×³_××¨×¥_××¤×¨×³_×××_××× ×_××××_××××³_×¡×¤××³_×××§×³_× ×××³_××¦××³'.split('_'),\n  weekdays: '×¨××©××_×©× ×_×©×××©×_×¨×××¢×_××××©×_×©××©×_×©××ª'.split('_'),\n  weekdaysShort: '××³_××³_××³_××³_××³_××³_×©×³'.split('_'),\n  weekdaysMin: '×_×_×_×_×_×_×©'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [×]MMMM YYYY',\n    LLL: 'D [×]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [×]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[×××× ×Ö¾]LT',\n    nextDay: '[×××¨ ×Ö¾]LT',\n    nextWeek: 'dddd [××©×¢×] LT',\n    lastDay: '[××ª××× ×Ö¾]LT',\n    lastWeek: '[××××] dddd [××××¨×× ××©×¢×] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '××¢×× %s',\n    past: '××¤× × %s',\n    s: '××¡×¤×¨ ×©× ×××ª',\n    ss: '%d ×©× ×××ª',\n    m: '××§×',\n    mm: '%d ××§××ª',\n    h: '×©×¢×',\n    hh(num: number): string {\n      if (num === 2) {\n        return '×©×¢×ª×××';\n      }\n      return num + ' ×©×¢××ª';\n    },\n    d: '×××',\n    dd(num: number): string {\n      if (num === 2) {\n        return '××××××';\n      }\n      return num + ' ××××';\n    },\n    M: '××××©',\n    MM(num: number): string {\n      if (num === 2) {\n        return '××××©×××';\n      }\n      return num + ' ××××©××';\n    },\n    y: '×©× ×',\n    yy(num: number): string {\n      if (num === 2) {\n        return '×©× ×ª×××';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' ×©× ×';\n      }\n      return num + ' ×©× ××';\n    }\n  },\n  meridiemParse: /×××\"×¦|××¤× ×\"×¦|×××¨× ××¦××¨×××|××¤× × ××¦××¨×××|××¤× ××ª ×××§×¨|××××§×¨|××¢×¨×/i,\n  isPM(input) {\n    return /^(×××\"×¦|×××¨× ××¦××¨×××|××¢×¨×)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return '××¤× ××ª ×××§×¨';\n    } else if (hour < 10) {\n      return '××××§×¨';\n    } else if (hour < 12) {\n      return isLower ? '××¤× ×\"×¦' : '××¤× × ××¦××¨×××';\n    } else if (hour < 18) {\n      return isLower ? '×××\"×¦' : '×××¨× ××¦××¨×××';\n    } else {\n      return '××¢×¨×';\n    }\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\nlet symbolMap: {[key: string]: string} = {\n    1: 'à¥§',\n    2: 'à¥¨',\n    3: 'à¥©',\n    4: 'à¥ª',\n    5: 'à¥«',\n    6: 'à¥¬',\n    7: 'à¥­',\n    8: 'à¥®',\n    9: 'à¥¯',\n    0: 'à¥¦'\n  },\n  numberMap: {[key: string]: string} = {\n    'à¥§': '1',\n    'à¥¨': '2',\n    'à¥©': '3',\n    'à¥ª': '4',\n    'à¥«': '5',\n    'à¥¬': '6',\n    'à¥­': '7',\n    'à¥®': '8',\n    'à¥¯': '9',\n    'à¥¦': '0'\n  };\n\nexport const hiLocale: LocaleData = {\n  abbr: 'hi',\n  months: 'à¤à¤¨à¤µà¤°à¥_à¤«à¤¼à¤°à¤µà¤°à¥_à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥à¤²_à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²à¤¾à¤_à¤à¤à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤à¤à¥à¤à¥à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°'.split('_'),\n  monthsShort: 'à¤à¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥._à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²._à¤à¤._à¤¸à¤¿à¤¤._à¤à¤à¥à¤à¥._à¤¨à¤µ._à¤¦à¤¿à¤¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥à¤®à¤µà¤¾à¤°_à¤®à¤à¤à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤à¥à¤°à¥à¤µà¤¾à¤°_à¤¶à¥à¤à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°'.split('_'),\n  weekdaysShort: 'à¤°à¤µà¤¿_à¤¸à¥à¤®_à¤®à¤à¤à¤²_à¤¬à¥à¤§_à¤à¥à¤°à¥_à¤¶à¥à¤à¥à¤°_à¤¶à¤¨à¤¿'.split('_'),\n  weekdaysMin: 'à¤°_à¤¸à¥_à¤®à¤_à¤¬à¥_à¤à¥_à¤¶à¥_à¤¶'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm à¤¬à¤à¥',\n    LTS: 'A h:mm:ss à¤¬à¤à¥',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm à¤¬à¤à¥',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm à¤¬à¤à¥'\n  },\n  calendar: {\n    sameDay: '[à¤à¤] LT',\n    nextDay: '[à¤à¤²] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[à¤à¤²] LT',\n    lastWeek: '[à¤ªà¤¿à¤à¤²à¥] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s à¤®à¥à¤',\n    past: '%s à¤ªà¤¹à¤²à¥',\n    s: 'à¤à¥à¤ à¤¹à¥ à¤à¥à¤·à¤£',\n    ss: '%d à¤¸à¥à¤à¤à¤¡',\n    m: 'à¤à¤ à¤®à¤¿à¤¨à¤',\n    mm: '%d à¤®à¤¿à¤¨à¤',\n    h: 'à¤à¤ à¤à¤à¤à¤¾',\n    hh: '%d à¤à¤à¤à¥',\n    d: 'à¤à¤ à¤¦à¤¿à¤¨',\n    dd: '%d à¤¦à¤¿à¤¨',\n    M: 'à¤à¤ à¤®à¤¹à¥à¤¨à¥',\n    MM: '%d à¤®à¤¹à¥à¤¨à¥',\n    y: 'à¤à¤ à¤µà¤°à¥à¤·',\n    yy: '%d à¤µà¤°à¥à¤·'\n  },\n  preparse(str: string): string {\n    return str.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str: string): string {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'à¤°à¤¾à¤¤') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¸à¥à¤¬à¤¹') {\n      return hour;\n    } else if (meridiem === 'à¤¦à¥à¤ªà¤¹à¤°') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¶à¤¾à¤®') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'à¤°à¤¾à¤¤';\n    } else if (hour < 10) {\n      return 'à¤¸à¥à¤¬à¤¹';\n    } else if (hour < 17) {\n      return 'à¤¦à¥à¤ªà¤¹à¤°';\n    } else if (hour < 20) {\n      return 'à¤¶à¤¾à¤®';\n    } else {\n      return 'à¤°à¤¾à¤¤';\n    }\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\nlet weekEndings = 'vasÃ¡rnap hÃ©tfÅn kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton'.split(' ');\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  switch (key) {\n    case 's':\n      return (isFuture || withoutSuffix) ? 'nÃ©hÃ¡ny mÃ¡sodperc' : 'nÃ©hÃ¡ny mÃ¡sodperce';\n    case 'ss':\n      return num + ((isFuture || withoutSuffix) ? ' mÃ¡sodperc' : ' mÃ¡sodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n  }\n  return '';\n}\nfunction week(date: Date, isFuture: boolean) {\n  return (isFuture ? '' : '[mÃºlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n\nexport const huLocale: LocaleData = {\n  abbr: 'hu',\n  months : 'januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december'.split('_'),\n  monthsShort : 'jan_feb_mÃ¡rc_Ã¡pr_mÃ¡j_jÃºn_jÃºl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays : 'vasÃ¡rnap_hÃ©tfÅ_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat'.split('_'),\n  weekdaysShort : 'vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo'.split('_'),\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat : {\n    LT : 'H:mm',\n    LTS : 'H:mm:ss',\n    L : 'YYYY.MM.DD.',\n    LL : 'YYYY. MMMM D.',\n    LLL : 'YYYY. MMMM D. H:mm',\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM (input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem (hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar : {\n    sameDay : '[ma] LT[-kor]',\n    nextDay : '[holnap] LT[-kor]',\n    nextWeek (date: Date) {\n      return week(date, true);\n    },\n    lastDay : '[tegnap] LT[-kor]',\n    lastWeek (date: Date) {\n      return week(date, false);\n    },\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s mÃºlva',\n    past : '%s',\n    s : translate,\n    ss : translate,\n    m : translate,\n    mm : translate,\n    h : translate,\n    hh : translate,\n    d : translate,\n    dd : translate,\n    M : translate,\n    MM : translate,\n    y : translate,\n    yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\nexport const hrLocale: LocaleData = {\n  abbr: 'hr',\n  months: 'SijeÄanj_VeljaÄa_OÅ¾ujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_OÅ¾u_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Äetvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Äet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Äe_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[JuÄer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? '.' :\n        (b === 1) ? '.' :\n          (b === 2) ? '.' :\n            (b === 3) ? '.' : '.';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\nexport const idLocale: LocaleData = {\n  abbr: 'id',\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat : {\n    LT : 'HH.mm',\n    LTS : 'HH.mm.ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar : {\n    sameDay : '[Hari ini pukul] LT',\n    nextDay : '[Besok pukul] LT',\n    nextWeek : 'dddd [pukul] LT',\n    lastDay : '[Kemarin pukul] LT',\n    lastWeek : 'dddd [lalu pukul] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'dalam %s',\n    past : '%s yang lalu',\n    s : 'beberapa detik',\n    ss : '%d detik',\n    m : 'semenit',\n    mm : '%d menit',\n    h : 'sejam',\n    hh : '%d jam',\n    d : 'sehari',\n    dd : '%d hari',\n    M : 'sebulan',\n    MM : '%d bulan',\n    y : 'setahun',\n    yy : '%d tahun'\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\nexport const itLocale: LocaleData = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num: number): string {\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\nexport const jaLocale: LocaleData =  {\n  abbr: 'ja',\n  months : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  monthsShort : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays : 'æ¥ææ¥_æææ¥_ç«ææ¥_æ°´ææ¥_æ¨ææ¥_éææ¥_åææ¥'.split('_'),\n  weekdaysShort : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  weekdaysMin : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'YYYY/MM/DD',\n    LL : 'YYYYå¹´MæDæ¥',\n    LLL : 'YYYYå¹´MæDæ¥ HH:mm',\n    LLLL : 'YYYYå¹´MæDæ¥ HH:mm dddd',\n    l : 'YYYY/MM/DD',\n    ll : 'YYYYå¹´MæDæ¥',\n    lll : 'YYYYå¹´MæDæ¥ HH:mm',\n    llll : 'YYYYå¹´MæDæ¥ HH:mm dddd'\n  },\n  meridiemParse: /åå|åå¾/i,\n  isPM (input) {\n    return input === 'åå¾';\n  },\n  meridiem (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'åå';\n    } else {\n      return 'åå¾';\n    }\n  },\n  calendar : {\n    sameDay : '[ä»æ¥] LT',\n    nextDay : '[ææ¥] LT',\n    nextWeek : '[æ¥é±]dddd LT',\n    lastDay : '[æ¨æ¥] LT',\n    lastWeek : '[åé±]dddd LT',\n    sameElse : 'L'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}æ¥/,\n  ordinal (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime : {\n    future : '%så¾',\n    past : '%så',\n    s : 'æ°ç§',\n    ss : '%dç§',\n    m : '1å',\n    mm : '%då',\n    h : '1æé',\n    hh : '%dæé',\n    d : '1æ¥',\n    dd : '%dæ¥',\n    M : '1ã¶æ',\n    MM : '%dã¶æ',\n    y : '1å¹´',\n    yy : '%då¹´'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\nexport const kaLocale: LocaleData =  {\n  abbr: 'ka',\n  months : {\n    format: 'áááááá á¡_ááááá áááá¡_ááá á¢á¡_ááá áááá¡_áááá¡á¡_ááááá¡á¡_ááááá¡á¡_ááááá¡á¢á¡_á¡áá¥á¢ááááá á¡_áá¥á¢ááááá á¡_ááááááá á¡_áááááááá á¡'.split('_'),\n    standalone: 'áááááá á_ááááá áááá_ááá á¢á_ááá ááá_áááá¡á_ááááá¡á_ááááá¡á_ááááá¡á¢á_á¡áá¥á¢ááááá á_áá¥á¢ááááá á_ááááááá á_áááááááá á'.split('_')\n  },\n  monthsShort : 'ááá_ááá_ááá _ááá _ááá_ááá_ááá_ááá_á¡áá¥_áá¥á¢_ááá_ááá'.split('_'),\n  weekdays : {\n    standalone: 'áááá á_áá á¨ááááá_á¡ááá¨ááááá_ááá®á¨ááááá_á®á£áá¨ááááá_ááá áá¡áááá_á¨ááááá'.split('_'),\n    format: 'áááá áá¡_áá á¨ááááá¡_á¡ááá¨ááááá¡_ááá®á¨ááááá¡_á®á£áá¨ááááá¡_ááá áá¡áááá¡_á¨ááááá¡'.split('_'),\n    isFormat: /(á¬ááá|á¨ááááá)/\n  },\n  weekdaysShort : 'ááá_áá á¨_á¡áá_ááá®_á®á£á_ááá _á¨áá'.split('_'),\n  weekdaysMin : 'áá_áá _á¡á_áá_á®á£_áá_á¨á'.split('_'),\n  longDateFormat : {\n    LT : 'h:mm A',\n    LTS : 'h:mm:ss A',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY h:mm A',\n    LLLL : 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar : {\n    sameDay : '[áá¦áá¡] LT[-áá]',\n    nextDay : '[á®ááá] LT[-áá]',\n    lastDay : '[áá£á¨áá] LT[-áá]',\n    nextWeek : '[á¨ááááá] dddd LT[-áá]',\n    lastWeek : '[á¬ááá] dddd LT-áá',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future(s: number): string {\n      var st = s.toString();\n      return (/(á¬ááá|á¬á£áá|á¡áááá|á¬ááá)/).test(st) ?\n      st.replace(/á$/, 'á¨á') :\n      st + 'á¨á';\n    },\n    past(s: number): string {\n      var st = s.toString();\n      if ((/(á¬ááá|á¬á£áá|á¡áááá|áá¦á|ááá)/).test(st)) {\n        return st.replace(/(á|á)$/, 'áá¡ á¬áá');\n      }\n      if ((/á¬ááá/).test(st)) {\n        return st.replace(/á¬ááá$/, 'á¬ááá¡ á¬áá');\n      }\n    },\n    s : 'á áááááááá á¬ááá',\n    ss : '%d á¬ááá',\n    m : 'á¬á£áá',\n    mm : '%d á¬á£áá',\n    h : 'á¡áááá',\n    hh : '%d á¡áááá',\n    d : 'áá¦á',\n    dd : '%d áá¦á',\n    M : 'ááá',\n    MM : '%d ááá',\n    y : 'á¬ááá',\n    yy : '%d á¬ááá'\n  },\n  dayOfMonthOrdinalParse: /0|1-áá|áá-\\d{1,2}|\\d{1,2}-á/,\n  ordinal(_num: number, _period: string): string {\n    const num = Number(_num);\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num === 1) {\n      return num + '-áá';\n    }\n    if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n      return 'áá-' + num;\n    }\n    return num + '-á';\n  },\n  week : {\n    dow : 1,\n    doy : 4\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\nexport const koLocale: LocaleData = {\n  abbr: 'ko',\n  months : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  monthsShort : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  weekdays : 'ì¼ìì¼_ììì¼_íìì¼_ììì¼_ëª©ìì¼_ê¸ìì¼_í ìì¼'.split('_'),\n  weekdaysShort : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  weekdaysMin : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  longDateFormat : {\n    LT : 'A h:mm',\n    LTS : 'A h:mm:ss',\n    L : 'YYYY.MM.DD',\n    LL : 'YYYYë MMMM Dì¼',\n    LLL : 'YYYYë MMMM Dì¼ A h:mm',\n    LLLL : 'YYYYë MMMM Dì¼ dddd A h:mm',\n    l : 'YYYY.MM.DD',\n    ll : 'YYYYë MMMM Dì¼',\n    lll : 'YYYYë MMMM Dì¼ A h:mm',\n    llll : 'YYYYë MMMM Dì¼ dddd A h:mm'\n  },\n  calendar : {\n    sameDay : 'ì¤ë LT',\n    nextDay : 'ë´ì¼ LT',\n    nextWeek : 'dddd LT',\n    lastDay : 'ì´ì  LT',\n    lastWeek : 'ì§ëì£¼ dddd LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s í',\n    past : '%s ì ',\n    s : 'ëª ì´',\n    ss : '%dì´',\n    m : '1ë¶',\n    mm : '%dë¶',\n    h : 'í ìê°',\n    hh : '%dìê°',\n    d : 'íë£¨',\n    dd : '%dì¼',\n    M : 'í ë¬',\n    MM : '%dë¬',\n    y : 'ì¼ ë',\n    yy : '%dë'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}(ì¼|ì|ì£¼)/,\n  ordinal : function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'ì¼';\n      case 'M':\n        return num + 'ì';\n      case 'w':\n      case 'W':\n        return num + 'ì£¼';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse : /ì¤ì |ì¤í/,\n  isPM : function (token) {\n    return token === 'ì¤í';\n  },\n  meridiem : function (hour, minute, isUpper) {\n    return hour < 12 ? 'ì¤ì ' : 'ì¤í';\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\nconst units = {\n  ss : 'sekundÄ_sekundÅ¾iÅ³_sekundes',\n  m : 'minutÄ_minutÄs_minutÄ',\n  mm: 'minutÄs_minuÄiÅ³_minutes',\n  h : 'valanda_valandos_valandÄ',\n  hh: 'valandos_valandÅ³_valandas',\n  d : 'diena_dienos_dienÄ',\n  dd: 'dienos_dienÅ³_dienas',\n  M : 'mÄnuo_mÄnesio_mÄnesÄ¯',\n  MM: 'mÄnesiai_mÄnesiÅ³_mÄnesius',\n  y : 'metai_metÅ³_metus',\n  yy: 'metai_metÅ³_metus'\n};\nfunction translateSeconds(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  if (withoutSuffix) {\n      return 'kelios sekundÄs';\n  } else {\n      return isFuture ? 'keliÅ³ sekundÅ¾iÅ³' : 'kelias sekundes';\n  }\n}\nfunction translateSingular(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(num: number) {\n  return num % 10 === 0 || (num > 10 && num < 20);\n}\nfunction forms(key: string) {\n  return (units as any)[key].split('_');\n}\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  let result = num + ' ';\n  if (num === 1) {\n      return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n      return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n      if (isFuture) {\n          return result + forms(key)[1];\n      } else {\n          return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n      }\n  }\n}\n\nexport const ltLocale: LocaleData = {\n  abbr: 'lt',\n  months : {\n    format: 'sausio_vasario_kovo_balandÅ¾io_geguÅ¾Äs_birÅ¾elio_liepos_rugpjÅ«Äio_rugsÄjo_spalio_lapkriÄio_gruodÅ¾io'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_geguÅ¾Ä_birÅ¾elis_liepa_rugpjÅ«tis_rugsÄjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays : {\n      format: 'sekmadienÄ¯_pirmadienÄ¯_antradienÄ¯_treÄiadienÄ¯_ketvirtadienÄ¯_penktadienÄ¯_Å¡eÅ¡tadienÄ¯'.split('_'),\n      standalone: 'sekmadienis_pirmadienis_antradienis_treÄiadienis_ketvirtadienis_penktadienis_Å¡eÅ¡tadienis'.split('_'),\n      isFormat: /dddd HH:mm/\n  },\n  weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Å eÅ¡'.split('_'),\n  weekdaysMin : 'S_P_A_T_K_Pn_Å '.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'YYYY-MM-DD',\n      LL : 'YYYY [m.] MMMM D [d.]',\n      LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n      l : 'YYYY-MM-DD',\n      ll : 'YYYY [m.] MMMM D [d.]',\n      lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar : {\n      sameDay : '[Å iandien] LT',\n      nextDay : '[Rytoj] LT',\n      nextWeek : 'dddd LT',\n      lastDay : '[Vakar] LT',\n      lastWeek : '[PraÄjusÄ¯] dddd LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'po %s',\n      past : 'prieÅ¡ %s',\n      s : translateSeconds,\n      ss : translate,\n      m : translateSingular,\n      mm : translate,\n      h : translateSingular,\n      hh : translate,\n      d : translateSingular,\n      dd : translate,\n      M : translateSingular,\n      MM : translate,\n      y : translateSingular,\n      yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(num) {\n      return num + '-oji';\n  },\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\nexport const lvLocale: LocaleData = {\n  abbr: 'lv',\n  months : 'JanvÄris_FebruÄris_Marts_AprÄ«lis_Maijs_JÅ«nijs_JÅ«lijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mai_JÅ«n_JÅ«l_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'SvÄtdiena_Pirmdiena_Otrdiena_TreÅ¡diena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort : 'SvÄtd_Pirmd_Otrd_TreÅ¡d_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin : 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'pÄc %s',\n    past : 'pirms %s',\n    s : 'daÅ¾Äm sekundÄm',\n    ss : '%d sekundÄm',\n    m : 'minÅ«tes',\n    mm : '%d minÅ«tÄm',\n    h : 'stundas',\n    hh : '%d stundÄm',\n    d : 'dienas',\n    dd : '%d dienÄm',\n    M : 'mÄneÅ¡a',\n    MM : '%d mÄneÅ¡iem',\n    y : 'gada',\n    yy : '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal(num) {\n      return num + '.';\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´' : 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´ÑÐ½';\n    case 'ss':\n      return num + (withoutSuffix ? ' ÑÐµÐºÑÐ½Ð´' : ' ÑÐµÐºÑÐ½Ð´ÑÐ½');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' Ð¼Ð¸Ð½ÑÑ' : ' Ð¼Ð¸Ð½ÑÑÑÐ½');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' ÑÐ°Ð³' : ' ÑÐ°Ð³Ð¸Ð¹Ð½');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' Ó©Ð´Ó©Ñ' : ' Ó©Ð´ÑÐ¸Ð¹Ð½');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' ÑÐ°Ñ' : ' ÑÐ°ÑÑÐ½');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' Ð¶Ð¸Ð»' : ' Ð¶Ð¸Ð»Ð¸Ð¹Ð½');\n    default:\n      return num.toString(10);\n  }\n}\n\nexport const mnLocale: LocaleData = {\n  abbr: 'mn',\n  months: 'ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¥Ð¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÓ©ÑÓ©Ð²Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¢Ð°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ³Ð°Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ¾Ð»Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ°Ð¹Ð¼Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ ÑÐ¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ'.split('_'),\n  monthsShort: '1 ÑÐ°Ñ_2 ÑÐ°Ñ_3 ÑÐ°Ñ_4 ÑÐ°Ñ_5 ÑÐ°Ñ_6 ÑÐ°Ñ_7 ÑÐ°Ñ_8 ÑÐ°Ñ_9 ÑÐ°Ñ_10 ÑÐ°Ñ_11 ÑÐ°Ñ_12 ÑÐ°Ñ'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ÐÑÐ¼_ÐÐ°Ð²Ð°Ð°_ÐÑÐ³Ð¼Ð°Ñ_ÐÑÐ°Ð³Ð²Ð°_ÐÒ¯ÑÑÐ²_ÐÐ°Ð°ÑÐ°Ð½_ÐÑÐ¼Ð±Ð°'.split('_'),\n  weekdaysShort: 'ÐÑÐ¼_ÐÐ°Ð²_ÐÑÐ³_ÐÑÐ°_ÐÒ¯Ñ_ÐÐ°Ð°_ÐÑÐ¼'.split('_'),\n  weekdaysMin: 'ÐÑ_ÐÐ°_ÐÑ_ÐÑ_ÐÒ¯_ÐÐ°_ÐÑ'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D',\n    LLL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm',\n    LLLL: 'dddd, YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm'\n  },\n  meridiemParse: /Ò®Ó¨|Ò®Ð¥/i,\n  isPM: function (input) {\n    return input === 'Ò®Ð¥';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Ò®Ó¨';\n    } else {\n      return 'Ò®Ð¥';\n    }\n  },\n  calendar: {\n    sameDay: '[Ó¨Ð½Ó©Ó©Ð´Ó©Ñ] LT',\n    nextDay: '[ÐÐ°ÑÐ³Ð°Ð°Ñ] LT',\n    nextWeek: '[ÐÑÑÑ] dddd LT',\n    lastDay: '[Ó¨ÑÐ¸Ð³Ð´Ó©Ñ] LT',\n    lastWeek: '[Ó¨Ð½Ð³Ó©ÑÑÓ©Ð½] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s Ð´Ð°ÑÐ°Ð°',\n    past: '%s Ó©Ð¼Ð½Ó©',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} Ó©Ð´Ó©Ñ/,\n  ordinal: function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' Ó©Ð´Ó©Ñ';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n","// tslint:disable:comment-format\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Norwegian BokmÃ¥l [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\nexport const nbLocale: LocaleData = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag'.split('_'),\n  weekdaysShort: 'sÃ¸._ma._ti._on._to._fr._lÃ¸.'.split('_'),\n  weekdaysMin: 'sÃ¸_ma_ti_on_to_fr_lÃ¸'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i gÃ¥r kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en mÃ¥ned',\n    MM: '%d mÃ¥neder',\n    y: 'ett Ã¥r',\n    yy: '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlBeLocale: LocaleData = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'Ã©Ã©n minuut',\n    mm: '%d minuten',\n    h: 'Ã©Ã©n uur',\n    hh: '%d uur',\n    d: 'Ã©Ã©n dag',\n    dd: '%d dagen',\n    M: 'Ã©Ã©n maand',\n    MM: '%d maanden',\n    y: 'Ã©Ã©n jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlLocale: LocaleData = {\n  abbr: 'nl',\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse : monthsParse,\n  shortMonthsParse : monthsParse,\n\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD-MM-YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : 'over %s',\n    past : '%s geleden',\n    s : 'een paar seconden',\n    ss : '%d seconden',\n    m : 'Ã©Ã©n minuut',\n    mm : '%d minuten',\n    h : 'Ã©Ã©n uur',\n    hh : '%d uur',\n    d : 'Ã©Ã©n dag',\n    dd : '%d dagen',\n    M : 'Ã©Ã©n maand',\n    MM : '%d maanden',\n    y : 'Ã©Ã©n jaar',\n    yy : '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal (_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\nlet monthsNominative = 'styczeÅ_luty_marzec_kwiecieÅ_maj_czerwiec_lipiec_sierpieÅ_wrzesieÅ_paÅºdziernik_listopad_grudzieÅ'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅnia_paÅºdziernika_listopada_grudnia'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutÄ';\n    case 'mm':\n      return result + (plural(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinÄ';\n    case 'hh':\n      return result + (plural(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural(num) ? 'miesiÄce' : 'miesiÄcy');\n    case 'yy':\n      return result + (plural(num) ? 'lata' : 'lat');\n  }\n}\n\nexport const plLocale: LocaleData = {\n  abbr: 'pl',\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziaÅek_wtorek_Åroda_czwartek_piÄtek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_År_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_År_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[DziÅ o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielÄ o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W ÅrodÄ o] LT';\n\n        case 5:\n          return '[W piÄtek o] LT';\n\n        case 6:\n          return '[W sobotÄ o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszÅÄ niedzielÄ o] LT';\n        case 3:\n          return '[W zeszÅÄ ÅrodÄ o] LT';\n        case 4:\n          return '[W zeszÅÄ czwartek o] LT';\n        case 5:\n          return '[W zeszÅÄ piÄtek o] LT';\n        case 6:\n          return '[W zeszÅÄ sobotÄ o] LT';\n        default:\n          return '[W zeszÅy] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: '1 dzieÅ',\n    dd: '%d dni',\n    M: 'miesiÄc',\n    MM: translate,\n    y: 'rok',\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\nexport const ptBrLocale: LocaleData = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_MarÃ§o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_TerÃ§a-feira_Quarta-feira_Quinta-feira_Sexta-feira_SÃ¡bado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_SÃ¡b'.split('_'),\n  weekdaysMin: 'Do_2Âª_3Âª_4Âª_5Âª_6Âª_SÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [Ã s] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [Ã s] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje Ã s] LT',\n    nextDay: '[AmanhÃ£ Ã s] LT',\n    nextWeek: 'dddd [Ã s] LT',\n    lastDay: '[Ontem Ã s] LT',\n    lastWeek(date: Date) {\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n        '[Ãltimo] dddd [Ã s] LT' : // Saturday + Sunday\n        '[Ãltima] dddd [Ã s] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrÃ¡s',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mÃªs',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº'\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\nimport { LocaleData } from '../locale/locale.class';\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key:string]: string} = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n\n  let separator = ' ';\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\n\n\nexport const roLocale: LocaleData = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminicÄ_luni_marÈi_miercuri_joi_vineri_sÃ¢mbÄtÄ'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_SÃ¢'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mÃ¢ine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s Ã®n urmÄ',\n    s: 'cÃ¢teva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o orÄ',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lunÄ',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getWeek } from '../units/week';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion ElensÃºle : https://github.com/Oire\n//! author : ÐÐ¾ÑÐµÐ½Ð±ÐµÑÐ³ ÐÐ°ÑÐº : https://github.com/socketpair\n\nfunction plural(word: string, num: number): string {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key: string]: string} = {\n    ss: withoutSuffix ? 'ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´' : 'ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´',\n    mm: withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ' : 'Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ',\n    hh: 'ÑÐ°Ñ_ÑÐ°ÑÐ°_ÑÐ°ÑÐ¾Ð²',\n    dd: 'Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹',\n    MM: 'Ð¼ÐµÑÑÑ_Ð¼ÐµÑÑÑÐ°_Ð¼ÐµÑÑÑÐµÐ²',\n    yy: 'Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°' : 'Ð¼Ð¸Ð½ÑÑÑ';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nlet monthsParse = [/^ÑÐ½Ð²/i, /^ÑÐµÐ²/i, /^Ð¼Ð°Ñ/i, /^Ð°Ð¿Ñ/i, /^Ð¼Ð°[Ð¹Ñ]/i, /^Ð¸ÑÐ½/i, /^Ð¸ÑÐ»/i, /^Ð°Ð²Ð³/i, /^ÑÐµÐ½/i, /^Ð¾ÐºÑ/i, /^Ð½Ð¾Ñ/i, /^Ð´ÐµÐº/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : Â§ 103\n// Ð¡Ð¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ²: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport const ruLocale: LocaleData = {\n  abbr: 'ru',\n  months: {\n    format: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑÐ°_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑÐ°_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_'),\n    standalone: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_')\n  },\n  monthsShort: {\n    // Ð¿Ð¾ CLDR Ð¸Ð¼ÐµÐ½Ð½Ð¾ \"Ð¸ÑÐ».\" Ð¸ \"Ð¸ÑÐ½.\", Ð½Ð¾ ÐºÐ°ÐºÐ¾Ð¹ ÑÐ¼ÑÑÐ» Ð¼ÐµÐ½ÑÑÑ Ð±ÑÐºÐ²Ñ Ð½Ð° ÑÐ¾ÑÐºÑ ?\n    format: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°Ñ._Ð°Ð¿Ñ._Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_'),\n    standalone: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°ÑÑ_Ð°Ð¿Ñ._Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_')\n  },\n  weekdays: {\n    standalone: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÐ°_ÑÑÐ±Ð±Ð¾ÑÐ°'.split('_'),\n    format: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð±Ð¾ÑÑ'.split('_'),\n    isFormat: /\\[ ?[ÐÐ²] ?(?:Ð¿ÑÐ¾ÑÐ»ÑÑ|ÑÐ»ÐµÐ´ÑÑÑÑÑ|ÑÑÑ)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  weekdaysMin: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸, Ð¿Ð¾ ÑÑÐ¸ Ð±ÑÐºÐ²Ñ, Ð´Ð»Ñ Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÑ, Ð¿Ð¾ 4 Ð±ÑÐºÐ²Ñ, ÑÐ¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ñ ÑÐ¾ÑÐºÐ¾Ð¹ Ð¸ Ð±ÐµÐ· ÑÐ¾ÑÐºÐ¸\n  monthsRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // ÐºÐ¾Ð¿Ð¸Ñ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ³Ð¾\n  monthsShortRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸\n  monthsStrictRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|Ð¼Ð°ÑÑÐ°?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ»[ÑÑ]|Ð°Ð²Ð³ÑÑÑÐ°?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ])/i,\n\n  // ÐÑÑÐ°Ð¶ÐµÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÐ²ÑÐµÑ ÑÐ¾Ð»ÑÐºÐ¾ ÑÐ¾ÐºÑÐ°ÑÑÐ½Ð½ÑÐ¼ ÑÐ¾ÑÐ¼Ð°Ð¼\n  monthsShortStrictRegex: /^(ÑÐ½Ð²\\.|ÑÐµÐ²Ñ?\\.|Ð¼Ð°Ñ[Ñ.]|Ð°Ð¿Ñ\\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ.]|Ð¸ÑÐ»[ÑÑ.]|Ð°Ð²Ð³\\.|ÑÐµÐ½Ñ?\\.|Ð¾ÐºÑ\\.|Ð½Ð¾ÑÐ±?\\.|Ð´ÐµÐº\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY Ð³.',\n    LLL: 'D MMMM YYYY Ð³., H:mm',\n    LLLL: 'dddd, D MMMM YYYY Ð³., H:mm'\n  },\n  calendar: {\n    sameDay: '[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ Ð²] LT',\n    nextDay: '[ÐÐ°Ð²ÑÑÐ° Ð²] LT',\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\n    nextWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐµÐµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    lastWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»Ð¾Ðµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÐ¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'ÑÐµÑÐµÐ· %s',\n    past: '%s Ð½Ð°Ð·Ð°Ð´',\n    s: 'Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐµÐºÑÐ½Ð´',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'ÑÐ°Ñ',\n    hh: relativeTimeWithPlural,\n    d: 'Ð´ÐµÐ½Ñ',\n    dd: relativeTimeWithPlural,\n    M: 'Ð¼ÐµÑÑÑ',\n    MM: relativeTimeWithPlural,\n    y: 'Ð³Ð¾Ð´',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /Ð½Ð¾ÑÐ¸|ÑÑÑÐ°|Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°/i,\n  isPM(input) {\n    return /^(Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'Ð½Ð¾ÑÐ¸';\n    } else if (hour < 12) {\n      return 'ÑÑÑÐ°';\n    } else if (hour < 17) {\n      return 'Ð´Ð½Ñ';\n    } else {\n      return 'Ð²ÐµÑÐµÑÐ°';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-Ð¹';\n      case 'D':\n        return num + '-Ð³Ð¾';\n      case 'w':\n      case 'W':\n        return num + '-Ñ';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef PaÅ¾in : https://github.com/atiris\n\nconst months = 'januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':// a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekÃºnd' : 'pÃ¡r sekundami';\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekÃºnd');\n      }\n      else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':// a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minÃºta' : (isFuture ? 'minÃºtu' : 'minÃºtou');\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minÃºty' : 'minÃºt');\n      }\n      else {\n        return result + 'minÃºtami';\n      }\n    // break;\n    case 'h':// an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodÃ­n');\n      }\n      else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':// a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'deÅ' : 'dÅom';\n    case 'dd':// 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dni' : 'dnÃ­');\n      }\n      else {\n        return result + 'dÅami';\n      }\n    // break;\n    case 'M':// a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n    case 'MM':// 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\n      }\n      else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':// a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n    case 'yy':// 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'rokov');\n      }\n      else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\n\nexport const skLocale: LocaleData = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo Å¡tvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[vÄera o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulÃº nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[minulÃ½] dddd [o] LT';\n        case 3:\n          return '[minulÃº stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [o] LT';\n        case 6:\n          return '[minulÃº sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\n\nexport const slLocale: LocaleData = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._Äet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_Äe_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[vÄeraj ob] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejÅ¡njo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejÅ¡njo] [sredo] [ob] LT';\n        case 6:\n          return '[prejÅ¡njo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejÅ¡nji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Äez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\nexport const svLocale: LocaleData = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag'.split('_'),\n  weekdaysShort: 'sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r'.split('_'),\n  weekdaysMin: 'sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[IgÃ¥r] LT',\n    nextWeek: '[PÃ¥] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'fÃ¶r %s sedan',\n    s: 'nÃ¥gra sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en mÃ¥nad',\n    MM: '%d mÃ¥nader',\n    y: 'ett Ã¥r',\n    yy: '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    let b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\n        (b === 1) ? 'a' :\n          (b === 2) ? 'a' :\n            (b === 3) ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thLocale: LocaleData = {\n  abbr: 'th',\n  months: 'à¸¡à¸à¸£à¸²à¸à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹_à¸¡à¸µà¸à¸²à¸à¸¡_à¹à¸¡à¸©à¸²à¸¢à¸_à¸à¸¤à¸©à¸ à¸²à¸à¸¡_à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸_à¸à¸£à¸à¸à¸²à¸à¸¡_à¸ªà¸´à¸à¸«à¸²à¸à¸¡_à¸à¸±à¸à¸¢à¸²à¸¢à¸_à¸à¸¸à¸¥à¸²à¸à¸¡_à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸_à¸à¸±à¸à¸§à¸²à¸à¸¡'.split('_'),\n  monthsShort: 'à¸¡.à¸._à¸.à¸._à¸¡à¸µ.à¸._à¹à¸¡.à¸¢._à¸.à¸._à¸¡à¸´.à¸¢._à¸.à¸._à¸ª.à¸._à¸.à¸¢._à¸.à¸._à¸.à¸¢._à¸.à¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ªà¸à¸à¸µ_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'),\n  weekdaysShort: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'), // yes, three characters difference\n  weekdaysMin: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY à¹à¸§à¸¥à¸² H:mm',\n    LLLL: 'à¸§à¸±à¸ddddà¸à¸µà¹ D MMMM YYYY à¹à¸§à¸¥à¸² H:mm'\n  },\n  meridiemParse: /à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸|à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸/,\n  isPM(input) {\n    return input === 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸';\n    } else {\n      return 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n    }\n  },\n  calendar: {\n    sameDay: '[à¸§à¸±à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextDay: '[à¸à¸£à¸¸à¹à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextWeek: 'dddd[à¸«à¸à¹à¸² à¹à¸§à¸¥à¸²] LT',\n    lastDay: '[à¹à¸¡à¸·à¹à¸­à¸§à¸²à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    lastWeek: '[à¸§à¸±à¸]dddd[à¸à¸µà¹à¹à¸¥à¹à¸§ à¹à¸§à¸¥à¸²] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'à¸­à¸µà¸ %s',\n    past: '%sà¸à¸µà¹à¹à¸¥à¹à¸§',\n    s: 'à¹à¸¡à¹à¸à¸µà¹à¸§à¸´à¸à¸²à¸à¸µ',\n    ss: '%d à¸§à¸´à¸à¸²à¸à¸µ',\n    m: '1 à¸à¸²à¸à¸µ',\n    mm: '%d à¸à¸²à¸à¸µ',\n    h: '1 à¸à¸±à¹à¸§à¹à¸¡à¸',\n    hh: '%d à¸à¸±à¹à¸§à¹à¸¡à¸',\n    d: '1 à¸§à¸±à¸',\n    dd: '%d à¸§à¸±à¸',\n    M: '1 à¹à¸à¸·à¸­à¸',\n    MM: '%d à¹à¸à¸·à¸­à¸',\n    y: '1 à¸à¸µ',\n    yy: '%d à¸à¸µ'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thBeLocale: LocaleData = {\n  abbr: 'th-be',\n  months: 'à¸¡à¸à¸£à¸²à¸à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹_à¸¡à¸µà¸à¸²à¸à¸¡_à¹à¸¡à¸©à¸²à¸¢à¸_à¸à¸¤à¸©à¸ à¸²à¸à¸¡_à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸_à¸à¸£à¸à¸à¸²à¸à¸¡_à¸ªà¸´à¸à¸«à¸²à¸à¸¡_à¸à¸±à¸à¸¢à¸²à¸¢à¸_à¸à¸¸à¸¥à¸²à¸à¸¡_à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸_à¸à¸±à¸à¸§à¸²à¸à¸¡'.split('_'),\n  monthsShort: 'à¸¡.à¸._à¸.à¸._à¸¡à¸µ.à¸._à¹à¸¡.à¸¢._à¸.à¸._à¸¡à¸´.à¸¢._à¸.à¸._à¸ª.à¸._à¸.à¸¢._à¸.à¸._à¸.à¸¢._à¸.à¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ªà¸à¸à¸µ_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'),\n  weekdaysShort: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\n  weekdaysMin: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY à¹à¸§à¸¥à¸² H:mm',\n    LLLL: 'à¸§à¸±à¸ddddà¸à¸µà¹ D MMMM YYYY à¹à¸§à¸¥à¸² H:mm'\n  },\n  meridiemParse: /à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸|à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸/,\n  isPM(input) {\n    return input === 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸';\n    } else {\n      return 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n    }\n  },\n  calendar: {\n    sameDay: '[à¸§à¸±à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextDay: '[à¸à¸£à¸¸à¹à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextWeek: 'dddd[à¸«à¸à¹à¸² à¹à¸§à¸¥à¸²] LT',\n    lastDay: '[à¹à¸¡à¸·à¹à¸­à¸§à¸²à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    lastWeek: '[à¸§à¸±à¸]dddd[à¸à¸µà¹à¹à¸¥à¹à¸§ à¹à¸§à¸¥à¸²] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'à¸­à¸µà¸ %s',\n    past: '%sà¸à¸µà¹à¹à¸¥à¹à¸§',\n    s: 'à¹à¸¡à¹à¸à¸µà¹à¸§à¸´à¸à¸²à¸à¸µ',\n    ss: '%d à¸§à¸´à¸à¸²à¸à¸µ',\n    m: '1 à¸à¸²à¸à¸µ',\n    mm: '%d à¸à¸²à¸à¸µ',\n    h: '1 à¸à¸±à¹à¸§à¹à¸¡à¸',\n    hh: '%d à¸à¸±à¹à¸§à¹à¸¡à¸',\n    d: '1 à¸§à¸±à¸',\n    dd: '%d à¸§à¸±à¸',\n    M: '1 à¹à¸à¸·à¸­à¸',\n    MM: '%d à¹à¸à¸·à¸­à¸',\n    y: '1 à¸à¸µ',\n    yy: '%d à¸à¸µ'\n  },\n  preinput(input: Date): Date {\n    // just year-543 of input before next step\n    let preinputDate = new Date(input);\n    preinputDate.setFullYear(input.getFullYear()-543);\n    return preinputDate;\n  },\n  postvalue(value: Date): Date {\n    // just year+543 of value before display on ui\n    let preinputDate = new Date(value);\n    preinputDate.setFullYear(value.getFullYear()+543);\n    return preinputDate;\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak YiÄit Kaya: https://github.com/BYK\n\nlet suffixes: { [key: string]: string } = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'Ã¼ncÃ¼',\n  4: '\\'Ã¼ncÃ¼',\n  100: '\\'Ã¼ncÃ¼',\n  6: '\\'ncÄ±',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'Ä±ncÄ±',\n  90: '\\'Ä±ncÄ±'\n};\n\nexport const trLocale: LocaleData = {\n  abbr: 'tr',\n  months: 'Ocak_Åubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k'.split('_'),\n  monthsShort: 'Oca_Åub_Mar_Nis_May_Haz_Tem_AÄu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_SalÄ±_ÃarÅamba_PerÅembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Ãar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ãa_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugÃ¼n saat] LT',\n    nextDay: '[yarÄ±n saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dÃ¼n] LT',\n    lastWeek: '[geÃ§en] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s Ã¶nce',\n    s: 'birkaÃ§ saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gÃ¼n',\n    dd: '%d gÃ¼n',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yÄ±l',\n    yy: '%d yÄ±l'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|Ã¼ncÃ¼|ncÄ±|uncu|Ä±ncÄ±)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    if (num === 0) {  // special case for zero\n      return num + '\\'Ä±ncÄ±';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion ElensÃºle : https://github.com/Oire\n\nfunction plural(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix, key): string {\n  let format: { [key: string]: string } = {\n    ss: withoutSuffix ? 'ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ð¸_ÑÐµÐºÑÐ½Ð´' : 'ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ð¸_ÑÐµÐºÑÐ½Ð´',\n    mm: withoutSuffix ? 'ÑÐ²Ð¸Ð»Ð¸Ð½Ð°_ÑÐ²Ð¸Ð»Ð¸Ð½Ð¸_ÑÐ²Ð¸Ð»Ð¸Ð½' : 'ÑÐ²Ð¸Ð»Ð¸Ð½Ñ_ÑÐ²Ð¸Ð»Ð¸Ð½Ð¸_ÑÐ²Ð¸Ð»Ð¸Ð½',\n    hh: withoutSuffix ? 'Ð³Ð¾Ð´Ð¸Ð½Ð°_Ð³Ð¾Ð´Ð¸Ð½Ð¸_Ð³Ð¾Ð´Ð¸Ð½' : 'Ð³Ð¾Ð´Ð¸Ð½Ñ_Ð³Ð¾Ð´Ð¸Ð½Ð¸_Ð³Ð¾Ð´Ð¸Ð½',\n    dd: 'Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÑÐ²',\n    MM: 'Ð¼ÑÑÑÑÑ_Ð¼ÑÑÑÑÑ_Ð¼ÑÑÑÑÑÐ²',\n    yy: 'ÑÑÐº_ÑÐ¾ÐºÐ¸_ÑÐ¾ÐºÑÐ²'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'ÑÐ²Ð¸Ð»Ð¸Ð½Ð°' : 'ÑÐ²Ð¸Ð»Ð¸Ð½Ñ';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'Ð³Ð¾Ð´Ð¸Ð½Ð°' : 'Ð³Ð¾Ð´Ð¸Ð½Ñ';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nfunction weekdaysCaseReplace(date: Date, format: string, isUTC?: boolean): string | string[] {\n  let weekdays = {\n    nominative: 'Ð½ÐµÐ´ÑÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÑÐ»Ð¾Ðº_Ð²ÑÐ²ÑÐ¾ÑÐ¾Ðº_ÑÐµÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑ_Ð¿âÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð¾ÑÐ°'.split('_'),\n    accusative: 'Ð½ÐµÐ´ÑÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÑÐ»Ð¾Ðº_Ð²ÑÐ²ÑÐ¾ÑÐ¾Ðº_ÑÐµÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑ_Ð¿âÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð¾ÑÑ'.split('_'),\n    genitive: 'Ð½ÐµÐ´ÑÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÑÐ»ÐºÐ°_Ð²ÑÐ²ÑÐ¾ÑÐºÐ°_ÑÐµÑÐµÐ´Ð¸_ÑÐµÑÐ²ÐµÑÐ³Ð°_Ð¿âÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð¾ÑÐ¸'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n\n  let nounCase = (/(\\[[ÐÐ²Ð£Ñ]\\]) ?dddd/).test(format) ?\n    'accusative' :\n    ((/\\[?(?:Ð¼Ð¸Ð½ÑÐ»Ð¾Ñ|Ð½Ð°ÑÑÑÐ¿Ð½Ð¾Ñ)? ?\\] ?dddd/).test(format) ?\n      'genitive' :\n      'nominative');\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n\nfunction processHoursFunction(str: string) {\n  return function (date: Date): string {\n    return str + 'Ð¾' + (getHours(date) === 11 ? 'Ð±' : '') + '] LT';\n  };\n}\n\nexport const ukLocale: LocaleData = {\n  abbr: 'uk',\n  months: {\n    format: 'ÑÑÑÐ½Ñ_Ð»ÑÑÐ¾Ð³Ð¾_Ð±ÐµÑÐµÐ·Ð½Ñ_ÐºÐ²ÑÑÐ½Ñ_ÑÑÐ°Ð²Ð½Ñ_ÑÐµÑÐ²Ð½Ñ_Ð»Ð¸Ð¿Ð½Ñ_ÑÐµÑÐ¿Ð½Ñ_Ð²ÐµÑÐµÑÐ½Ñ_Ð¶Ð¾Ð²ÑÐ½Ñ_Ð»Ð¸ÑÑÐ¾Ð¿Ð°Ð´Ð°_Ð³ÑÑÐ´Ð½Ñ'.split('_'),\n    standalone: 'ÑÑÑÐµÐ½Ñ_Ð»ÑÑÐ¸Ð¹_Ð±ÐµÑÐµÐ·ÐµÐ½Ñ_ÐºÐ²ÑÑÐµÐ½Ñ_ÑÑÐ°Ð²ÐµÐ½Ñ_ÑÐµÑÐ²ÐµÐ½Ñ_Ð»Ð¸Ð¿ÐµÐ½Ñ_ÑÐµÑÐ¿ÐµÐ½Ñ_Ð²ÐµÑÐµÑÐµÐ½Ñ_Ð¶Ð¾Ð²ÑÐµÐ½Ñ_Ð»Ð¸ÑÑÐ¾Ð¿Ð°Ð´_Ð³ÑÑÐ´ÐµÐ½Ñ'.split('_')\n  },\n  monthsShort: 'ÑÑÑ_Ð»ÑÑ_Ð±ÐµÑ_ÐºÐ²ÑÑ_ÑÑÐ°Ð²_ÑÐµÑÐ²_Ð»Ð¸Ð¿_ÑÐµÑÐ¿_Ð²ÐµÑ_Ð¶Ð¾Ð²Ñ_Ð»Ð¸ÑÑ_Ð³ÑÑÐ´'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'Ð½Ð´_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  weekdaysMin: 'Ð½Ð´_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY Ñ.',\n    LLL: 'D MMMM YYYY Ñ., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY Ñ., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Ð¡ÑÐ¾Ð³Ð¾Ð´Ð½Ñ '),\n    nextDay: processHoursFunction('[ÐÐ°Ð²ÑÑÐ° '),\n    lastDay: processHoursFunction('[ÐÑÐ¾ÑÐ° '),\n    nextWeek: processHoursFunction('[Ð£] dddd ['),\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[ÐÐ¸Ð½ÑÐ»Ð¾Ñ] dddd [')(date);\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[ÐÐ¸Ð½ÑÐ»Ð¾Ð³Ð¾] dddd [')(date);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Ð·Ð° %s',\n    past: '%s ÑÐ¾Ð¼Ñ',\n    s: 'Ð´ÐµÐºÑÐ»ÑÐºÐ° ÑÐµÐºÑÐ½Ð´',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'Ð³Ð¾Ð´Ð¸Ð½Ñ',\n    hh: relativeTimeWithPlural,\n    d: 'Ð´ÐµÐ½Ñ',\n    dd: relativeTimeWithPlural,\n    M: 'Ð¼ÑÑÑÑÑ',\n    MM: relativeTimeWithPlural,\n    y: 'ÑÑÐº',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /Ð½Ð¾ÑÑ|ÑÐ°Ð½ÐºÑ|Ð´Ð½Ñ|Ð²ÐµÑÐ¾ÑÐ°/,\n  isPM(input) {\n    return /^(Ð´Ð½Ñ|Ð²ÐµÑÐ¾ÑÐ°)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'Ð½Ð¾ÑÑ';\n    } else if (hour < 12) {\n      return 'ÑÐ°Ð½ÐºÑ';\n    } else if (hour < 17) {\n      return 'Ð´Ð½Ñ';\n    } else {\n      return 'Ð²ÐµÑÐ¾ÑÐ°';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(Ð¹|Ð³Ð¾)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-Ð¹';\n      case 'D':\n        return num + '-Ð³Ð¾';\n      default:\n        return num.toString();\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Viá»t Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const viLocale: LocaleData = {\n  abbr: 'vi',\n  months : 'thÃ¡ng 1_thÃ¡ng 2_thÃ¡ng 3_thÃ¡ng 4_thÃ¡ng 5_thÃ¡ng 6_thÃ¡ng 7_thÃ¡ng 8_thÃ¡ng 9_thÃ¡ng 10_thÃ¡ng 11_thÃ¡ng 12'.split('_'),\n  monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays : 'chá»§ nháº­t_thá»© hai_thá»© ba_thá»© tÆ°_thá»© nÄm_thá»© sÃ¡u_thá»© báº£y'.split('_'),\n  weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact : true,\n  meridiemParse: /sa|ch/i,\n  isPM(input: string): boolean {\n    return /^ch$/i.test(input);\n  },\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM [nÄm] YYYY',\n    LLL : 'D MMMM [nÄm] YYYY HH:mm',\n    LLLL : 'dddd, D MMMM [nÄm] YYYY HH:mm',\n    l : 'DD/M/YYYY',\n    ll : 'D MMM YYYY',\n    lll : 'D MMM YYYY HH:mm',\n    llll : 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[HÃ´m nay lÃºc] LT',\n    nextDay: '[NgÃ y mai lÃºc] LT',\n    nextWeek: 'dddd [tuáº§n tá»i lÃºc] LT',\n    lastDay: '[HÃ´m qua lÃºc] LT',\n    lastWeek: 'dddd [tuáº§n trÆ°á»c lÃºc] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : '%s tá»i',\n    past : '%s trÆ°á»c',\n    s : 'vÃ i giÃ¢y',\n    ss : '%d giÃ¢y' ,\n    m : 'má»t phÃºt',\n    mm : '%d phÃºt',\n    h : 'má»t giá»',\n    hh : '%d giá»',\n    d : 'má»t ngÃ y',\n    dd : '%d ngÃ y',\n    M : 'má»t thÃ¡ng',\n    MM : '%d thÃ¡ng',\n    y : 'má»t nÄm',\n    yy : '%d nÄm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(_num: number): string {\n    return '' + _num;\n  },\n  week : {\n    dow : 1, // Thá»© Hai lÃ  ngÃ y Äáº§u tuáº§n.\n    doy : 4  // Tuáº§n chá»©a ngÃ y 4 thÃ¡ng 1 lÃ  tuáº§n Äáº§u tiÃªn trong nÄm.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\nexport const zhCnLocale: LocaleData = {\n  abbr: 'zh-cn',\n  months: 'ä¸æ_äºæ_ä¸æ_åæ_äºæ_å­æ_ä¸æ_å«æ_ä¹æ_åæ_åä¸æ_åäºæ'.split('_'),\n  monthsShort: '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays: 'æææ¥_ææä¸_ææäº_ææä¸_ææå_ææäº_ææå­'.split('_'),\n  weekdaysShort: 'å¨æ¥_å¨ä¸_å¨äº_å¨ä¸_å¨å_å¨äº_å¨å­'.split('_'),\n  weekdaysMin: 'æ¥_ä¸_äº_ä¸_å_äº_å­'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYYå¹´MæDæ¥',\n    LLL: 'YYYYå¹´MæDæ¥Ahç¹mmå',\n    LLLL: 'YYYYå¹´MæDæ¥ddddAhç¹mmå',\n    l: 'YYYY/M/D',\n    ll: 'YYYYå¹´MæDæ¥',\n    lll: 'YYYYå¹´MæDæ¥ HH:mm',\n    llll: 'YYYYå¹´MæDæ¥dddd HH:mm'\n  },\n  meridiemParse: /åæ¨|æ©ä¸|ä¸å|ä¸­å|ä¸å|æä¸/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'åæ¨' || meridiem === 'æ©ä¸' ||\n      meridiem === 'ä¸å') {\n      return hour;\n    } else if (meridiem === 'ä¸å' || meridiem === 'æä¸') {\n      return hour + 12;\n    } else {\n      // 'ä¸­å'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return 'åæ¨';\n    } else if (hm < 900) {\n      return 'æ©ä¸';\n    } else if (hm < 1130) {\n      return 'ä¸å';\n    } else if (hm < 1230) {\n      return 'ä¸­å';\n    } else if (hm < 1800) {\n      return 'ä¸å';\n    } else {\n      return 'æä¸';\n    }\n  },\n  calendar: {\n    sameDay: '[ä»å¤©]LT',\n    nextDay: '[æå¤©]LT',\n    nextWeek: '[ä¸]ddddLT',\n    lastDay: '[æ¨å¤©]LT',\n    lastWeek: '[ä¸]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(æ¥|æ|å¨)/,\n  ordinal(_num: number, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      case 'M':\n        return num + 'æ';\n      case 'w':\n      case 'W':\n        return num + 'å¨';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%så',\n    past: '%så',\n    s: 'å ç§',\n    ss: '%d ç§',\n    m: '1 åé',\n    mm: '%d åé',\n    h: '1 å°æ¶',\n    hh: '%d å°æ¶',\n    d: '1 å¤©',\n    dd: '%d å¤©',\n    M: '1 ä¸ªæ',\n    MM: '%d ä¸ªæ',\n    y: '1 å¹´',\n    yy: '%d å¹´'\n  },\n  week: {\n    // GB/T 7408-1994ãæ°æ®ååäº¤æ¢æ ¼å¼Â·ä¿¡æ¯äº¤æ¢Â·æ¥æåæ¶é´è¡¨ç¤ºæ³ãä¸ISO 8601:1988ç­æ\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]}